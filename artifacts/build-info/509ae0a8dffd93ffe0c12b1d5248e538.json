{
	"id": "509ae0a8dffd93ffe0c12b1d5248e538",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"HumAidTokenv2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract HumAidv2 is ERC20, Ownable(address(msg.sender)) {\r\n    uint256 public feePercent = 5; // 0.5% = 5 / 1000\r\n\r\n    mapping (address => string) public ngoNames;\r\n    address[] public ngoWallets;\r\n\r\n    mapping(address => bool) private _isExcludedFromFee;\r\n\r\n    address public treasuryWallet;\r\n\r\n    constructor() ERC20(\"HumAidv2\", \"HMM\") {\r\n        _isExcludedFromFee[msg.sender] = true;\r\n\r\n        // Mint 1 billion HUM to the deployer\r\n        _mint(msg.sender, 1_000_000_000 * 10 ** decimals());\r\n    }\r\n\r\n    function setTreasuryWallet(address _treasuryWallet) external onlyOwner {\r\n        require(_treasuryWallet != address(0), \"Invalid treasury address\");\r\n\r\n        if (treasuryWallet != address(0)) {\r\n            _isExcludedFromFee[treasuryWallet] = false;\r\n        }\r\n\r\n        treasuryWallet = _treasuryWallet;\r\n\r\n        _isExcludedFromFee[treasuryWallet] = true;\r\n    }\r\n\r\n    function pushToNGOWallets(address _address) private { \r\n        ngoWallets.push(_address);\r\n    }\r\n\r\n    function popFromNGOWallets(uint32 _index) private { \r\n        ngoWallets[_index] = ngoWallets[ngoWallets.length - 1];\r\n        ngoWallets.pop();\r\n    }\r\n\r\n    function setFeePercent(uint256 _feePercent) external onlyOwner {\r\n        require(_feePercent <= 50, \"Fee too high\");\r\n        feePercent = _feePercent;\r\n    }\r\n\r\n    function excludeFromFee(address account, bool excluded) external onlyOwner {\r\n        _isExcludedFromFee[account] = excluded;\r\n    }\r\n\r\n    function isExcludedFromFee(address account) external view returns (bool) {\r\n        return _isExcludedFromFee[account];\r\n    }\r\n\r\n    function burn(uint256 amount) external {\r\n        _burn(msg.sender, amount);\r\n    }\r\n\r\n    event NGORegistered(string name, address ngo);\r\n    function registerNGOWallet(address _ngoAddress) private returns (bool){\r\n        require(_ngoAddress != address(0), \"Invalid NGO address\");\r\n        require(_isExcludedFromFee[_ngoAddress] == false, \"This wallet is already registered\");\r\n        for (uint i = 0; i < ngoWallets.length; ++i){\r\n            if(ngoWallets[i] == _ngoAddress) return false;\r\n        }\r\n        pushToNGOWallets(_ngoAddress);\r\n        _isExcludedFromFee[_ngoAddress] = true;\r\n        return true;\r\n    }\r\n\r\n    function registerNGO(string memory _ngoName, address _ngoAddress) external onlyOwner returns (bool) {\r\n        require(_ngoAddress != address(0), \"Invalid NGO address\");\r\n        for (uint i = 0; i < ngoWallets.length; ++i){\r\n            if (keccak256(bytes (ngoNames[ngoWallets[i]])) == keccak256(bytes (_ngoName))) return false;\r\n        }\r\n        ngoNames[_ngoAddress] = _ngoName;\r\n        emit NGORegistered(_ngoName, _ngoAddress);\r\n        return registerNGOWallet(_ngoAddress);\r\n    }\r\n    \r\n    event NGOUnregistered(string name, address ngo);\r\n    function unregisterNGOWallet(address _ngoAddress) private returns (bool){\r\n        require(_ngoAddress != address(0), \"Invalid NGO address\");\r\n        for (uint32 i = 0; i < ngoWallets.length; ++i) \r\n        {\r\n            if (ngoWallets[i] == _ngoAddress) {\r\n                popFromNGOWallets(i);\r\n                _isExcludedFromFee[_ngoAddress] = true;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function unregisterNGO(string memory _ngoName) external onlyOwner returns (bool) {\r\n        address _ngoAddress = address(0);\r\n        for (uint i = 0; i < ngoWallets.length; ++i){\r\n            if (keccak256(bytes (ngoNames[ngoWallets[i]])) == keccak256(bytes (_ngoName))) {\r\n                _ngoAddress = ngoWallets[i];\r\n                break;\r\n            }\r\n        }\r\n        if (_ngoAddress == address(0)) return false;\r\n\r\n        delete ngoNames[_ngoAddress];\r\n        emit NGOUnregistered(_ngoName, _ngoAddress);\r\n        return unregisterNGOWallet(_ngoAddress);\r\n    }\r\n\r\n    function distributeTreasuryToNGOs() external onlyOwner {\r\n        require(treasuryWallet != address(0), \"Treasury wallet not set\");\r\n        uint256 ngoCount = ngoWallets.length;\r\n        require(ngoCount > 0, \"No NGOs registered\");\r\n\r\n        uint256 treasuryBalance = balanceOf(treasuryWallet);\r\n        require(treasuryBalance > 0, \"No funds to distribute\");\r\n\r\n        uint256 share = treasuryBalance / ngoCount;\r\n        require(share > 0, \"Insufficient funds for distribution\");\r\n\r\n        for (uint i = 0; i < ngoCount; ++i) {\r\n            super._update(treasuryWallet, ngoWallets[i], share);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Override OpenZeppelin v5 _update instead of _transfer for fee logic.\r\n     */\r\n    function _update(address from, address to, uint256 value) internal override {\r\n        if (_isExcludedFromFee[from] || _isExcludedFromFee[to] || feePercent == 0) {\r\n            super._update(from, to, value);\r\n        } else {\r\n            uint256 fee = (value * feePercent) / 1000;\r\n            uint256 amountAfterFee = value - fee;\r\n            uint256 share = ngoWallets.length != 0 ? fee / ngoWallets.length : 1;\r\n            uint256 remainder = fee - (share * ngoWallets.length);\r\n\r\n            for (uint i = 0; i < ngoWallets.length; ++i) {\r\n                super._update(from, ngoWallets[i], share);\r\n            }\r\n\r\n            if (remainder > 0) {\r\n                super._update(from, treasuryWallet, remainder);\r\n            }\r\n\r\n            super._update(from, to, amountAfterFee);\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"HumAidTokenv2.sol": {
				"HumAidv2": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "ngo",
									"type": "address"
								}
							],
							"name": "NGORegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "ngo",
									"type": "address"
								}
							],
							"name": "NGOUnregistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "distributeTreasuryToNGOs",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "excluded",
									"type": "bool"
								}
							],
							"name": "excludeFromFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feePercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcludedFromFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "ngoNames",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ngoWallets",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_ngoName",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_ngoAddress",
									"type": "address"
								}
							],
							"name": "registerNGO",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_feePercent",
									"type": "uint256"
								}
							],
							"name": "setFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasuryWallet",
									"type": "address"
								}
							],
							"name": "setTreasuryWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_ngoName",
									"type": "string"
								}
							],
							"name": "unregisterNGO",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"HumAidTokenv2.sol\":174:5532  contract HumAidv2 is ERC20, Ownable(address(msg.sender)) {... */\n  mstore(0x40, 0x80)\n    /* \"HumAidTokenv2.sol\":266:267  5 */\n  0x05\n    /* \"HumAidTokenv2.sol\":238:267  uint256 public feePercent = 5 */\n  0x06\n  sstore\n    /* \"HumAidTokenv2.sol\":479:685  constructor() ERC20(\"HumAidv2\", \"HMM\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"HumAidTokenv2.sol\":218:228  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc1, 0x243ab6a0b4b23b19)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x484d4d)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2881:2932   */\n  mstore\n    /* \"#utility.yul\":2854:2872   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_13:\n  pop\n    /* \"HumAidTokenv2.sol\":548:558  msg.sender */\n  caller\n    /* \"HumAidTokenv2.sol\":529:559  _isExcludedFromFee[msg.sender] */\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"HumAidTokenv2.sol\":529:547  _isExcludedFromFee */\n  0x09\n    /* \"HumAidTokenv2.sol\":529:559  _isExcludedFromFee[msg.sender] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"HumAidTokenv2.sol\":529:566  _isExcludedFromFee[msg.sender] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"HumAidTokenv2.sol\":562:566  true */\n  0x01\n    /* \"HumAidTokenv2.sol\":529:566  _isExcludedFromFee[msg.sender] = true */\n  or\n  swap1\n  sstore\n    /* \"HumAidTokenv2.sol\":626:677  _mint(msg.sender, 1_000_000_000 * 10 ** decimals()) */\n  tag_16\n  swap1\n    /* \"HumAidTokenv2.sol\":666:676  decimals() */\n  tag_17\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n  jump\n    /* \"HumAidTokenv2.sol\":666:676  decimals() */\ntag_17:\n    /* \"HumAidTokenv2.sol\":660:676  10 ** decimals() */\n  tag_19\n  swap1\n    /* \"HumAidTokenv2.sol\":660:662  10 */\n  0x0a\n    /* \"HumAidTokenv2.sol\":660:676  10 ** decimals() */\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"HumAidTokenv2.sol\":644:676  1_000_000_000 * 10 ** decimals() */\n  tag_21\n  swap1\n    /* \"HumAidTokenv2.sol\":644:657  1_000_000_000 */\n  0x3b9aca00\n    /* \"HumAidTokenv2.sol\":644:676  1_000_000_000 * 10 ** decimals() */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"HumAidTokenv2.sol\":626:631  _mint */\n  tag_23\n    /* \"HumAidTokenv2.sol\":626:677  _mint(msg.sender, 1_000_000_000 * 10 ** decimals()) */\n  jump\t// in\ntag_16:\n    /* \"HumAidTokenv2.sol\":174:5532  contract HumAidv2 is ERC20, Ownable(address(msg.sender)) {... */\n  jump(tag_82)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_23:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2881:2932   */\n  mstore\n    /* \"#utility.yul\":2854:2872   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  tag_11\n    /* \"#utility.yul\":2735:2938   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_30\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  tag_31\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"HumAidTokenv2.sol\":4718:5529  function _update(address from, address to, uint256 value) internal override {... */\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"HumAidTokenv2.sol\":4809:4833  _isExcludedFromFee[from] */\n  dup4\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"HumAidTokenv2.sol\":4809:4827  _isExcludedFromFee */\n  0x09\n    /* \"HumAidTokenv2.sol\":4809:4833  _isExcludedFromFee[from] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  dup1\n    /* \"HumAidTokenv2.sol\":4809:4859  _isExcludedFromFee[from] || _isExcludedFromFee[to] */\n  tag_33\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"HumAidTokenv2.sol\":4837:4859  _isExcludedFromFee[to] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"HumAidTokenv2.sol\":4837:4855  _isExcludedFromFee */\n  0x09\n    /* \"HumAidTokenv2.sol\":4837:4859  _isExcludedFromFee[to] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"HumAidTokenv2.sol\":4809:4859  _isExcludedFromFee[from] || _isExcludedFromFee[to] */\ntag_33:\n    /* \"HumAidTokenv2.sol\":4809:4878  _isExcludedFromFee[from] || _isExcludedFromFee[to] || feePercent == 0 */\n  dup1\n  tag_34\n  jumpi\n  pop\n    /* \"HumAidTokenv2.sol\":4863:4873  feePercent */\n  sload(0x06)\n    /* \"HumAidTokenv2.sol\":4863:4878  feePercent == 0 */\n  iszero\n    /* \"HumAidTokenv2.sol\":4809:4878  _isExcludedFromFee[from] || _isExcludedFromFee[to] || feePercent == 0 */\ntag_34:\n    /* \"HumAidTokenv2.sol\":4805:5522  if (_isExcludedFromFee[from] || _isExcludedFromFee[to] || feePercent == 0) {... */\n  iszero\n  tag_35\n  jumpi\n    /* \"HumAidTokenv2.sol\":4895:4925  super._update(from, to, value) */\n  tag_36\n    /* \"HumAidTokenv2.sol\":4909:4913  from */\n  dup4\n    /* \"HumAidTokenv2.sol\":4915:4917  to */\n  dup4\n    /* \"HumAidTokenv2.sol\":4919:4924  value */\n  dup4\n    /* \"HumAidTokenv2.sol\":4895:4908  super._update */\n  tag_37\n    /* \"HumAidTokenv2.sol\":4895:4925  super._update(from, to, value) */\n  jump\t// in\ntag_36:\n    /* \"HumAidTokenv2.sol\":4718:5529  function _update(address from, address to, uint256 value) internal override {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"HumAidTokenv2.sol\":4805:5522  if (_isExcludedFromFee[from] || _isExcludedFromFee[to] || feePercent == 0) {... */\ntag_35:\n    /* \"HumAidTokenv2.sol\":4958:4969  uint256 fee */\n  0x00\n    /* \"HumAidTokenv2.sol\":4995:4999  1000 */\n  0x03e8\n    /* \"HumAidTokenv2.sol\":4981:4991  feePercent */\n  sload(0x06)\n    /* \"HumAidTokenv2.sol\":4973:4978  value */\n  dup4\n    /* \"HumAidTokenv2.sol\":4973:4991  value * feePercent */\n  tag_39\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"HumAidTokenv2.sol\":4972:4999  (value * feePercent) / 1000 */\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n    /* \"HumAidTokenv2.sol\":4958:4999  uint256 fee = (value * feePercent) / 1000 */\n  swap1\n  pop\n    /* \"HumAidTokenv2.sol\":5014:5036  uint256 amountAfterFee */\n  0x00\n    /* \"HumAidTokenv2.sol\":5039:5050  value - fee */\n  tag_42\n    /* \"HumAidTokenv2.sol\":4958:4999  uint256 fee = (value * feePercent) / 1000 */\n  dup3\n    /* \"HumAidTokenv2.sol\":5039:5044  value */\n  dup5\n    /* \"HumAidTokenv2.sol\":5039:5050  value - fee */\n  tag_43\n  jump\t// in\ntag_42:\n    /* \"HumAidTokenv2.sol\":5081:5091  ngoWallets */\n  0x08\n    /* \"HumAidTokenv2.sol\":5081:5098  ngoWallets.length */\n  sload\n    /* \"HumAidTokenv2.sol\":5014:5050  uint256 amountAfterFee = value - fee */\n  swap1\n  swap2\n  pop\n    /* \"HumAidTokenv2.sol\":5065:5078  uint256 share */\n  0x00\n  swap1\n    /* \"HumAidTokenv2.sol\":5081:5103  ngoWallets.length != 0 */\n  dup2\n  sub\n    /* \"HumAidTokenv2.sol\":5081:5133  ngoWallets.length != 0 ? fee / ngoWallets.length : 1 */\n  tag_44\n  jumpi\n    /* \"HumAidTokenv2.sol\":5132:5133  1 */\n  0x01\n    /* \"HumAidTokenv2.sol\":5081:5133  ngoWallets.length != 0 ? fee / ngoWallets.length : 1 */\n  jump(tag_46)\ntag_44:\n    /* \"HumAidTokenv2.sol\":5112:5122  ngoWallets */\n  0x08\n    /* \"HumAidTokenv2.sol\":5112:5129  ngoWallets.length */\n  sload\n    /* \"HumAidTokenv2.sol\":5106:5129  fee / ngoWallets.length */\n  tag_46\n  swap1\n    /* \"HumAidTokenv2.sol\":5106:5109  fee */\n  dup5\n    /* \"HumAidTokenv2.sol\":5106:5129  fee / ngoWallets.length */\n  tag_41\n  jump\t// in\ntag_46:\n    /* \"HumAidTokenv2.sol\":5183:5193  ngoWallets */\n  0x08\n    /* \"HumAidTokenv2.sol\":5183:5200  ngoWallets.length */\n  sload\n    /* \"HumAidTokenv2.sol\":5065:5133  uint256 share = ngoWallets.length != 0 ? fee / ngoWallets.length : 1 */\n  swap1\n  swap2\n  pop\n    /* \"HumAidTokenv2.sol\":5148:5165  uint256 remainder */\n  0x00\n  swap1\n    /* \"HumAidTokenv2.sol\":5175:5200  share * ngoWallets.length */\n  tag_47\n  swap1\n    /* \"HumAidTokenv2.sol\":5065:5133  uint256 share = ngoWallets.length != 0 ? fee / ngoWallets.length : 1 */\n  dup4\n    /* \"HumAidTokenv2.sol\":5175:5200  share * ngoWallets.length */\n  tag_22\n  jump\t// in\ntag_47:\n    /* \"HumAidTokenv2.sol\":5168:5201  fee - (share * ngoWallets.length) */\n  tag_48\n  swap1\n    /* \"HumAidTokenv2.sol\":5168:5171  fee */\n  dup6\n    /* \"HumAidTokenv2.sol\":5168:5201  fee - (share * ngoWallets.length) */\n  tag_43\n  jump\t// in\ntag_48:\n    /* \"HumAidTokenv2.sol\":5148:5201  uint256 remainder = fee - (share * ngoWallets.length) */\n  swap1\n  pop\n    /* \"HumAidTokenv2.sol\":5223:5229  uint i */\n  0x00\n    /* \"HumAidTokenv2.sol\":5218:5339  for (uint i = 0; i < ngoWallets.length; ++i) {... */\ntag_49:\n    /* \"HumAidTokenv2.sol\":5239:5249  ngoWallets */\n  0x08\n    /* \"HumAidTokenv2.sol\":5239:5256  ngoWallets.length */\n  sload\n    /* \"HumAidTokenv2.sol\":5235:5256  i < ngoWallets.length */\n  dup2\n  lt\n    /* \"HumAidTokenv2.sol\":5218:5339  for (uint i = 0; i < ngoWallets.length; ++i) {... */\n  iszero\n  tag_50\n  jumpi\n    /* \"HumAidTokenv2.sol\":5282:5323  super._update(from, ngoWallets[i], share) */\n  tag_52\n    /* \"HumAidTokenv2.sol\":5296:5300  from */\n  dup9\n    /* \"HumAidTokenv2.sol\":5302:5312  ngoWallets */\n  0x08\n    /* \"HumAidTokenv2.sol\":5313:5314  i */\n  dup4\n    /* \"HumAidTokenv2.sol\":5302:5315  ngoWallets[i] */\n  dup2\n  sload\n  dup2\n  lt\n  tag_54\n  jumpi\n  tag_54\n  tag_55\n  jump\t// in\ntag_54:\n  0x00\n  swap2\n  dup3\n  mstore\n  0x20\n  swap1\n  swap2\n  keccak256\n  add\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"HumAidTokenv2.sol\":5317:5322  share */\n  dup6\n    /* \"HumAidTokenv2.sol\":5282:5295  super._update */\n  tag_37\n    /* \"HumAidTokenv2.sol\":5282:5323  super._update(from, ngoWallets[i], share) */\n  jump\t// in\ntag_52:\n    /* \"HumAidTokenv2.sol\":5258:5261  ++i */\n  tag_57\n  dup2\n  tag_58\n  jump\t// in\ntag_57:\n  swap1\n  pop\n    /* \"HumAidTokenv2.sol\":5218:5339  for (uint i = 0; i < ngoWallets.length; ++i) {... */\n  jump(tag_49)\ntag_50:\n  pop\n    /* \"HumAidTokenv2.sol\":5359:5372  remainder > 0 */\n  dup1\n  iszero\n    /* \"HumAidTokenv2.sol\":5355:5455  if (remainder > 0) {... */\n  tag_60\n  jumpi\n    /* \"HumAidTokenv2.sol\":5413:5427  treasuryWallet */\n  sload(0x0a)\n    /* \"HumAidTokenv2.sol\":5393:5439  super._update(from, treasuryWallet, remainder) */\n  tag_60\n  swap1\n    /* \"HumAidTokenv2.sol\":5407:5411  from */\n  dup9\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"HumAidTokenv2.sol\":5413:5427  treasuryWallet */\n  and\n    /* \"HumAidTokenv2.sol\":5429:5438  remainder */\n  dup4\n    /* \"HumAidTokenv2.sol\":5393:5406  super._update */\n  tag_37\n    /* \"HumAidTokenv2.sol\":5393:5439  super._update(from, treasuryWallet, remainder) */\n  jump\t// in\ntag_60:\n    /* \"HumAidTokenv2.sol\":5471:5510  super._update(from, to, amountAfterFee) */\n  tag_61\n    /* \"HumAidTokenv2.sol\":5485:5489  from */\n  dup8\n    /* \"HumAidTokenv2.sol\":5491:5493  to */\n  dup8\n    /* \"HumAidTokenv2.sol\":5495:5509  amountAfterFee */\n  dup6\n    /* \"HumAidTokenv2.sol\":5471:5484  super._update */\n  tag_37\n    /* \"HumAidTokenv2.sol\":5471:5510  super._update(from, to, amountAfterFee) */\n  jump\t// in\ntag_61:\n    /* \"HumAidTokenv2.sol\":4943:5522  {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"HumAidTokenv2.sol\":4718:5529  function _update(address from, address to, uint256 value) internal override {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_37:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_63\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_64\n  swap2\n  swap1\n  tag_65\n  jump\t// in\ntag_64:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_66\n  swap1\n  pop\n  jump\ntag_63:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_67\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5608:5640   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5590:5641   */\n  mstore\n    /* \"#utility.yul\":5657:5675   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5650:5684   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5700:5718   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5693:5727   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5563:5581   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_11\n    /* \"#utility.yul\":5388:5733   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_67:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_66:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_70\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_71)\ntag_70:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_71:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_72\n  swap2\n    /* \"#utility.yul\":5884:5909   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5872:5874   */\n  0x20\n    /* \"#utility.yul\":5857:5875   */\n  add\n  swap1\n    /* \"#utility.yul\":5738:5915   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\ntag_72:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_74:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_75:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_85:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_86\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_86:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_77:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_90\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_90:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_91:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_91)\ntag_93:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_7:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_97\n  tag_74\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1582:1679   */\n  tag_98\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_99\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_75\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_77\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_102\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_102:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_93)\n    /* \"#utility.yul\":1810:2473   */\ntag_101:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_105:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_105)\ntag_107:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_108:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2943:3070   */\ntag_79:\n    /* \"#utility.yul\":3004:3014   */\n  0x4e487b71\n    /* \"#utility.yul\":2999:3002   */\n  0xe0\n    /* \"#utility.yul\":2995:3015   */\n  shl\n    /* \"#utility.yul\":2992:2993   */\n  0x00\n    /* \"#utility.yul\":2985:3016   */\n  mstore\n    /* \"#utility.yul\":3035:3039   */\n  0x11\n    /* \"#utility.yul\":3032:3033   */\n  0x04\n    /* \"#utility.yul\":3025:3040   */\n  mstore\n    /* \"#utility.yul\":3059:3063   */\n  0x24\n    /* \"#utility.yul\":3056:3057   */\n  0x00\n    /* \"#utility.yul\":3049:3064   */\n  revert\n    /* \"#utility.yul\":3075:3497   */\ntag_80:\n    /* \"#utility.yul\":3164:3165   */\n  0x01\n    /* \"#utility.yul\":3207:3212   */\n  dup2\n    /* \"#utility.yul\":3164:3165   */\n  dup2\n    /* \"#utility.yul\":3221:3491   */\ntag_112:\n    /* \"#utility.yul\":3242:3249   */\n  dup1\n    /* \"#utility.yul\":3232:3240   */\n  dup6\n    /* \"#utility.yul\":3229:3250   */\n  gt\n    /* \"#utility.yul\":3221:3491   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":3301:3305   */\n  dup2\n    /* \"#utility.yul\":3297:3298   */\n  0x00\n    /* \"#utility.yul\":3293:3299   */\n  not\n    /* \"#utility.yul\":3289:3306   */\n  div\n    /* \"#utility.yul\":3283:3287   */\n  dup3\n    /* \"#utility.yul\":3280:3307   */\n  gt\n    /* \"#utility.yul\":3277:3330   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":3310:3328   */\n  tag_116\n  tag_79\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3360:3367   */\n  dup1\n    /* \"#utility.yul\":3350:3358   */\n  dup6\n    /* \"#utility.yul\":3346:3368   */\n  and\n    /* \"#utility.yul\":3343:3398   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":3380:3396   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3343:3398   */\ntag_117:\n    /* \"#utility.yul\":3459:3481   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3419:3434   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":3221:3491   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":3225:3228   */\n  pop\n    /* \"#utility.yul\":3075:3497   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3502:4308   */\ntag_81:\n    /* \"#utility.yul\":3551:3556   */\n  0x00\n    /* \"#utility.yul\":3581:3589   */\n  dup3\n    /* \"#utility.yul\":3571:3651   */\n  tag_119\n  jumpi\n  pop\n    /* \"#utility.yul\":3622:3623   */\n  0x01\n    /* \"#utility.yul\":3636:3641   */\n  jump(tag_118)\n    /* \"#utility.yul\":3571:3651   */\ntag_119:\n    /* \"#utility.yul\":3670:3674   */\n  dup2\n    /* \"#utility.yul\":3660:3736   */\n  tag_120\n  jumpi\n  pop\n    /* \"#utility.yul\":3707:3708   */\n  0x00\n    /* \"#utility.yul\":3721:3726   */\n  jump(tag_118)\n    /* \"#utility.yul\":3660:3736   */\ntag_120:\n    /* \"#utility.yul\":3752:3756   */\n  dup2\n    /* \"#utility.yul\":3770:3771   */\n  0x01\n    /* \"#utility.yul\":3765:3824   */\n  dup2\n  eq\n  tag_122\n  jumpi\n    /* \"#utility.yul\":3838:3839   */\n  0x02\n    /* \"#utility.yul\":3833:3963   */\n  dup2\n  eq\n  tag_123\n  jumpi\n    /* \"#utility.yul\":3745:3963   */\n  jump(tag_121)\n    /* \"#utility.yul\":3765:3824   */\ntag_122:\n    /* \"#utility.yul\":3795:3796   */\n  0x01\n    /* \"#utility.yul\":3786:3796   */\n  swap2\n  pop\n    /* \"#utility.yul\":3809:3814   */\n  pop\n  jump(tag_118)\n    /* \"#utility.yul\":3833:3963   */\ntag_123:\n    /* \"#utility.yul\":3870:3873   */\n  0xff\n    /* \"#utility.yul\":3860:3868   */\n  dup5\n    /* \"#utility.yul\":3857:3874   */\n  gt\n    /* \"#utility.yul\":3854:3897   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":3877:3895   */\n  tag_125\n  tag_79\n  jump\t// in\ntag_125:\n  pop\n  pop\n    /* \"#utility.yul\":3933:3934   */\n  0x01\n    /* \"#utility.yul\":3919:3935   */\n  dup3\n  shl\n    /* \"#utility.yul\":3948:3953   */\n  jump(tag_118)\n    /* \"#utility.yul\":3745:3963   */\ntag_121:\n  pop\n    /* \"#utility.yul\":4047:4049   */\n  0x20\n    /* \"#utility.yul\":4037:4045   */\n  dup4\n    /* \"#utility.yul\":4034:4050   */\n  lt\n    /* \"#utility.yul\":4028:4031   */\n  0x0133\n    /* \"#utility.yul\":4022:4026   */\n  dup4\n    /* \"#utility.yul\":4019:4032   */\n  lt\n    /* \"#utility.yul\":4015:4051   */\n  and\n    /* \"#utility.yul\":4009:4011   */\n  0x4e\n    /* \"#utility.yul\":3999:4007   */\n  dup5\n    /* \"#utility.yul\":3996:4012   */\n  lt\n    /* \"#utility.yul\":3991:3993   */\n  0x0b\n    /* \"#utility.yul\":3985:3989   */\n  dup5\n    /* \"#utility.yul\":3982:3994   */\n  lt\n    /* \"#utility.yul\":3978:4013   */\n  and\n    /* \"#utility.yul\":3975:4052   */\n  or\n    /* \"#utility.yul\":3972:4131   */\n  iszero\n  tag_126\n  jumpi\n  pop\n    /* \"#utility.yul\":4084:4103   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":4116:4121   */\n  jump(tag_118)\n    /* \"#utility.yul\":3972:4131   */\ntag_126:\n    /* \"#utility.yul\":4163:4197   */\n  tag_127\n    /* \"#utility.yul\":4188:4196   */\n  dup4\n    /* \"#utility.yul\":4182:4186   */\n  dup4\n    /* \"#utility.yul\":4163:4197   */\n  tag_80\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4233:4239   */\n  dup1\n    /* \"#utility.yul\":4229:4230   */\n  0x00\n    /* \"#utility.yul\":4225:4231   */\n  not\n    /* \"#utility.yul\":4221:4240   */\n  div\n    /* \"#utility.yul\":4212:4219   */\n  dup3\n    /* \"#utility.yul\":4209:4241   */\n  gt\n    /* \"#utility.yul\":4206:4264   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":4244:4262   */\n  tag_129\n  tag_79\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4282:4302   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3502:4308   */\ntag_118:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4313:4453   */\ntag_20:\n    /* \"#utility.yul\":4371:4376   */\n  0x00\n    /* \"#utility.yul\":4400:4447   */\n  tag_131\n    /* \"#utility.yul\":4441:4445   */\n  0xff\n    /* \"#utility.yul\":4431:4439   */\n  dup5\n    /* \"#utility.yul\":4427:4446   */\n  and\n    /* \"#utility.yul\":4421:4425   */\n  dup4\n    /* \"#utility.yul\":4400:4447   */\n  tag_81\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4391:4447   */\n  swap4\n    /* \"#utility.yul\":4313:4453   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4458:4626   */\ntag_22:\n    /* \"#utility.yul\":4531:4540   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4562:4571   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4579:4594   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4573:4595   */\n  dup5\n  eq\n    /* \"#utility.yul\":4559:4596   */\n  or\n    /* \"#utility.yul\":4549:4620   */\n  tag_118\n  jumpi\n    /* \"#utility.yul\":4600:4618   */\n  tag_118\n  tag_79\n  jump\t// in\n    /* \"#utility.yul\":4631:4848   */\ntag_41:\n    /* \"#utility.yul\":4671:4672   */\n  0x00\n    /* \"#utility.yul\":4697:4698   */\n  dup3\n    /* \"#utility.yul\":4687:4819   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":4741:4751   */\n  0x4e487b71\n    /* \"#utility.yul\":4736:4739   */\n  0xe0\n    /* \"#utility.yul\":4732:4752   */\n  shl\n    /* \"#utility.yul\":4729:4730   */\n  0x00\n    /* \"#utility.yul\":4722:4753   */\n  mstore\n    /* \"#utility.yul\":4776:4780   */\n  0x12\n    /* \"#utility.yul\":4773:4774   */\n  0x04\n    /* \"#utility.yul\":4766:4781   */\n  mstore\n    /* \"#utility.yul\":4804:4808   */\n  0x24\n    /* \"#utility.yul\":4801:4802   */\n  0x00\n    /* \"#utility.yul\":4794:4809   */\n  revert\n    /* \"#utility.yul\":4687:4819   */\ntag_136:\n  pop\n    /* \"#utility.yul\":4833:4842   */\n  div\n  swap1\n    /* \"#utility.yul\":4631:4848   */\n  jump\t// out\n    /* \"#utility.yul\":4853:4981   */\ntag_43:\n    /* \"#utility.yul\":4920:4929   */\n  dup2\n  dup2\n  sub\n    /* \"#utility.yul\":4941:4952   */\n  dup2\n  dup2\n  gt\n    /* \"#utility.yul\":4938:4975   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":4955:4973   */\n  tag_118\n  tag_79\n  jump\t// in\n    /* \"#utility.yul\":4986:5113   */\ntag_55:\n    /* \"#utility.yul\":5047:5057   */\n  0x4e487b71\n    /* \"#utility.yul\":5042:5045   */\n  0xe0\n    /* \"#utility.yul\":5038:5058   */\n  shl\n    /* \"#utility.yul\":5035:5036   */\n  0x00\n    /* \"#utility.yul\":5028:5059   */\n  mstore\n    /* \"#utility.yul\":5078:5082   */\n  0x32\n    /* \"#utility.yul\":5075:5076   */\n  0x04\n    /* \"#utility.yul\":5068:5083   */\n  mstore\n    /* \"#utility.yul\":5102:5106   */\n  0x24\n    /* \"#utility.yul\":5099:5100   */\n  0x00\n    /* \"#utility.yul\":5092:5107   */\n  revert\n    /* \"#utility.yul\":5118:5253   */\ntag_58:\n    /* \"#utility.yul\":5157:5160   */\n  0x00\n    /* \"#utility.yul\":5178:5195   */\n  0x01\n  dup3\n  add\n    /* \"#utility.yul\":5175:5218   */\n  tag_143\n  jumpi\n    /* \"#utility.yul\":5198:5216   */\n  tag_143\n  tag_79\n  jump\t// in\ntag_143:\n  pop\n    /* \"#utility.yul\":5245:5246   */\n  0x01\n    /* \"#utility.yul\":5234:5247   */\n  add\n  swap1\n    /* \"#utility.yul\":5118:5253   */\n  jump\t// out\n    /* \"#utility.yul\":5258:5383   */\ntag_65:\n    /* \"#utility.yul\":5323:5332   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":5344:5354   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":5341:5377   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":5357:5375   */\n  tag_118\n  tag_79\n  jump\t// in\n    /* \"#utility.yul\":5738:5915   */\ntag_82:\n    /* \"HumAidTokenv2.sol\":174:5532  contract HumAidv2 is ERC20, Ownable(address(msg.sender)) {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"HumAidTokenv2.sol\":174:5532  contract HumAidv2 is ERC20, Ownable(address(msg.sender)) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7ce3489b\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xae91470d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdf8408fe\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf9479ffa\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x7ce3489b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7d5b6c60\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7fd6f15c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa8602fea\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x42966c68\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4618f6ac\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4626402b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5342acb4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3539c6b1\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":1269:1283   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1262:1284   */\n      iszero\n        /* \"#utility.yul\":1244:1285   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1232:1234   */\n      0x20\n        /* \"#utility.yul\":1217:1235   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_32\n        /* \"#utility.yul\":1104:1291   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":1442:1467   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1430:1432   */\n      0x20\n        /* \"#utility.yul\":1415:1433   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      tag_32\n        /* \"#utility.yul\":1296:1473   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_34\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"#utility.yul\":1953:1989   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1941:1943   */\n      0x20\n        /* \"#utility.yul\":1926:1944   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      tag_32\n        /* \"#utility.yul\":1811:1995   */\n      jump\n        /* \"HumAidTokenv2.sol\":2407:2898  function registerNGO(string memory _ngoName, address _ngoAddress) external onlyOwner returns (bool) {... */\n    tag_8:\n      tag_34\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"HumAidTokenv2.sol\":1776:1859  function burn(uint256 amount) external {... */\n    tag_9:\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"HumAidTokenv2.sol\":295:338  mapping (address => string) public ngoNames */\n    tag_10:\n      tag_30\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"HumAidTokenv2.sol\":441:470  address public treasuryWallet */\n    tag_11:\n      sload(0x0a)\n      tag_67\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_67:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3797:3829   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3779:3830   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3767:3769   */\n      0x20\n        /* \"#utility.yul\":3752:3770   */\n      add\n        /* \"HumAidTokenv2.sol\":441:470  address public treasuryWallet */\n      tag_32\n        /* \"#utility.yul\":3633:3836   */\n      jump\n        /* \"HumAidTokenv2.sol\":1642:1768  function isExcludedFromFee(address account) external view returns (bool) {... */\n    tag_12:\n      tag_34\n      tag_72\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":1733:1760  _isExcludedFromFee[account] */\n      and\n        /* \"HumAidTokenv2.sol\":1709:1713  bool */\n      0x00\n        /* \"HumAidTokenv2.sol\":1733:1760  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"HumAidTokenv2.sol\":1733:1751  _isExcludedFromFee */\n      0x09\n        /* \"HumAidTokenv2.sol\":1733:1760  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"HumAidTokenv2.sol\":1642:1768  function isExcludedFromFee(address account) external view returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_40\n      tag_76\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_58\n      tag_80\n      jump\t// in\n        /* \"HumAidTokenv2.sol\":1335:1494  function setFeePercent(uint256 _feePercent) external onlyOwner {... */\n    tag_15:\n      tag_58\n      tag_82\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"HumAidTokenv2.sol\":345:372  address[] public ngoWallets */\n    tag_16:\n      tag_67\n      tag_85\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"HumAidTokenv2.sol\":238:267  uint256 public feePercent = 5 */\n    tag_17:\n      tag_40\n      sload(0x06)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_67)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_30\n      tag_95\n      jump\t// in\n        /* \"HumAidTokenv2.sol\":693:1063  function setTreasuryWallet(address _treasuryWallet) external onlyOwner {... */\n    tag_20:\n      tag_58\n      tag_98\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n      tag_34\n      tag_101\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"HumAidTokenv2.sol\":3412:3988  function unregisterNGO(string memory _ngoName) external onlyOwner returns (bool) {... */\n    tag_22:\n      tag_34\n      tag_105\n      calldatasize\n      0x04\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_40\n      tag_110\n      calldatasize\n      0x04\n      tag_111\n      jump\t// in\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"HumAidTokenv2.sol\":1502:1634  function excludeFromFee(address account, bool excluded) external onlyOwner {... */\n    tag_24:\n      tag_58\n      tag_115\n      calldatasize\n      0x04\n      tag_116\n      jump\t// in\n    tag_115:\n      tag_117\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_58\n      tag_119\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"HumAidTokenv2.sol\":3996:4613  function distributeTreasuryToNGOs() external onlyOwner {... */\n    tag_26:\n      tag_58\n      tag_122\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_125\n      jump\t// in\n    tag_126:\n      dup1\n      iszero\n      tag_127\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_128\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_127)\n    tag_128:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_129:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_129\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_130:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_140:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HumAidTokenv2.sol\":2407:2898  function registerNGO(string memory _ngoName, address _ngoAddress) external onlyOwner returns (bool) {... */\n    tag_56:\n        /* \"HumAidTokenv2.sol\":2501:2505  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":2526:2551  _ngoAddress != address(0) */\n      dup3\n      and\n        /* \"HumAidTokenv2.sol\":2518:2575  require(_ngoAddress != address(0), \"Invalid NGO address\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"HumAidTokenv2.sol\":2591:2597  uint i */\n      0x00\n        /* \"HumAidTokenv2.sol\":2586:2748  for (uint i = 0; i < ngoWallets.length; ++i){... */\n    tag_150:\n        /* \"HumAidTokenv2.sol\":2607:2617  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":2607:2624  ngoWallets.length */\n      sload\n        /* \"HumAidTokenv2.sol\":2603:2624  i < ngoWallets.length */\n      dup2\n      lt\n        /* \"HumAidTokenv2.sol\":2586:2748  for (uint i = 0; i < ngoWallets.length; ++i){... */\n      iszero\n      tag_151\n      jumpi\n        /* \"HumAidTokenv2.sol\":2712:2720  _ngoName */\n      dup4\n        /* \"HumAidTokenv2.sol\":2695:2722  keccak256(bytes (_ngoName)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"HumAidTokenv2.sol\":2666:2674  ngoNames */\n      0x07\n        /* \"HumAidTokenv2.sol\":2666:2689  ngoNames[ngoWallets[i]] */\n      0x00\n        /* \"HumAidTokenv2.sol\":2675:2685  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":2686:2687  i */\n      dup5\n        /* \"HumAidTokenv2.sol\":2675:2688  ngoWallets[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_154\n      tag_155\n      jump\t// in\n    tag_154:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"HumAidTokenv2.sol\":2666:2689  ngoNames[ngoWallets[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      swap1\n      swap2\n      keccak256\n        /* \"HumAidTokenv2.sol\":2649:2691  keccak256(bytes (ngoNames[ngoWallets[i]])) */\n      swap1\n      mload\n      tag_157\n      swap2\n        /* \"HumAidTokenv2.sol\":2666:2689  ngoNames[ngoWallets[i]] */\n      swap1\n        /* \"HumAidTokenv2.sol\":2649:2691  keccak256(bytes (ngoNames[ngoWallets[i]])) */\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"HumAidTokenv2.sol\":2649:2722  keccak256(bytes (ngoNames[ngoWallets[i]])) == keccak256(bytes (_ngoName)) */\n      sub\n        /* \"HumAidTokenv2.sol\":2645:2736  if (keccak256(bytes (ngoNames[ngoWallets[i]])) == keccak256(bytes (_ngoName))) return false */\n      tag_159\n      jumpi\n        /* \"HumAidTokenv2.sol\":2731:2736  false */\n      0x00\n        /* \"HumAidTokenv2.sol\":2724:2736  return false */\n      swap2\n      pop\n      pop\n      jump(tag_130)\n        /* \"HumAidTokenv2.sol\":2645:2736  if (keccak256(bytes (ngoNames[ngoWallets[i]])) == keccak256(bytes (_ngoName))) return false */\n    tag_159:\n        /* \"HumAidTokenv2.sol\":2626:2629  ++i */\n      tag_160\n      dup2\n      tag_161\n      jump\t// in\n    tag_160:\n      swap1\n      pop\n        /* \"HumAidTokenv2.sol\":2586:2748  for (uint i = 0; i < ngoWallets.length; ++i){... */\n      jump(tag_150)\n    tag_151:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":2758:2779  ngoNames[_ngoAddress] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HumAidTokenv2.sol\":2758:2766  ngoNames */\n      0x07\n        /* \"HumAidTokenv2.sol\":2758:2779  ngoNames[_ngoAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"HumAidTokenv2.sol\":2758:2790  ngoNames[_ngoAddress] = _ngoName */\n      tag_162\n        /* \"HumAidTokenv2.sol\":2782:2790  _ngoName */\n      dup5\n        /* \"HumAidTokenv2.sol\":2758:2779  ngoNames[_ngoAddress] */\n      dup3\n        /* \"HumAidTokenv2.sol\":2758:2790  ngoNames[_ngoAddress] = _ngoName */\n      tag_163\n      jump\t// in\n    tag_162:\n      pop\n        /* \"HumAidTokenv2.sol\":2806:2842  NGORegistered(_ngoName, _ngoAddress) */\n      0xa06dde3e644f7da70b4461f791ff2766ebeacd8cae66b3e6a98637a9dacbd900\n        /* \"HumAidTokenv2.sol\":2820:2828  _ngoName */\n      dup4\n        /* \"HumAidTokenv2.sol\":2830:2841  _ngoAddress */\n      dup4\n        /* \"HumAidTokenv2.sol\":2806:2842  NGORegistered(_ngoName, _ngoAddress) */\n      mload(0x40)\n      tag_164\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"HumAidTokenv2.sol\":2860:2890  registerNGOWallet(_ngoAddress) */\n      tag_166\n        /* \"HumAidTokenv2.sol\":2878:2889  _ngoAddress */\n      dup3\n        /* \"HumAidTokenv2.sol\":2860:2877  registerNGOWallet */\n      tag_167\n        /* \"HumAidTokenv2.sol\":2860:2890  registerNGOWallet(_ngoAddress) */\n      jump\t// in\n    tag_166:\n        /* \"HumAidTokenv2.sol\":2853:2890  return registerNGOWallet(_ngoAddress) */\n      swap4\n        /* \"HumAidTokenv2.sol\":2407:2898  function registerNGO(string memory _ngoName, address _ngoAddress) external onlyOwner returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HumAidTokenv2.sol\":1776:1859  function burn(uint256 amount) external {... */\n    tag_61:\n        /* \"HumAidTokenv2.sol\":1826:1851  _burn(msg.sender, amount) */\n      tag_169\n        /* \"HumAidTokenv2.sol\":1832:1842  msg.sender */\n      caller\n        /* \"HumAidTokenv2.sol\":1844:1850  amount */\n      dup3\n        /* \"HumAidTokenv2.sol\":1826:1831  _burn */\n      tag_170\n        /* \"HumAidTokenv2.sol\":1826:1851  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_169:\n        /* \"HumAidTokenv2.sol\":1776:1859  function burn(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"HumAidTokenv2.sol\":295:338  mapping (address => string) public ngoNames */\n    tag_65:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_125\n      jump\t// in\n    tag_171:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_172\n      swap1\n      tag_125\n      jump\t// in\n    tag_172:\n      dup1\n      iszero\n      tag_173\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_174\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_173)\n    tag_174:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_175:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_175\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"HumAidTokenv2.sol\":1335:1494  function setFeePercent(uint256 _feePercent) external onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"HumAidTokenv2.sol\":1432:1434  50 */\n      0x32\n        /* \"HumAidTokenv2.sol\":1417:1428  _feePercent */\n      dup2\n        /* \"HumAidTokenv2.sol\":1417:1434  _feePercent <= 50 */\n      gt\n      iszero\n        /* \"HumAidTokenv2.sol\":1409:1451  require(_feePercent <= 50, \"Fee too high\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9505:9507   */\n      0x20\n        /* \"HumAidTokenv2.sol\":1409:1451  require(_feePercent <= 50, \"Fee too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9487:9508   */\n      mstore\n        /* \"#utility.yul\":9544:9546   */\n      0x0c\n        /* \"#utility.yul\":9524:9542   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9517:9547   */\n      mstore\n      shl(0xa3, 0x08ccaca40e8dede40d0d2ced)\n        /* \"#utility.yul\":9563:9581   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9556:9598   */\n      mstore\n        /* \"#utility.yul\":9615:9633   */\n      0x64\n      add\n        /* \"HumAidTokenv2.sol\":1409:1451  require(_feePercent <= 50, \"Fee too high\") */\n      tag_148\n        /* \"#utility.yul\":9303:9639   */\n      jump\n        /* \"HumAidTokenv2.sol\":1409:1451  require(_feePercent <= 50, \"Fee too high\") */\n    tag_186:\n        /* \"HumAidTokenv2.sol\":1462:1472  feePercent */\n      0x06\n        /* \"HumAidTokenv2.sol\":1462:1486  feePercent = _feePercent */\n      sstore\n        /* \"HumAidTokenv2.sol\":1335:1494  function setFeePercent(uint256 _feePercent) external onlyOwner {... */\n      jump\t// out\n        /* \"HumAidTokenv2.sol\":345:372  address[] public ngoWallets */\n    tag_86:\n      0x08\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n        /* \"HumAidTokenv2.sol\":693:1063  function setTreasuryWallet(address _treasuryWallet) external onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":783:812  _treasuryWallet != address(0) */\n      dup2\n      and\n        /* \"HumAidTokenv2.sol\":775:841  require(_treasuryWallet != address(0), \"Invalid treasury address\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9846:9848   */\n      0x20\n        /* \"HumAidTokenv2.sol\":775:841  require(_treasuryWallet != address(0), \"Invalid treasury address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9828:9849   */\n      mstore\n        /* \"#utility.yul\":9885:9887   */\n      0x18\n        /* \"#utility.yul\":9865:9883   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9858:9888   */\n      mstore\n        /* \"#utility.yul\":9924:9950   */\n      0x496e76616c696420747265617375727920616464726573730000000000000000\n        /* \"#utility.yul\":9904:9922   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9897:9951   */\n      mstore\n        /* \"#utility.yul\":9968:9986   */\n      0x64\n      add\n        /* \"HumAidTokenv2.sol\":775:841  require(_treasuryWallet != address(0), \"Invalid treasury address\") */\n      tag_148\n        /* \"#utility.yul\":9644:9992   */\n      jump\n        /* \"HumAidTokenv2.sol\":775:841  require(_treasuryWallet != address(0), \"Invalid treasury address\") */\n    tag_201:\n        /* \"HumAidTokenv2.sol\":858:872  treasuryWallet */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0a))\n        /* \"HumAidTokenv2.sol\":858:886  treasuryWallet != address(0) */\n      iszero\n        /* \"HumAidTokenv2.sol\":854:957  if (treasuryWallet != address(0)) {... */\n      tag_204\n      jumpi\n        /* \"HumAidTokenv2.sol\":922:936  treasuryWallet */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0a))\n        /* \"HumAidTokenv2.sol\":940:945  false */\n      0x00\n        /* \"HumAidTokenv2.sol\":903:937  _isExcludedFromFee[treasuryWallet] */\n      swap1\n      dup2\n      mstore\n        /* \"HumAidTokenv2.sol\":903:921  _isExcludedFromFee */\n      0x09\n        /* \"HumAidTokenv2.sol\":903:937  _isExcludedFromFee[treasuryWallet] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"HumAidTokenv2.sol\":903:945  _isExcludedFromFee[treasuryWallet] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"HumAidTokenv2.sol\":854:957  if (treasuryWallet != address(0)) {... */\n    tag_204:\n        /* \"HumAidTokenv2.sol\":969:983  treasuryWallet */\n      0x0a\n        /* \"HumAidTokenv2.sol\":969:1001  treasuryWallet = _treasuryWallet */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap3\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"HumAidTokenv2.sol\":969:983  treasuryWallet */\n      0x00\n        /* \"HumAidTokenv2.sol\":1014:1048  _isExcludedFromFee[treasuryWallet] */\n      swap1\n      dup2\n      mstore\n        /* \"HumAidTokenv2.sol\":1014:1032  _isExcludedFromFee */\n      0x09\n        /* \"HumAidTokenv2.sol\":1014:1048  _isExcludedFromFee[treasuryWallet] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"HumAidTokenv2.sol\":1014:1055  _isExcludedFromFee[treasuryWallet] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"HumAidTokenv2.sol\":969:1001  treasuryWallet = _treasuryWallet */\n      0x01\n        /* \"HumAidTokenv2.sol\":1014:1055  _isExcludedFromFee[treasuryWallet] = true */\n      or\n      swap1\n      sstore\n        /* \"HumAidTokenv2.sol\":693:1063  function setTreasuryWallet(address _treasuryWallet) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"HumAidTokenv2.sol\":3412:3988  function unregisterNGO(string memory _ngoName) external onlyOwner returns (bool) {... */\n    tag_107:\n        /* \"HumAidTokenv2.sol\":3487:3491  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_209:\n        /* \"HumAidTokenv2.sol\":3504:3523  address _ngoAddress */\n      0x00\n        /* \"HumAidTokenv2.sol\":3552:3558  uint i */\n      dup1\n        /* \"HumAidTokenv2.sol\":3547:3782  for (uint i = 0; i < ngoWallets.length; ++i){... */\n    tag_211:\n        /* \"HumAidTokenv2.sol\":3568:3578  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":3568:3585  ngoWallets.length */\n      sload\n        /* \"HumAidTokenv2.sol\":3564:3585  i < ngoWallets.length */\n      dup2\n      lt\n        /* \"HumAidTokenv2.sol\":3547:3782  for (uint i = 0; i < ngoWallets.length; ++i){... */\n      iszero\n      tag_212\n      jumpi\n        /* \"HumAidTokenv2.sol\":3673:3681  _ngoName */\n      dup4\n        /* \"HumAidTokenv2.sol\":3656:3683  keccak256(bytes (_ngoName)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"HumAidTokenv2.sol\":3627:3635  ngoNames */\n      0x07\n        /* \"HumAidTokenv2.sol\":3627:3650  ngoNames[ngoWallets[i]] */\n      0x00\n        /* \"HumAidTokenv2.sol\":3636:3646  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":3647:3648  i */\n      dup5\n        /* \"HumAidTokenv2.sol\":3636:3649  ngoWallets[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_215\n      jumpi\n      tag_215\n      tag_155\n      jump\t// in\n    tag_215:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"HumAidTokenv2.sol\":3627:3650  ngoNames[ngoWallets[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      swap1\n      swap2\n      keccak256\n        /* \"HumAidTokenv2.sol\":3610:3652  keccak256(bytes (ngoNames[ngoWallets[i]])) */\n      swap1\n      mload\n      tag_217\n      swap2\n        /* \"HumAidTokenv2.sol\":3627:3650  ngoNames[ngoWallets[i]] */\n      swap1\n        /* \"HumAidTokenv2.sol\":3610:3652  keccak256(bytes (ngoNames[ngoWallets[i]])) */\n      tag_158\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"HumAidTokenv2.sol\":3610:3683  keccak256(bytes (ngoNames[ngoWallets[i]])) == keccak256(bytes (_ngoName)) */\n      sub\n        /* \"HumAidTokenv2.sol\":3606:3771  if (keccak256(bytes (ngoNames[ngoWallets[i]])) == keccak256(bytes (_ngoName))) {... */\n      tag_218\n      jumpi\n        /* \"HumAidTokenv2.sol\":3718:3728  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":3729:3730  i */\n      dup2\n        /* \"HumAidTokenv2.sol\":3718:3731  ngoWallets[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_220\n      jumpi\n      tag_220\n      tag_155\n      jump\t// in\n    tag_220:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      pop\n        /* \"HumAidTokenv2.sol\":3750:3755  break */\n      jump(tag_212)\n        /* \"HumAidTokenv2.sol\":3606:3771  if (keccak256(bytes (ngoNames[ngoWallets[i]])) == keccak256(bytes (_ngoName))) {... */\n    tag_218:\n        /* \"HumAidTokenv2.sol\":3587:3590  ++i */\n      tag_222\n      dup2\n      tag_161\n      jump\t// in\n    tag_222:\n      swap1\n      pop\n        /* \"HumAidTokenv2.sol\":3547:3782  for (uint i = 0; i < ngoWallets.length; ++i){... */\n      jump(tag_211)\n    tag_212:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":3796:3821  _ngoAddress == address(0) */\n      dup2\n      and\n        /* \"HumAidTokenv2.sol\":3792:3835  if (_ngoAddress == address(0)) return false */\n      tag_223\n      jumpi\n      pop\n        /* \"HumAidTokenv2.sol\":3830:3835  false */\n      0x00\n      swap3\n        /* \"HumAidTokenv2.sol\":3412:3988  function unregisterNGO(string memory _ngoName) external onlyOwner returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"HumAidTokenv2.sol\":3792:3835  if (_ngoAddress == address(0)) return false */\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":3855:3876  ngoNames[_ngoAddress] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HumAidTokenv2.sol\":3855:3863  ngoNames */\n      0x07\n        /* \"HumAidTokenv2.sol\":3855:3876  ngoNames[_ngoAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"HumAidTokenv2.sol\":3848:3876  delete ngoNames[_ngoAddress] */\n      tag_224\n      swap2\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"HumAidTokenv2.sol\":3892:3930  NGOUnregistered(_ngoName, _ngoAddress) */\n      0xf7ce65b9119570713c55642c7ba09904806c36ec3da8fa5b1a8aa4a223132c2e\n        /* \"HumAidTokenv2.sol\":3908:3916  _ngoName */\n      dup4\n        /* \"HumAidTokenv2.sol\":3918:3929  _ngoAddress */\n      dup3\n        /* \"HumAidTokenv2.sol\":3892:3930  NGOUnregistered(_ngoName, _ngoAddress) */\n      mload(0x40)\n      tag_226\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"HumAidTokenv2.sol\":3948:3980  unregisterNGOWallet(_ngoAddress) */\n      tag_227\n        /* \"HumAidTokenv2.sol\":3968:3979  _ngoAddress */\n      dup2\n        /* \"HumAidTokenv2.sol\":3948:3967  unregisterNGOWallet */\n      tag_228\n        /* \"HumAidTokenv2.sol\":3948:3980  unregisterNGOWallet(_ngoAddress) */\n      jump\t// in\n    tag_227:\n        /* \"HumAidTokenv2.sol\":3941:3980  return unregisterNGOWallet(_ngoAddress) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n    tag_210:\n        /* \"HumAidTokenv2.sol\":3412:3988  function unregisterNGO(string memory _ngoName) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"HumAidTokenv2.sol\":1502:1634  function excludeFromFee(address account, bool excluded) external onlyOwner {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_231\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":1588:1615  _isExcludedFromFee[account] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HumAidTokenv2.sol\":1588:1606  _isExcludedFromFee */\n      0x09\n        /* \"HumAidTokenv2.sol\":1588:1615  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"HumAidTokenv2.sol\":1588:1626  _isExcludedFromFee[account] = excluded */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"HumAidTokenv2.sol\":1502:1634  function excludeFromFee(address account, bool excluded) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_234:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3779:3830   */\n      mstore\n        /* \"#utility.yul\":3752:3770   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_148\n        /* \"#utility.yul\":3633:3836   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"HumAidTokenv2.sol\":3996:4613  function distributeTreasuryToNGOs() external onlyOwner {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_240:\n        /* \"HumAidTokenv2.sol\":4070:4084  treasuryWallet */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0a))\n        /* \"HumAidTokenv2.sol\":4062:4126  require(treasuryWallet != address(0), \"Treasury wallet not set\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10199:10201   */\n      0x20\n        /* \"HumAidTokenv2.sol\":4062:4126  require(treasuryWallet != address(0), \"Treasury wallet not set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10181:10202   */\n      mstore\n        /* \"#utility.yul\":10238:10240   */\n      0x17\n        /* \"#utility.yul\":10218:10236   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10211:10241   */\n      mstore\n        /* \"#utility.yul\":10277:10302   */\n      0x54726561737572792077616c6c6574206e6f7420736574000000000000000000\n        /* \"#utility.yul\":10257:10275   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10250:10303   */\n      mstore\n        /* \"#utility.yul\":10320:10338   */\n      0x64\n      add\n        /* \"HumAidTokenv2.sol\":4062:4126  require(treasuryWallet != address(0), \"Treasury wallet not set\") */\n      tag_148\n        /* \"#utility.yul\":9997:10344   */\n      jump\n        /* \"HumAidTokenv2.sol\":4062:4126  require(treasuryWallet != address(0), \"Treasury wallet not set\") */\n    tag_242:\n        /* \"HumAidTokenv2.sol\":4156:4166  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":4156:4173  ngoWallets.length */\n      sload\n        /* \"HumAidTokenv2.sol\":4192:4204  ngoCount > 0 */\n      dup1\n        /* \"HumAidTokenv2.sol\":4184:4227  require(ngoCount > 0, \"No NGOs registered\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10551:10553   */\n      0x20\n        /* \"HumAidTokenv2.sol\":4184:4227  require(ngoCount > 0, \"No NGOs registered\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10533:10554   */\n      mstore\n        /* \"#utility.yul\":10590:10592   */\n      0x12\n        /* \"#utility.yul\":10570:10588   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10563:10593   */\n      mstore\n      shl(0x72, 0x139bc81391d3dcc81c9959da5cdd195c9959)\n        /* \"#utility.yul\":10609:10627   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10602:10650   */\n      mstore\n        /* \"#utility.yul\":10667:10685   */\n      0x64\n      add\n        /* \"HumAidTokenv2.sol\":4184:4227  require(ngoCount > 0, \"No NGOs registered\") */\n      tag_148\n        /* \"#utility.yul\":10349:10691   */\n      jump\n        /* \"HumAidTokenv2.sol\":4184:4227  require(ngoCount > 0, \"No NGOs registered\") */\n    tag_245:\n        /* \"HumAidTokenv2.sol\":4276:4290  treasuryWallet */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0a))\n        /* \"HumAidTokenv2.sol\":4240:4263  uint256 treasuryBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"HumAidTokenv2.sol\":4310:4329  treasuryBalance > 0 */\n      dup1\n        /* \"HumAidTokenv2.sol\":4302:4356  require(treasuryBalance > 0, \"No funds to distribute\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10898:10900   */\n      0x20\n        /* \"HumAidTokenv2.sol\":4302:4356  require(treasuryBalance > 0, \"No funds to distribute\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10880:10901   */\n      mstore\n        /* \"#utility.yul\":10937:10939   */\n      0x16\n        /* \"#utility.yul\":10917:10935   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10910:10940   */\n      mstore\n      shl(0x50, 0x4e6f2066756e647320746f2064697374726962757465)\n        /* \"#utility.yul\":10956:10974   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10949:11001   */\n      mstore\n        /* \"#utility.yul\":11018:11036   */\n      0x64\n      add\n        /* \"HumAidTokenv2.sol\":4302:4356  require(treasuryBalance > 0, \"No funds to distribute\") */\n      tag_148\n        /* \"#utility.yul\":10696:11042   */\n      jump\n        /* \"HumAidTokenv2.sol\":4302:4356  require(treasuryBalance > 0, \"No funds to distribute\") */\n    tag_249:\n        /* \"HumAidTokenv2.sol\":4369:4382  uint256 share */\n      0x00\n        /* \"HumAidTokenv2.sol\":4385:4411  treasuryBalance / ngoCount */\n      tag_252\n        /* \"HumAidTokenv2.sol\":4403:4411  ngoCount */\n      dup4\n        /* \"HumAidTokenv2.sol\":4385:4400  treasuryBalance */\n      dup4\n        /* \"HumAidTokenv2.sol\":4385:4411  treasuryBalance / ngoCount */\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"HumAidTokenv2.sol\":4369:4411  uint256 share = treasuryBalance / ngoCount */\n      swap1\n      pop\n        /* \"HumAidTokenv2.sol\":4438:4439  0 */\n      0x00\n        /* \"HumAidTokenv2.sol\":4430:4435  share */\n      dup2\n        /* \"HumAidTokenv2.sol\":4430:4439  share > 0 */\n      gt\n        /* \"HumAidTokenv2.sol\":4422:4479  require(share > 0, \"Insufficient funds for distribution\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11471:11473   */\n      0x20\n        /* \"HumAidTokenv2.sol\":4422:4479  require(share > 0, \"Insufficient funds for distribution\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11453:11474   */\n      mstore\n        /* \"#utility.yul\":11510:11512   */\n      0x23\n        /* \"#utility.yul\":11490:11508   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11483:11513   */\n      mstore\n        /* \"#utility.yul\":11549:11583   */\n      0x496e73756666696369656e742066756e647320666f7220646973747269627574\n        /* \"#utility.yul\":11529:11547   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11522:11584   */\n      mstore\n      shl(0xe9, 0x34b7b7)\n        /* \"#utility.yul\":11600:11618   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11593:11626   */\n      mstore\n        /* \"#utility.yul\":11643:11662   */\n      0x84\n      add\n        /* \"HumAidTokenv2.sol\":4422:4479  require(share > 0, \"Insufficient funds for distribution\") */\n      tag_148\n        /* \"#utility.yul\":11269:11668   */\n      jump\n        /* \"HumAidTokenv2.sol\":4422:4479  require(share > 0, \"Insufficient funds for distribution\") */\n    tag_254:\n        /* \"HumAidTokenv2.sol\":4497:4503  uint i */\n      0x00\n        /* \"HumAidTokenv2.sol\":4492:4606  for (uint i = 0; i < ngoCount; ++i) {... */\n    tag_257:\n        /* \"HumAidTokenv2.sol\":4513:4521  ngoCount */\n      dup4\n        /* \"HumAidTokenv2.sol\":4509:4510  i */\n      dup2\n        /* \"HumAidTokenv2.sol\":4509:4521  i < ngoCount */\n      lt\n        /* \"HumAidTokenv2.sol\":4492:4606  for (uint i = 0; i < ngoCount; ++i) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"HumAidTokenv2.sol\":4557:4571  treasuryWallet */\n      sload(0x0a)\n        /* \"HumAidTokenv2.sol\":4573:4583  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":4573:4586  ngoWallets[i] */\n      dup1\n      sload\n        /* \"HumAidTokenv2.sol\":4543:4594  super._update(treasuryWallet, ngoWallets[i], share) */\n      tag_260\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":4557:4571  treasuryWallet */\n      and\n      swap2\n        /* \"HumAidTokenv2.sol\":4573:4583  ngoWallets */\n      swap1\n        /* \"HumAidTokenv2.sol\":4584:4585  i */\n      dup5\n      swap1\n        /* \"HumAidTokenv2.sol\":4573:4586  ngoWallets[i] */\n      dup2\n      lt\n      tag_262\n      jumpi\n      tag_262\n      tag_155\n      jump\t// in\n    tag_262:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"HumAidTokenv2.sol\":4588:4593  share */\n      dup5\n        /* \"HumAidTokenv2.sol\":4543:4556  super._update */\n      tag_264\n        /* \"HumAidTokenv2.sol\":4543:4594  super._update(treasuryWallet, ngoWallets[i], share) */\n      jump\t// in\n    tag_260:\n        /* \"HumAidTokenv2.sol\":4523:4526  ++i */\n      tag_265\n      dup2\n      tag_161\n      jump\t// in\n    tag_265:\n      swap1\n      pop\n        /* \"HumAidTokenv2.sol\":4492:4606  for (uint i = 0; i < ngoCount; ++i) {... */\n      jump(tag_257)\n    tag_258:\n      pop\n        /* \"HumAidTokenv2.sol\":4051:4613  {... */\n      pop\n      pop\n      pop\n        /* \"HumAidTokenv2.sol\":3996:4613  function distributeTreasuryToNGOs() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11893:11925   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11875:11926   */\n      mstore\n        /* \"#utility.yul\":11942:11960   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":11935:11969   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":11985:12003   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":11978:12012   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11848:11866   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_148\n        /* \"#utility.yul\":11673:12018   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3779:3830   */\n      mstore\n        /* \"#utility.yul\":3752:3770   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      tag_148\n        /* \"#utility.yul\":3633:3836   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_278:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3779:3830   */\n      mstore\n        /* \"#utility.yul\":3752:3770   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      tag_148\n        /* \"#utility.yul\":3633:3836   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3779:3830   */\n      mstore\n        /* \"#utility.yul\":3752:3770   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_148\n        /* \"#utility.yul\":3633:3836   */\n      jump\n        /* \"HumAidTokenv2.sol\":1919:2399  function registerNGOWallet(address _ngoAddress) private returns (bool){... */\n    tag_167:\n        /* \"HumAidTokenv2.sol\":1984:1988  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":2008:2033  _ngoAddress != address(0) */\n      dup3\n      and\n        /* \"HumAidTokenv2.sol\":2000:2057  require(_ngoAddress != address(0), \"Invalid NGO address\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_291:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":2076:2107  _isExcludedFromFee[_ngoAddress] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HumAidTokenv2.sol\":2076:2094  _isExcludedFromFee */\n      0x09\n        /* \"HumAidTokenv2.sol\":2076:2107  _isExcludedFromFee[_ngoAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"HumAidTokenv2.sol\":2076:2116  _isExcludedFromFee[_ngoAddress] == false */\n      iszero\n        /* \"HumAidTokenv2.sol\":2068:2154  require(_isExcludedFromFee[_ngoAddress] == false, \"This wallet is already registered\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12225:12227   */\n      0x20\n        /* \"HumAidTokenv2.sol\":2068:2154  require(_isExcludedFromFee[_ngoAddress] == false, \"This wallet is already registered\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12207:12228   */\n      mstore\n        /* \"#utility.yul\":12264:12266   */\n      0x21\n        /* \"#utility.yul\":12244:12262   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12237:12267   */\n      mstore\n        /* \"#utility.yul\":12303:12337   */\n      0x546869732077616c6c657420697320616c726561647920726567697374657265\n        /* \"#utility.yul\":12283:12301   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12276:12338   */\n      mstore\n      shl(0xfa, 0x19)\n        /* \"#utility.yul\":12354:12372   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12347:12378   */\n      mstore\n        /* \"#utility.yul\":12395:12414   */\n      0x84\n      add\n        /* \"HumAidTokenv2.sol\":2068:2154  require(_isExcludedFromFee[_ngoAddress] == false, \"This wallet is already registered\") */\n      tag_148\n        /* \"#utility.yul\":12023:12420   */\n      jump\n        /* \"HumAidTokenv2.sol\":2068:2154  require(_isExcludedFromFee[_ngoAddress] == false, \"This wallet is already registered\") */\n    tag_293:\n        /* \"HumAidTokenv2.sol\":2170:2176  uint i */\n      0x00\n        /* \"HumAidTokenv2.sol\":2165:2281  for (uint i = 0; i < ngoWallets.length; ++i){... */\n    tag_296:\n        /* \"HumAidTokenv2.sol\":2186:2196  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":2186:2203  ngoWallets.length */\n      sload\n        /* \"HumAidTokenv2.sol\":2182:2203  i < ngoWallets.length */\n      dup2\n      lt\n        /* \"HumAidTokenv2.sol\":2165:2281  for (uint i = 0; i < ngoWallets.length; ++i){... */\n      iszero\n      tag_297\n      jumpi\n        /* \"HumAidTokenv2.sol\":2244:2255  _ngoAddress */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":2227:2255  ngoWallets[i] == _ngoAddress */\n      and\n        /* \"HumAidTokenv2.sol\":2227:2237  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":2238:2239  i */\n      dup3\n        /* \"HumAidTokenv2.sol\":2227:2240  ngoWallets[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_300\n      jumpi\n      tag_300\n      tag_155\n      jump\t// in\n    tag_300:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"HumAidTokenv2.sol\":2227:2255  ngoWallets[i] == _ngoAddress */\n      sub\n        /* \"HumAidTokenv2.sol\":2224:2269  if(ngoWallets[i] == _ngoAddress) return false */\n      tag_302\n      jumpi\n      pop\n        /* \"HumAidTokenv2.sol\":2264:2269  false */\n      0x00\n      swap3\n        /* \"HumAidTokenv2.sol\":1919:2399  function registerNGOWallet(address _ngoAddress) private returns (bool){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"HumAidTokenv2.sol\":2224:2269  if(ngoWallets[i] == _ngoAddress) return false */\n    tag_302:\n        /* \"HumAidTokenv2.sol\":2205:2208  ++i */\n      tag_303\n      dup2\n      tag_161\n      jump\t// in\n    tag_303:\n      swap1\n      pop\n        /* \"HumAidTokenv2.sol\":2165:2281  for (uint i = 0; i < ngoWallets.length; ++i){... */\n      jump(tag_296)\n    tag_297:\n      pop\n      pop\n        /* \"HumAidTokenv2.sol\":1135:1145  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":1135:1160  ngoWallets.push(_address) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n      0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n      dup4\n      or\n      swap1\n      sstore\n      0x00\n        /* \"HumAidTokenv2.sol\":2331:2362  _isExcludedFromFee[_ngoAddress] */\n      swap2\n      dup3\n      mstore\n        /* \"HumAidTokenv2.sol\":2331:2349  _isExcludedFromFee */\n      0x09\n        /* \"HumAidTokenv2.sol\":2331:2362  _isExcludedFromFee[_ngoAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"HumAidTokenv2.sol\":2331:2369  _isExcludedFromFee[_ngoAddress] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"HumAidTokenv2.sol\":1135:1160  ngoWallets.push(_address) */\n      swap1\n        /* \"HumAidTokenv2.sol\":1919:2399  function registerNGOWallet(address _ngoAddress) private returns (bool){... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3779:3830   */\n      mstore\n        /* \"#utility.yul\":3752:3770   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      tag_148\n        /* \"#utility.yul\":3633:3836   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_309\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"HumAidTokenv2.sol\":2964:3404  function unregisterNGOWallet(address _ngoAddress) private returns (bool){... */\n    tag_228:\n        /* \"HumAidTokenv2.sol\":3031:3035  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":3055:3080  _ngoAddress != address(0) */\n      dup3\n      and\n        /* \"HumAidTokenv2.sol\":3047:3104  require(_ngoAddress != address(0), \"Invalid NGO address\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_312:\n        /* \"HumAidTokenv2.sol\":3120:3128  uint32 i */\n      0x00\n        /* \"HumAidTokenv2.sol\":3115:3374  for (uint32 i = 0; i < ngoWallets.length; ++i) ... */\n    tag_314:\n        /* \"HumAidTokenv2.sol\":3138:3148  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":3138:3155  ngoWallets.length */\n      sload\n        /* \"HumAidTokenv2.sol\":3134:3155  i < ngoWallets.length */\n      0xffffffff\n      dup3\n      and\n      lt\n        /* \"HumAidTokenv2.sol\":3115:3374  for (uint32 i = 0; i < ngoWallets.length; ++i) ... */\n      iszero\n      tag_315\n      jumpi\n        /* \"HumAidTokenv2.sol\":3208:3219  _ngoAddress */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":3191:3219  ngoWallets[i] == _ngoAddress */\n      and\n        /* \"HumAidTokenv2.sol\":3191:3201  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":3202:3203  i */\n      dup3\n        /* \"HumAidTokenv2.sol\":3191:3204  ngoWallets[i] */\n      0xffffffff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_318\n      jumpi\n      tag_318\n      tag_155\n      jump\t// in\n    tag_318:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"HumAidTokenv2.sol\":3191:3219  ngoWallets[i] == _ngoAddress */\n      sub\n        /* \"HumAidTokenv2.sol\":3187:3363  if (ngoWallets[i] == _ngoAddress) {... */\n      tag_320\n      jumpi\n        /* \"HumAidTokenv2.sol\":3240:3260  popFromNGOWallets(i) */\n      tag_321\n        /* \"HumAidTokenv2.sol\":3258:3259  i */\n      dup2\n        /* \"HumAidTokenv2.sol\":3240:3257  popFromNGOWallets */\n      tag_322\n        /* \"HumAidTokenv2.sol\":3240:3260  popFromNGOWallets(i) */\n      jump\t// in\n    tag_321:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":3279:3310  _isExcludedFromFee[_ngoAddress] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HumAidTokenv2.sol\":3279:3297  _isExcludedFromFee */\n      0x09\n        /* \"HumAidTokenv2.sol\":3279:3310  _isExcludedFromFee[_ngoAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"HumAidTokenv2.sol\":3279:3317  _isExcludedFromFee[_ngoAddress] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"HumAidTokenv2.sol\":3313:3317  true */\n      0x01\n        /* \"HumAidTokenv2.sol\":3279:3317  _isExcludedFromFee[_ngoAddress] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"HumAidTokenv2.sol\":3313:3317  true */\n      swap1\n        /* \"HumAidTokenv2.sol\":2964:3404  function unregisterNGOWallet(address _ngoAddress) private returns (bool){... */\n      jump\t// out\n        /* \"HumAidTokenv2.sol\":3187:3363  if (ngoWallets[i] == _ngoAddress) {... */\n    tag_320:\n        /* \"HumAidTokenv2.sol\":3157:3160  ++i */\n      tag_323\n      dup2\n      tag_324\n      jump\t// in\n    tag_323:\n      swap1\n      pop\n        /* \"HumAidTokenv2.sol\":3115:3374  for (uint32 i = 0; i < ngoWallets.length; ++i) ... */\n      jump(tag_314)\n    tag_315:\n      pop\n        /* \"HumAidTokenv2.sol\":3391:3396  false */\n      0x00\n      swap3\n        /* \"HumAidTokenv2.sol\":2964:3404  function unregisterNGOWallet(address _ngoAddress) private returns (bool){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_327\n      swap2\n      swap1\n      tag_328\n      jump\t// in\n    tag_327:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_329\n      swap1\n      pop\n      jump\n    tag_326:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11893:11925   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11875:11926   */\n      mstore\n        /* \"#utility.yul\":11942:11960   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":11935:11969   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":11985:12003   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":11978:12012   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11848:11866   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_148\n        /* \"#utility.yul\":11673:12018   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_330:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_329:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_333)\n    tag_332:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_334\n      swap2\n        /* \"#utility.yul\":1442:1467   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1430:1432   */\n      0x20\n        /* \"#utility.yul\":1415:1433   */\n      add\n      swap1\n        /* \"#utility.yul\":1296:1473   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_269:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3779:3830   */\n      mstore\n        /* \"#utility.yul\":3752:3770   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      tag_148\n        /* \"#utility.yul\":3633:3836   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_336:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_338\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3779:3830   */\n      mstore\n        /* \"#utility.yul\":3752:3770   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      tag_148\n        /* \"#utility.yul\":3633:3836   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_338:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_341\n      swap2\n        /* \"#utility.yul\":1442:1467   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1430:1432   */\n      0x20\n        /* \"#utility.yul\":1415:1433   */\n      add\n      swap1\n        /* \"#utility.yul\":1296:1473   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HumAidTokenv2.sol\":4718:5529  function _update(address from, address to, uint256 value) internal override {... */\n    tag_283:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":4809:4833  _isExcludedFromFee[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HumAidTokenv2.sol\":4809:4827  _isExcludedFromFee */\n      0x09\n        /* \"HumAidTokenv2.sol\":4809:4833  _isExcludedFromFee[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"HumAidTokenv2.sol\":4809:4859  _isExcludedFromFee[from] || _isExcludedFromFee[to] */\n      tag_343\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":4837:4859  _isExcludedFromFee[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HumAidTokenv2.sol\":4837:4855  _isExcludedFromFee */\n      0x09\n        /* \"HumAidTokenv2.sol\":4837:4859  _isExcludedFromFee[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"HumAidTokenv2.sol\":4809:4859  _isExcludedFromFee[from] || _isExcludedFromFee[to] */\n    tag_343:\n        /* \"HumAidTokenv2.sol\":4809:4878  _isExcludedFromFee[from] || _isExcludedFromFee[to] || feePercent == 0 */\n      dup1\n      tag_344\n      jumpi\n      pop\n        /* \"HumAidTokenv2.sol\":4863:4873  feePercent */\n      sload(0x06)\n        /* \"HumAidTokenv2.sol\":4863:4878  feePercent == 0 */\n      iszero\n        /* \"HumAidTokenv2.sol\":4809:4878  _isExcludedFromFee[from] || _isExcludedFromFee[to] || feePercent == 0 */\n    tag_344:\n        /* \"HumAidTokenv2.sol\":4805:5522  if (_isExcludedFromFee[from] || _isExcludedFromFee[to] || feePercent == 0) {... */\n      iszero\n      tag_345\n      jumpi\n        /* \"HumAidTokenv2.sol\":4895:4925  super._update(from, to, value) */\n      tag_268\n        /* \"HumAidTokenv2.sol\":4909:4913  from */\n      dup4\n        /* \"HumAidTokenv2.sol\":4915:4917  to */\n      dup4\n        /* \"HumAidTokenv2.sol\":4919:4924  value */\n      dup4\n        /* \"HumAidTokenv2.sol\":4895:4908  super._update */\n      tag_264\n        /* \"HumAidTokenv2.sol\":4895:4925  super._update(from, to, value) */\n      jump\t// in\n        /* \"HumAidTokenv2.sol\":4805:5522  if (_isExcludedFromFee[from] || _isExcludedFromFee[to] || feePercent == 0) {... */\n    tag_345:\n        /* \"HumAidTokenv2.sol\":4958:4969  uint256 fee */\n      0x00\n        /* \"HumAidTokenv2.sol\":4995:4999  1000 */\n      0x03e8\n        /* \"HumAidTokenv2.sol\":4981:4991  feePercent */\n      sload(0x06)\n        /* \"HumAidTokenv2.sol\":4973:4978  value */\n      dup4\n        /* \"HumAidTokenv2.sol\":4973:4991  value * feePercent */\n      tag_348\n      swap2\n      swap1\n      tag_349\n      jump\t// in\n    tag_348:\n        /* \"HumAidTokenv2.sol\":4972:4999  (value * feePercent) / 1000 */\n      tag_350\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_350:\n        /* \"HumAidTokenv2.sol\":4958:4999  uint256 fee = (value * feePercent) / 1000 */\n      swap1\n      pop\n        /* \"HumAidTokenv2.sol\":5014:5036  uint256 amountAfterFee */\n      0x00\n        /* \"HumAidTokenv2.sol\":5039:5050  value - fee */\n      tag_351\n        /* \"HumAidTokenv2.sol\":4958:4999  uint256 fee = (value * feePercent) / 1000 */\n      dup3\n        /* \"HumAidTokenv2.sol\":5039:5044  value */\n      dup5\n        /* \"HumAidTokenv2.sol\":5039:5050  value - fee */\n      tag_352\n      jump\t// in\n    tag_351:\n        /* \"HumAidTokenv2.sol\":5081:5091  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":5081:5098  ngoWallets.length */\n      sload\n        /* \"HumAidTokenv2.sol\":5014:5050  uint256 amountAfterFee = value - fee */\n      swap1\n      swap2\n      pop\n        /* \"HumAidTokenv2.sol\":5065:5078  uint256 share */\n      0x00\n      swap1\n        /* \"HumAidTokenv2.sol\":5081:5103  ngoWallets.length != 0 */\n      dup2\n      sub\n        /* \"HumAidTokenv2.sol\":5081:5133  ngoWallets.length != 0 ? fee / ngoWallets.length : 1 */\n      tag_353\n      jumpi\n        /* \"HumAidTokenv2.sol\":5132:5133  1 */\n      0x01\n        /* \"HumAidTokenv2.sol\":5081:5133  ngoWallets.length != 0 ? fee / ngoWallets.length : 1 */\n      jump(tag_355)\n    tag_353:\n        /* \"HumAidTokenv2.sol\":5112:5122  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":5112:5129  ngoWallets.length */\n      sload\n        /* \"HumAidTokenv2.sol\":5106:5129  fee / ngoWallets.length */\n      tag_355\n      swap1\n        /* \"HumAidTokenv2.sol\":5106:5109  fee */\n      dup5\n        /* \"HumAidTokenv2.sol\":5106:5129  fee / ngoWallets.length */\n      tag_253\n      jump\t// in\n    tag_355:\n        /* \"HumAidTokenv2.sol\":5183:5193  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":5183:5200  ngoWallets.length */\n      sload\n        /* \"HumAidTokenv2.sol\":5065:5133  uint256 share = ngoWallets.length != 0 ? fee / ngoWallets.length : 1 */\n      swap1\n      swap2\n      pop\n        /* \"HumAidTokenv2.sol\":5148:5165  uint256 remainder */\n      0x00\n      swap1\n        /* \"HumAidTokenv2.sol\":5175:5200  share * ngoWallets.length */\n      tag_356\n      swap1\n        /* \"HumAidTokenv2.sol\":5065:5133  uint256 share = ngoWallets.length != 0 ? fee / ngoWallets.length : 1 */\n      dup4\n        /* \"HumAidTokenv2.sol\":5175:5200  share * ngoWallets.length */\n      tag_349\n      jump\t// in\n    tag_356:\n        /* \"HumAidTokenv2.sol\":5168:5201  fee - (share * ngoWallets.length) */\n      tag_357\n      swap1\n        /* \"HumAidTokenv2.sol\":5168:5171  fee */\n      dup6\n        /* \"HumAidTokenv2.sol\":5168:5201  fee - (share * ngoWallets.length) */\n      tag_352\n      jump\t// in\n    tag_357:\n        /* \"HumAidTokenv2.sol\":5148:5201  uint256 remainder = fee - (share * ngoWallets.length) */\n      swap1\n      pop\n        /* \"HumAidTokenv2.sol\":5223:5229  uint i */\n      0x00\n        /* \"HumAidTokenv2.sol\":5218:5339  for (uint i = 0; i < ngoWallets.length; ++i) {... */\n    tag_358:\n        /* \"HumAidTokenv2.sol\":5239:5249  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":5239:5256  ngoWallets.length */\n      sload\n        /* \"HumAidTokenv2.sol\":5235:5256  i < ngoWallets.length */\n      dup2\n      lt\n        /* \"HumAidTokenv2.sol\":5218:5339  for (uint i = 0; i < ngoWallets.length; ++i) {... */\n      iszero\n      tag_359\n      jumpi\n        /* \"HumAidTokenv2.sol\":5282:5323  super._update(from, ngoWallets[i], share) */\n      tag_361\n        /* \"HumAidTokenv2.sol\":5296:5300  from */\n      dup9\n        /* \"HumAidTokenv2.sol\":5302:5312  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":5313:5314  i */\n      dup4\n        /* \"HumAidTokenv2.sol\":5302:5315  ngoWallets[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_363\n      jumpi\n      tag_363\n      tag_155\n      jump\t// in\n    tag_363:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"HumAidTokenv2.sol\":5317:5322  share */\n      dup6\n        /* \"HumAidTokenv2.sol\":5282:5295  super._update */\n      tag_264\n        /* \"HumAidTokenv2.sol\":5282:5323  super._update(from, ngoWallets[i], share) */\n      jump\t// in\n    tag_361:\n        /* \"HumAidTokenv2.sol\":5258:5261  ++i */\n      tag_365\n      dup2\n      tag_161\n      jump\t// in\n    tag_365:\n      swap1\n      pop\n        /* \"HumAidTokenv2.sol\":5218:5339  for (uint i = 0; i < ngoWallets.length; ++i) {... */\n      jump(tag_358)\n    tag_359:\n      pop\n        /* \"HumAidTokenv2.sol\":5359:5372  remainder > 0 */\n      dup1\n      iszero\n        /* \"HumAidTokenv2.sol\":5355:5455  if (remainder > 0) {... */\n      tag_367\n      jumpi\n        /* \"HumAidTokenv2.sol\":5413:5427  treasuryWallet */\n      sload(0x0a)\n        /* \"HumAidTokenv2.sol\":5393:5439  super._update(from, treasuryWallet, remainder) */\n      tag_367\n      swap1\n        /* \"HumAidTokenv2.sol\":5407:5411  from */\n      dup9\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":5413:5427  treasuryWallet */\n      and\n        /* \"HumAidTokenv2.sol\":5429:5438  remainder */\n      dup4\n        /* \"HumAidTokenv2.sol\":5393:5406  super._update */\n      tag_264\n        /* \"HumAidTokenv2.sol\":5393:5439  super._update(from, treasuryWallet, remainder) */\n      jump\t// in\n    tag_367:\n        /* \"HumAidTokenv2.sol\":5471:5510  super._update(from, to, amountAfterFee) */\n      tag_368\n        /* \"HumAidTokenv2.sol\":5485:5489  from */\n      dup8\n        /* \"HumAidTokenv2.sol\":5491:5493  to */\n      dup8\n        /* \"HumAidTokenv2.sol\":5495:5509  amountAfterFee */\n      dup6\n        /* \"HumAidTokenv2.sol\":5471:5484  super._update */\n      tag_264\n        /* \"HumAidTokenv2.sol\":5471:5510  super._update(from, to, amountAfterFee) */\n      jump\t// in\n    tag_368:\n        /* \"HumAidTokenv2.sol\":4943:5522  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"HumAidTokenv2.sol\":4718:5529  function _update(address from, address to, uint256 value) internal override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HumAidTokenv2.sol\":1176:1327  function popFromNGOWallets(uint32 _index) private { ... */\n    tag_322:\n        /* \"HumAidTokenv2.sol\":1259:1269  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":1270:1287  ngoWallets.length */\n      dup1\n      sload\n        /* \"HumAidTokenv2.sol\":1270:1291  ngoWallets.length - 1 */\n      tag_372\n      swap1\n        /* \"HumAidTokenv2.sol\":1290:1291  1 */\n      0x01\n      swap1\n        /* \"HumAidTokenv2.sol\":1270:1291  ngoWallets.length - 1 */\n      tag_352\n      jump\t// in\n    tag_372:\n        /* \"HumAidTokenv2.sol\":1259:1292  ngoWallets[ngoWallets.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_374\n      jumpi\n      tag_374\n      tag_155\n      jump\t// in\n    tag_374:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"HumAidTokenv2.sol\":1238:1248  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":1238:1256  ngoWallets[_index] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HumAidTokenv2.sol\":1259:1292  ngoWallets[ngoWallets.length - 1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"HumAidTokenv2.sol\":1238:1256  ngoWallets[_index] */\n      0xffffffff\n      dup5\n      and\n      swap1\n      dup2\n      lt\n      tag_377\n      jumpi\n      tag_377\n      tag_155\n      jump\t// in\n    tag_377:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"HumAidTokenv2.sol\":1238:1292  ngoWallets[_index] = ngoWallets[ngoWallets.length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"HumAidTokenv2.sol\":1303:1313  ngoWallets */\n      0x08\n        /* \"HumAidTokenv2.sol\":1303:1319  ngoWallets.pop() */\n      dup1\n      sload\n      dup1\n      tag_380\n      jumpi\n      tag_380\n      tag_381\n      jump\t// in\n    tag_380:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n      pop\n        /* \"HumAidTokenv2.sol\":1176:1327  function popFromNGOWallets(uint32 _index) private { ... */\n      jump\t// out\n    tag_225:\n      pop\n      dup1\n      sload\n      tag_383\n      swap1\n      tag_125\n      jump\t// in\n    tag_383:\n      0x00\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_385\n      jumpi\n      pop\n      pop\n      jump\t// out\n    tag_385:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n    tag_388:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_389\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_388)\n    tag_389:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:437   */\n    tag_390:\n        /* \"#utility.yul\":56:59   */\n      0x00\n        /* \"#utility.yul\":94:99   */\n      dup2\n        /* \"#utility.yul\":88:100   */\n      mload\n        /* \"#utility.yul\":121:127   */\n      dup1\n        /* \"#utility.yul\":116:119   */\n      dup5\n        /* \"#utility.yul\":109:128   */\n      mstore\n        /* \"#utility.yul\":146:147   */\n      0x00\n        /* \"#utility.yul\":156:318   */\n    tag_400:\n        /* \"#utility.yul\":170:176   */\n      dup2\n        /* \"#utility.yul\":167:168   */\n      dup2\n        /* \"#utility.yul\":164:177   */\n      lt\n        /* \"#utility.yul\":156:318   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":232:236   */\n      0x20\n        /* \"#utility.yul\":288:301   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":284:306   */\n      dup2\n      add\n        /* \"#utility.yul\":278:307   */\n      mload\n        /* \"#utility.yul\":260:271   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":256:276   */\n      dup3\n      add\n        /* \"#utility.yul\":249:308   */\n      mstore\n        /* \"#utility.yul\":185:197   */\n      add\n        /* \"#utility.yul\":156:318   */\n      jump(tag_400)\n    tag_402:\n        /* \"#utility.yul\":160:163   */\n      pop\n        /* \"#utility.yul\":363:364   */\n      0x00\n        /* \"#utility.yul\":356:360   */\n      0x20\n        /* \"#utility.yul\":347:353   */\n      dup3\n        /* \"#utility.yul\":342:345   */\n      dup7\n        /* \"#utility.yul\":338:354   */\n      add\n        /* \"#utility.yul\":334:361   */\n      add\n        /* \"#utility.yul\":327:365   */\n      mstore\n        /* \"#utility.yul\":426:430   */\n      0x20\n        /* \"#utility.yul\":419:421   */\n      0x1f\n        /* \"#utility.yul\":415:422   */\n      not\n        /* \"#utility.yul\":410:412   */\n      0x1f\n        /* \"#utility.yul\":402:408   */\n      dup4\n        /* \"#utility.yul\":398:413   */\n      add\n        /* \"#utility.yul\":394:423   */\n      and\n        /* \"#utility.yul\":389:392   */\n      dup6\n        /* \"#utility.yul\":385:424   */\n      add\n        /* \"#utility.yul\":381:431   */\n      add\n        /* \"#utility.yul\":374:431   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:662   */\n    tag_33:\n        /* \"#utility.yul\":591:593   */\n      0x20\n        /* \"#utility.yul\":580:589   */\n      dup2\n        /* \"#utility.yul\":573:594   */\n      mstore\n        /* \"#utility.yul\":554:558   */\n      0x00\n        /* \"#utility.yul\":611:656   */\n      tag_166\n        /* \"#utility.yul\":652:654   */\n      0x20\n        /* \"#utility.yul\":641:650   */\n      dup4\n        /* \"#utility.yul\":637:655   */\n      add\n        /* \"#utility.yul\":629:635   */\n      dup5\n        /* \"#utility.yul\":611:656   */\n      tag_390\n      jump\t// in\n        /* \"#utility.yul\":667:840   */\n    tag_391:\n        /* \"#utility.yul\":735:755   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":784:815   */\n      dup2\n      and\n        /* \"#utility.yul\":774:816   */\n      dup2\n      eq\n        /* \"#utility.yul\":764:834   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":830:831   */\n      0x00\n        /* \"#utility.yul\":827:828   */\n      dup1\n        /* \"#utility.yul\":820:832   */\n      revert\n        /* \"#utility.yul\":845:1099   */\n    tag_36:\n        /* \"#utility.yul\":913:919   */\n      0x00\n        /* \"#utility.yul\":921:927   */\n      dup1\n        /* \"#utility.yul\":974:976   */\n      0x40\n        /* \"#utility.yul\":962:971   */\n      dup4\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":949:972   */\n      sub\n        /* \"#utility.yul\":945:977   */\n      slt\n        /* \"#utility.yul\":942:994   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":990:991   */\n      0x00\n        /* \"#utility.yul\":987:988   */\n      dup1\n        /* \"#utility.yul\":980:992   */\n      revert\n        /* \"#utility.yul\":942:994   */\n    tag_408:\n        /* \"#utility.yul\":1013:1042   */\n      tag_409\n        /* \"#utility.yul\":1032:1041   */\n      dup4\n        /* \"#utility.yul\":1013:1042   */\n      tag_391\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":1003:1042   */\n      swap5\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"#utility.yul\":1074:1092   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1061:1093   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":845:1099   */\n      jump\t// out\n        /* \"#utility.yul\":1478:1806   */\n    tag_46:\n        /* \"#utility.yul\":1555:1561   */\n      0x00\n        /* \"#utility.yul\":1563:1569   */\n      dup1\n        /* \"#utility.yul\":1571:1577   */\n      0x00\n        /* \"#utility.yul\":1624:1626   */\n      0x60\n        /* \"#utility.yul\":1612:1621   */\n      dup5\n        /* \"#utility.yul\":1603:1610   */\n      dup7\n        /* \"#utility.yul\":1599:1622   */\n      sub\n        /* \"#utility.yul\":1595:1627   */\n      slt\n        /* \"#utility.yul\":1592:1644   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":1640:1641   */\n      0x00\n        /* \"#utility.yul\":1637:1638   */\n      dup1\n        /* \"#utility.yul\":1630:1642   */\n      revert\n        /* \"#utility.yul\":1592:1644   */\n    tag_413:\n        /* \"#utility.yul\":1663:1692   */\n      tag_414\n        /* \"#utility.yul\":1682:1691   */\n      dup5\n        /* \"#utility.yul\":1663:1692   */\n      tag_391\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":1653:1692   */\n      swap3\n      pop\n        /* \"#utility.yul\":1711:1749   */\n      tag_415\n        /* \"#utility.yul\":1745:1747   */\n      0x20\n        /* \"#utility.yul\":1734:1743   */\n      dup6\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1711:1749   */\n      tag_391\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":1701:1749   */\n      swap2\n      pop\n        /* \"#utility.yul\":1796:1798   */\n      0x40\n        /* \"#utility.yul\":1785:1794   */\n      dup5\n        /* \"#utility.yul\":1781:1799   */\n      add\n        /* \"#utility.yul\":1768:1800   */\n      calldataload\n        /* \"#utility.yul\":1758:1800   */\n      swap1\n      pop\n        /* \"#utility.yul\":1478:1806   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2000:2127   */\n    tag_392:\n        /* \"#utility.yul\":2061:2071   */\n      0x4e487b71\n        /* \"#utility.yul\":2056:2059   */\n      0xe0\n        /* \"#utility.yul\":2052:2072   */\n      shl\n        /* \"#utility.yul\":2049:2050   */\n      0x00\n        /* \"#utility.yul\":2042:2073   */\n      mstore\n        /* \"#utility.yul\":2092:2096   */\n      0x41\n        /* \"#utility.yul\":2089:2090   */\n      0x04\n        /* \"#utility.yul\":2082:2097   */\n      mstore\n        /* \"#utility.yul\":2116:2120   */\n      0x24\n        /* \"#utility.yul\":2113:2114   */\n      0x00\n        /* \"#utility.yul\":2106:2121   */\n      revert\n        /* \"#utility.yul\":2132:2851   */\n    tag_393:\n        /* \"#utility.yul\":2175:2180   */\n      0x00\n        /* \"#utility.yul\":2228:2231   */\n      dup3\n        /* \"#utility.yul\":2221:2225   */\n      0x1f\n        /* \"#utility.yul\":2213:2219   */\n      dup4\n        /* \"#utility.yul\":2209:2226   */\n      add\n        /* \"#utility.yul\":2205:2232   */\n      slt\n        /* \"#utility.yul\":2195:2250   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":2246:2247   */\n      0x00\n        /* \"#utility.yul\":2243:2244   */\n      dup1\n        /* \"#utility.yul\":2236:2248   */\n      revert\n        /* \"#utility.yul\":2195:2250   */\n    tag_419:\n        /* \"#utility.yul\":2282:2288   */\n      dup2\n        /* \"#utility.yul\":2269:2289   */\n      calldataload\n        /* \"#utility.yul\":2308:2326   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2345:2347   */\n      dup1\n        /* \"#utility.yul\":2341:2343   */\n      dup3\n        /* \"#utility.yul\":2338:2348   */\n      gt\n        /* \"#utility.yul\":2335:2371   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":2351:2369   */\n      tag_421\n      tag_392\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2426:2428   */\n      0x40\n        /* \"#utility.yul\":2420:2429   */\n      mload\n        /* \"#utility.yul\":2394:2396   */\n      0x1f\n        /* \"#utility.yul\":2480:2493   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2476:2498   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2500:2502   */\n      0x3f\n        /* \"#utility.yul\":2472:2503   */\n      add\n        /* \"#utility.yul\":2468:2508   */\n      and\n        /* \"#utility.yul\":2456:2509   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2524:2542   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":2544:2566   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2521:2567   */\n      or\n        /* \"#utility.yul\":2518:2590   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":2570:2588   */\n      tag_423\n      tag_392\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":2610:2620   */\n      dup2\n        /* \"#utility.yul\":2606:2608   */\n      0x40\n        /* \"#utility.yul\":2599:2621   */\n      mstore\n        /* \"#utility.yul\":2645:2647   */\n      dup4\n        /* \"#utility.yul\":2637:2643   */\n      dup2\n        /* \"#utility.yul\":2630:2648   */\n      mstore\n        /* \"#utility.yul\":2691:2694   */\n      dup7\n        /* \"#utility.yul\":2684:2688   */\n      0x20\n        /* \"#utility.yul\":2679:2681   */\n      dup6\n        /* \"#utility.yul\":2671:2677   */\n      dup9\n        /* \"#utility.yul\":2667:2682   */\n      add\n        /* \"#utility.yul\":2663:2689   */\n      add\n        /* \"#utility.yul\":2660:2695   */\n      gt\n        /* \"#utility.yul\":2657:2712   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":2708:2709   */\n      0x00\n        /* \"#utility.yul\":2705:2706   */\n      dup1\n        /* \"#utility.yul\":2698:2710   */\n      revert\n        /* \"#utility.yul\":2657:2712   */\n    tag_424:\n        /* \"#utility.yul\":2772:2774   */\n      dup4\n        /* \"#utility.yul\":2765:2769   */\n      0x20\n        /* \"#utility.yul\":2757:2763   */\n      dup8\n        /* \"#utility.yul\":2753:2770   */\n      add\n        /* \"#utility.yul\":2746:2750   */\n      0x20\n        /* \"#utility.yul\":2738:2744   */\n      dup4\n        /* \"#utility.yul\":2734:2751   */\n      add\n        /* \"#utility.yul\":2721:2775   */\n      calldatacopy\n        /* \"#utility.yul\":2819:2820   */\n      0x00\n        /* \"#utility.yul\":2812:2816   */\n      0x20\n        /* \"#utility.yul\":2807:2809   */\n      dup6\n        /* \"#utility.yul\":2799:2805   */\n      dup4\n        /* \"#utility.yul\":2795:2810   */\n      add\n        /* \"#utility.yul\":2791:2817   */\n      add\n        /* \"#utility.yul\":2784:2821   */\n      mstore\n        /* \"#utility.yul\":2839:2845   */\n      dup1\n        /* \"#utility.yul\":2830:2845   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2132:2851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2856:3252   */\n    tag_55:\n        /* \"#utility.yul\":2934:2940   */\n      0x00\n        /* \"#utility.yul\":2942:2948   */\n      dup1\n        /* \"#utility.yul\":2995:2997   */\n      0x40\n        /* \"#utility.yul\":2983:2992   */\n      dup4\n        /* \"#utility.yul\":2974:2981   */\n      dup6\n        /* \"#utility.yul\":2970:2993   */\n      sub\n        /* \"#utility.yul\":2966:2998   */\n      slt\n        /* \"#utility.yul\":2963:3015   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":3011:3012   */\n      0x00\n        /* \"#utility.yul\":3008:3009   */\n      dup1\n        /* \"#utility.yul\":3001:3013   */\n      revert\n        /* \"#utility.yul\":2963:3015   */\n    tag_426:\n        /* \"#utility.yul\":3051:3060   */\n      dup3\n        /* \"#utility.yul\":3038:3061   */\n      calldataload\n        /* \"#utility.yul\":3084:3102   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3076:3082   */\n      dup2\n        /* \"#utility.yul\":3073:3103   */\n      gt\n        /* \"#utility.yul\":3070:3120   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":3116:3117   */\n      0x00\n        /* \"#utility.yul\":3113:3114   */\n      dup1\n        /* \"#utility.yul\":3106:3118   */\n      revert\n        /* \"#utility.yul\":3070:3120   */\n    tag_427:\n        /* \"#utility.yul\":3139:3189   */\n      tag_428\n        /* \"#utility.yul\":3181:3188   */\n      dup6\n        /* \"#utility.yul\":3172:3178   */\n      dup3\n        /* \"#utility.yul\":3161:3170   */\n      dup7\n        /* \"#utility.yul\":3157:3179   */\n      add\n        /* \"#utility.yul\":3139:3189   */\n      tag_393\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3129:3189   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":3208:3246   */\n      tag_429\n        /* \"#utility.yul\":3242:3244   */\n      0x20\n        /* \"#utility.yul\":3231:3240   */\n      dup5\n        /* \"#utility.yul\":3227:3245   */\n      add\n        /* \"#utility.yul\":3208:3246   */\n      tag_391\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":3198:3246   */\n      swap1\n      pop\n        /* \"#utility.yul\":2856:3252   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3257:3437   */\n    tag_60:\n        /* \"#utility.yul\":3316:3322   */\n      0x00\n        /* \"#utility.yul\":3369:3371   */\n      0x20\n        /* \"#utility.yul\":3357:3366   */\n      dup3\n        /* \"#utility.yul\":3348:3355   */\n      dup5\n        /* \"#utility.yul\":3344:3367   */\n      sub\n        /* \"#utility.yul\":3340:3372   */\n      slt\n        /* \"#utility.yul\":3337:3389   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":3385:3386   */\n      0x00\n        /* \"#utility.yul\":3382:3383   */\n      dup1\n        /* \"#utility.yul\":3375:3387   */\n      revert\n        /* \"#utility.yul\":3337:3389   */\n    tag_431:\n      pop\n        /* \"#utility.yul\":3408:3431   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3257:3437   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3442:3628   */\n    tag_64:\n        /* \"#utility.yul\":3501:3507   */\n      0x00\n        /* \"#utility.yul\":3554:3556   */\n      0x20\n        /* \"#utility.yul\":3542:3551   */\n      dup3\n        /* \"#utility.yul\":3533:3540   */\n      dup5\n        /* \"#utility.yul\":3529:3552   */\n      sub\n        /* \"#utility.yul\":3525:3557   */\n      slt\n        /* \"#utility.yul\":3522:3574   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":3570:3571   */\n      0x00\n        /* \"#utility.yul\":3567:3568   */\n      dup1\n        /* \"#utility.yul\":3560:3572   */\n      revert\n        /* \"#utility.yul\":3522:3574   */\n    tag_433:\n        /* \"#utility.yul\":3593:3622   */\n      tag_166\n        /* \"#utility.yul\":3612:3621   */\n      dup3\n        /* \"#utility.yul\":3593:3622   */\n      tag_391\n      jump\t// in\n        /* \"#utility.yul\":3841:4163   */\n    tag_106:\n        /* \"#utility.yul\":3910:3916   */\n      0x00\n        /* \"#utility.yul\":3963:3965   */\n      0x20\n        /* \"#utility.yul\":3951:3960   */\n      dup3\n        /* \"#utility.yul\":3942:3949   */\n      dup5\n        /* \"#utility.yul\":3938:3961   */\n      sub\n        /* \"#utility.yul\":3934:3966   */\n      slt\n        /* \"#utility.yul\":3931:3983   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":3979:3980   */\n      0x00\n        /* \"#utility.yul\":3976:3977   */\n      dup1\n        /* \"#utility.yul\":3969:3981   */\n      revert\n        /* \"#utility.yul\":3931:3983   */\n    tag_437:\n        /* \"#utility.yul\":4019:4028   */\n      dup2\n        /* \"#utility.yul\":4006:4029   */\n      calldataload\n        /* \"#utility.yul\":4052:4070   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4044:4050   */\n      dup2\n        /* \"#utility.yul\":4041:4071   */\n      gt\n        /* \"#utility.yul\":4038:4088   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":4084:4085   */\n      0x00\n        /* \"#utility.yul\":4081:4082   */\n      dup1\n        /* \"#utility.yul\":4074:4086   */\n      revert\n        /* \"#utility.yul\":4038:4088   */\n    tag_438:\n        /* \"#utility.yul\":4107:4157   */\n      tag_439\n        /* \"#utility.yul\":4149:4156   */\n      dup5\n        /* \"#utility.yul\":4140:4146   */\n      dup3\n        /* \"#utility.yul\":4129:4138   */\n      dup6\n        /* \"#utility.yul\":4125:4147   */\n      add\n        /* \"#utility.yul\":4107:4157   */\n      tag_393\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4097:4157   */\n      swap5\n        /* \"#utility.yul\":3841:4163   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4168:4428   */\n    tag_111:\n        /* \"#utility.yul\":4236:4242   */\n      0x00\n        /* \"#utility.yul\":4244:4250   */\n      dup1\n        /* \"#utility.yul\":4297:4299   */\n      0x40\n        /* \"#utility.yul\":4285:4294   */\n      dup4\n        /* \"#utility.yul\":4276:4283   */\n      dup6\n        /* \"#utility.yul\":4272:4295   */\n      sub\n        /* \"#utility.yul\":4268:4300   */\n      slt\n        /* \"#utility.yul\":4265:4317   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":4313:4314   */\n      0x00\n        /* \"#utility.yul\":4310:4311   */\n      dup1\n        /* \"#utility.yul\":4303:4315   */\n      revert\n        /* \"#utility.yul\":4265:4317   */\n    tag_441:\n        /* \"#utility.yul\":4336:4365   */\n      tag_442\n        /* \"#utility.yul\":4355:4364   */\n      dup4\n        /* \"#utility.yul\":4336:4365   */\n      tag_391\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4326:4365   */\n      swap2\n      pop\n        /* \"#utility.yul\":4384:4422   */\n      tag_429\n        /* \"#utility.yul\":4418:4420   */\n      0x20\n        /* \"#utility.yul\":4407:4416   */\n      dup5\n        /* \"#utility.yul\":4403:4421   */\n      add\n        /* \"#utility.yul\":4384:4422   */\n      tag_391\n      jump\t// in\n        /* \"#utility.yul\":4433:4780   */\n    tag_116:\n        /* \"#utility.yul\":4498:4504   */\n      0x00\n        /* \"#utility.yul\":4506:4512   */\n      dup1\n        /* \"#utility.yul\":4559:4561   */\n      0x40\n        /* \"#utility.yul\":4547:4556   */\n      dup4\n        /* \"#utility.yul\":4538:4545   */\n      dup6\n        /* \"#utility.yul\":4534:4557   */\n      sub\n        /* \"#utility.yul\":4530:4562   */\n      slt\n        /* \"#utility.yul\":4527:4579   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":4575:4576   */\n      0x00\n        /* \"#utility.yul\":4572:4573   */\n      dup1\n        /* \"#utility.yul\":4565:4577   */\n      revert\n        /* \"#utility.yul\":4527:4579   */\n    tag_445:\n        /* \"#utility.yul\":4598:4627   */\n      tag_446\n        /* \"#utility.yul\":4617:4626   */\n      dup4\n        /* \"#utility.yul\":4598:4627   */\n      tag_391\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":4588:4627   */\n      swap2\n      pop\n        /* \"#utility.yul\":4677:4679   */\n      0x20\n        /* \"#utility.yul\":4666:4675   */\n      dup4\n        /* \"#utility.yul\":4662:4680   */\n      add\n        /* \"#utility.yul\":4649:4681   */\n      calldataload\n        /* \"#utility.yul\":4724:4729   */\n      dup1\n        /* \"#utility.yul\":4717:4730   */\n      iszero\n        /* \"#utility.yul\":4710:4731   */\n      iszero\n        /* \"#utility.yul\":4703:4708   */\n      dup2\n        /* \"#utility.yul\":4700:4732   */\n      eq\n        /* \"#utility.yul\":4690:4750   */\n      tag_447\n      jumpi\n        /* \"#utility.yul\":4746:4747   */\n      0x00\n        /* \"#utility.yul\":4743:4744   */\n      dup1\n        /* \"#utility.yul\":4736:4748   */\n      revert\n        /* \"#utility.yul\":4690:4750   */\n    tag_447:\n        /* \"#utility.yul\":4769:4774   */\n      dup1\n        /* \"#utility.yul\":4759:4774   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4433:4780   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4785:5165   */\n    tag_125:\n        /* \"#utility.yul\":4864:4865   */\n      0x01\n        /* \"#utility.yul\":4860:4872   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4907:4919   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4928:4989   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":4982:4986   */\n      0x7f\n        /* \"#utility.yul\":4974:4980   */\n      dup3\n        /* \"#utility.yul\":4970:4987   */\n      and\n        /* \"#utility.yul\":4960:4987   */\n      swap2\n      pop\n        /* \"#utility.yul\":4928:4989   */\n    tag_449:\n        /* \"#utility.yul\":5035:5037   */\n      0x20\n        /* \"#utility.yul\":5027:5033   */\n      dup3\n        /* \"#utility.yul\":5024:5038   */\n      lt\n        /* \"#utility.yul\":5004:5022   */\n      dup2\n        /* \"#utility.yul\":5001:5039   */\n      sub\n        /* \"#utility.yul\":4998:5159   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":5081:5091   */\n      0x4e487b71\n        /* \"#utility.yul\":5076:5079   */\n      0xe0\n        /* \"#utility.yul\":5072:5092   */\n      shl\n        /* \"#utility.yul\":5069:5070   */\n      0x00\n        /* \"#utility.yul\":5062:5093   */\n      mstore\n        /* \"#utility.yul\":5116:5120   */\n      0x22\n        /* \"#utility.yul\":5113:5114   */\n      0x04\n        /* \"#utility.yul\":5106:5121   */\n      mstore\n        /* \"#utility.yul\":5144:5148   */\n      0x24\n        /* \"#utility.yul\":5141:5142   */\n      0x00\n        /* \"#utility.yul\":5134:5149   */\n      revert\n        /* \"#utility.yul\":4998:5159   */\n    tag_450:\n      pop\n        /* \"#utility.yul\":4785:5165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5170:5513   */\n    tag_149:\n        /* \"#utility.yul\":5372:5374   */\n      0x20\n        /* \"#utility.yul\":5354:5375   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5411:5413   */\n      0x13\n        /* \"#utility.yul\":5391:5409   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5384:5414   */\n      mstore\n      shl(0x68, 0x496e76616c6964204e474f2061646472657373)\n        /* \"#utility.yul\":5445:5447   */\n      0x40\n        /* \"#utility.yul\":5430:5448   */\n      dup3\n      add\n        /* \"#utility.yul\":5423:5472   */\n      mstore\n        /* \"#utility.yul\":5504:5506   */\n      0x60\n        /* \"#utility.yul\":5489:5507   */\n      add\n      swap1\n        /* \"#utility.yul\":5170:5513   */\n      jump\t// out\n        /* \"#utility.yul\":5518:5645   */\n    tag_155:\n        /* \"#utility.yul\":5579:5589   */\n      0x4e487b71\n        /* \"#utility.yul\":5574:5577   */\n      0xe0\n        /* \"#utility.yul\":5570:5590   */\n      shl\n        /* \"#utility.yul\":5567:5568   */\n      0x00\n        /* \"#utility.yul\":5560:5591   */\n      mstore\n        /* \"#utility.yul\":5610:5614   */\n      0x32\n        /* \"#utility.yul\":5607:5608   */\n      0x04\n        /* \"#utility.yul\":5600:5615   */\n      mstore\n        /* \"#utility.yul\":5634:5638   */\n      0x24\n        /* \"#utility.yul\":5631:5632   */\n      0x00\n        /* \"#utility.yul\":5624:5639   */\n      revert\n        /* \"#utility.yul\":5779:6623   */\n    tag_158:\n        /* \"#utility.yul\":5909:5912   */\n      0x00\n        /* \"#utility.yul\":5938:5939   */\n      dup1\n        /* \"#utility.yul\":5971:5977   */\n      dup4\n        /* \"#utility.yul\":5965:5978   */\n      sload\n        /* \"#utility.yul\":6001:6037   */\n      tag_455\n        /* \"#utility.yul\":6027:6036   */\n      dup2\n        /* \"#utility.yul\":6001:6037   */\n      tag_125\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":6056:6057   */\n      0x01\n        /* \"#utility.yul\":6073:6091   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":6100:6233   */\n      dup1\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":6247:6248   */\n      0x01\n        /* \"#utility.yul\":6242:6598   */\n      dup2\n      eq\n      tag_458\n      jumpi\n        /* \"#utility.yul\":6066:6598   */\n      jump(tag_456)\n        /* \"#utility.yul\":6100:6233   */\n    tag_457:\n      not(0xff)\n        /* \"#utility.yul\":6133:6157   */\n      dup5\n      and\n        /* \"#utility.yul\":6121:6158   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6206:6220   */\n      dup3\n      iszero\n        /* \"#utility.yul\":6199:6221   */\n      iszero\n        /* \"#utility.yul\":6187:6222   */\n      dup4\n      mul\n        /* \"#utility.yul\":6178:6223   */\n      dup8\n      add\n      swap5\n      pop\n        /* \"#utility.yul\":6100:6233   */\n      jump(tag_456)\n        /* \"#utility.yul\":6242:6598   */\n    tag_458:\n        /* \"#utility.yul\":6273:6279   */\n      dup8\n        /* \"#utility.yul\":6270:6271   */\n      0x00\n        /* \"#utility.yul\":6263:6280   */\n      mstore\n        /* \"#utility.yul\":6303:6307   */\n      0x20\n        /* \"#utility.yul\":6348:6350   */\n      dup1\n        /* \"#utility.yul\":6345:6346   */\n      0x00\n        /* \"#utility.yul\":6335:6351   */\n      keccak256\n        /* \"#utility.yul\":6373:6374   */\n      0x00\n        /* \"#utility.yul\":6387:6552   */\n    tag_459:\n        /* \"#utility.yul\":6401:6407   */\n      dup6\n        /* \"#utility.yul\":6398:6399   */\n      dup2\n        /* \"#utility.yul\":6395:6408   */\n      lt\n        /* \"#utility.yul\":6387:6552   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":6479:6493   */\n      dup2\n      sload\n        /* \"#utility.yul\":6466:6477   */\n      dup11\n      dup3\n      add\n        /* \"#utility.yul\":6459:6494   */\n      mstore\n        /* \"#utility.yul\":6522:6538   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":6416:6426   */\n      dup3\n      add\n        /* \"#utility.yul\":6387:6552   */\n      jump(tag_459)\n    tag_461:\n        /* \"#utility.yul\":6391:6394   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6581:6587   */\n      dup3\n        /* \"#utility.yul\":6576:6579   */\n      dup8\n        /* \"#utility.yul\":6572:6588   */\n      add\n        /* \"#utility.yul\":6565:6588   */\n      swap5\n      pop\n        /* \"#utility.yul\":6066:6598   */\n    tag_456:\n      pop\n        /* \"#utility.yul\":6614:6617   */\n      swap3\n      swap7\n        /* \"#utility.yul\":5779:6623   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6628:6755   */\n    tag_395:\n        /* \"#utility.yul\":6689:6699   */\n      0x4e487b71\n        /* \"#utility.yul\":6684:6687   */\n      0xe0\n        /* \"#utility.yul\":6680:6700   */\n      shl\n        /* \"#utility.yul\":6677:6678   */\n      0x00\n        /* \"#utility.yul\":6670:6701   */\n      mstore\n        /* \"#utility.yul\":6720:6724   */\n      0x11\n        /* \"#utility.yul\":6717:6718   */\n      0x04\n        /* \"#utility.yul\":6710:6725   */\n      mstore\n        /* \"#utility.yul\":6744:6748   */\n      0x24\n        /* \"#utility.yul\":6741:6742   */\n      0x00\n        /* \"#utility.yul\":6734:6749   */\n      revert\n        /* \"#utility.yul\":6760:6895   */\n    tag_161:\n        /* \"#utility.yul\":6799:6802   */\n      0x00\n        /* \"#utility.yul\":6820:6837   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6817:6860   */\n      tag_465\n      jumpi\n        /* \"#utility.yul\":6840:6858   */\n      tag_465\n      tag_395\n      jump\t// in\n    tag_465:\n      pop\n        /* \"#utility.yul\":6887:6888   */\n      0x01\n        /* \"#utility.yul\":6876:6889   */\n      add\n      swap1\n        /* \"#utility.yul\":6760:6895   */\n      jump\t// out\n        /* \"#utility.yul\":6900:7445   */\n    tag_396:\n        /* \"#utility.yul\":7002:7004   */\n      0x1f\n        /* \"#utility.yul\":6997:7000   */\n      dup3\n        /* \"#utility.yul\":6994:7005   */\n      gt\n        /* \"#utility.yul\":6991:7439   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":7038:7039   */\n      0x00\n        /* \"#utility.yul\":7063:7068   */\n      dup2\n        /* \"#utility.yul\":7059:7061   */\n      dup2\n        /* \"#utility.yul\":7052:7069   */\n      mstore\n        /* \"#utility.yul\":7108:7112   */\n      0x20\n        /* \"#utility.yul\":7104:7106   */\n      dup2\n        /* \"#utility.yul\":7094:7113   */\n      keccak256\n        /* \"#utility.yul\":7178:7180   */\n      0x1f\n        /* \"#utility.yul\":7166:7176   */\n      dup6\n        /* \"#utility.yul\":7162:7181   */\n      add\n        /* \"#utility.yul\":7159:7160   */\n      0x05\n        /* \"#utility.yul\":7155:7182   */\n      shr\n        /* \"#utility.yul\":7149:7153   */\n      dup2\n        /* \"#utility.yul\":7145:7183   */\n      add\n        /* \"#utility.yul\":7214:7218   */\n      0x20\n        /* \"#utility.yul\":7202:7212   */\n      dup7\n        /* \"#utility.yul\":7199:7219   */\n      lt\n        /* \"#utility.yul\":7196:7243   */\n      iszero\n      tag_468\n      jumpi\n      pop\n        /* \"#utility.yul\":7237:7241   */\n      dup1\n        /* \"#utility.yul\":7196:7243   */\n    tag_468:\n        /* \"#utility.yul\":7292:7294   */\n      0x1f\n        /* \"#utility.yul\":7287:7290   */\n      dup6\n        /* \"#utility.yul\":7283:7295   */\n      add\n        /* \"#utility.yul\":7280:7281   */\n      0x05\n        /* \"#utility.yul\":7276:7296   */\n      shr\n        /* \"#utility.yul\":7270:7274   */\n      dup3\n        /* \"#utility.yul\":7266:7297   */\n      add\n        /* \"#utility.yul\":7256:7297   */\n      swap2\n      pop\n        /* \"#utility.yul\":7347:7429   */\n    tag_469:\n        /* \"#utility.yul\":7365:7367   */\n      dup2\n        /* \"#utility.yul\":7358:7363   */\n      dup2\n        /* \"#utility.yul\":7355:7368   */\n      lt\n        /* \"#utility.yul\":7347:7429   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":7410:7427   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":7391:7392   */\n      0x01\n        /* \"#utility.yul\":7380:7393   */\n      add\n        /* \"#utility.yul\":7347:7429   */\n      jump(tag_469)\n    tag_471:\n        /* \"#utility.yul\":7351:7354   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6900:7445   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7621:8976   */\n    tag_163:\n        /* \"#utility.yul\":7747:7750   */\n      dup2\n        /* \"#utility.yul\":7741:7751   */\n      mload\n        /* \"#utility.yul\":7774:7792   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7766:7772   */\n      dup2\n        /* \"#utility.yul\":7763:7793   */\n      gt\n        /* \"#utility.yul\":7760:7816   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":7796:7814   */\n      tag_475\n      tag_392\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7825:7922   */\n      tag_476\n        /* \"#utility.yul\":7915:7921   */\n      dup2\n        /* \"#utility.yul\":7875:7913   */\n      tag_477\n        /* \"#utility.yul\":7907:7911   */\n      dup5\n        /* \"#utility.yul\":7901:7912   */\n      sload\n        /* \"#utility.yul\":7875:7913   */\n      tag_125\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":7869:7873   */\n      dup5\n        /* \"#utility.yul\":7825:7922   */\n      tag_396\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":7977:7981   */\n      0x20\n      dup1\n        /* \"#utility.yul\":8041:8043   */\n      0x1f\n        /* \"#utility.yul\":8030:8044   */\n      dup4\n      gt\n        /* \"#utility.yul\":8058:8059   */\n      0x01\n        /* \"#utility.yul\":8053:8719   */\n      dup2\n      eq\n      tag_479\n      jumpi\n        /* \"#utility.yul\":8763:8764   */\n      0x00\n        /* \"#utility.yul\":8780:8786   */\n      dup5\n        /* \"#utility.yul\":8777:8866   */\n      iszero\n      tag_480\n      jumpi\n      pop\n        /* \"#utility.yul\":8832:8851   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":8826:8852   */\n      mload\n        /* \"#utility.yul\":8777:8866   */\n    tag_480:\n      not(0x00)\n        /* \"#utility.yul\":7578:7579   */\n      0x03\n        /* \"#utility.yul\":7574:7585   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":7570:7594   */\n      shr\n        /* \"#utility.yul\":7566:7595   */\n      not\n        /* \"#utility.yul\":7556:7596   */\n      and\n        /* \"#utility.yul\":7602:7603   */\n      0x01\n        /* \"#utility.yul\":7598:7609   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":7553:7610   */\n      or\n        /* \"#utility.yul\":8879:8960   */\n      dup6\n      sstore\n        /* \"#utility.yul\":8023:8970   */\n      jump(tag_471)\n        /* \"#utility.yul\":8053:8719   */\n    tag_479:\n        /* \"#utility.yul\":5726:5727   */\n      0x00\n        /* \"#utility.yul\":5719:5733   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":5763:5767   */\n      0x20\n        /* \"#utility.yul\":5750:5768   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":8089:8109   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":8210:8446   */\n    tag_483:\n        /* \"#utility.yul\":8224:8231   */\n      dup3\n        /* \"#utility.yul\":8221:8222   */\n      dup2\n        /* \"#utility.yul\":8218:8232   */\n      lt\n        /* \"#utility.yul\":8210:8446   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":8313:8332   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":8307:8333   */\n      mload\n        /* \"#utility.yul\":8292:8334   */\n      dup3\n      sstore\n        /* \"#utility.yul\":8405:8432   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":8373:8374   */\n      0x01\n        /* \"#utility.yul\":8361:8375   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":8240:8259   */\n      dup5\n      add\n        /* \"#utility.yul\":8210:8446   */\n      jump(tag_483)\n    tag_485:\n        /* \"#utility.yul\":8214:8217   */\n      pop\n        /* \"#utility.yul\":8474:8480   */\n      dup6\n        /* \"#utility.yul\":8465:8472   */\n      dup3\n        /* \"#utility.yul\":8462:8481   */\n      lt\n        /* \"#utility.yul\":8459:8660   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":8535:8554   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":8529:8555   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":8618:8619   */\n      0x03\n        /* \"#utility.yul\":8614:8628   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":8630:8633   */\n      0xf8\n        /* \"#utility.yul\":8610:8634   */\n      and\n        /* \"#utility.yul\":8606:8643   */\n      shr\n        /* \"#utility.yul\":8602:8644   */\n      not\n        /* \"#utility.yul\":8587:8645   */\n      and\n        /* \"#utility.yul\":8572:8646   */\n      dup2\n      sstore\n        /* \"#utility.yul\":8459:8660   */\n    tag_486:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8706:8707   */\n      0x01\n        /* \"#utility.yul\":8690:8704   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":8686:8708   */\n      add\n        /* \"#utility.yul\":8673:8709   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":7621:8976   */\n      jump\t// out\n        /* \"#utility.yul\":8981:9298   */\n    tag_165:\n        /* \"#utility.yul\":9158:9160   */\n      0x40\n        /* \"#utility.yul\":9147:9156   */\n      dup2\n        /* \"#utility.yul\":9140:9161   */\n      mstore\n        /* \"#utility.yul\":9121:9125   */\n      0x00\n        /* \"#utility.yul\":9178:9223   */\n      tag_488\n        /* \"#utility.yul\":9219:9221   */\n      0x40\n        /* \"#utility.yul\":9208:9217   */\n      dup4\n        /* \"#utility.yul\":9204:9222   */\n      add\n        /* \"#utility.yul\":9196:9202   */\n      dup6\n        /* \"#utility.yul\":9178:9223   */\n      tag_390\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":9170:9223   */\n      swap1\n      pop\n        /* \"#utility.yul\":9288:9289   */\n      0x01\n        /* \"#utility.yul\":9284:9285   */\n      dup1\n        /* \"#utility.yul\":9279:9282   */\n      0xa0\n        /* \"#utility.yul\":9275:9286   */\n      shl\n        /* \"#utility.yul\":9271:9290   */\n      sub\n        /* \"#utility.yul\":9263:9269   */\n      dup4\n        /* \"#utility.yul\":9259:9291   */\n      and\n        /* \"#utility.yul\":9254:9256   */\n      0x20\n        /* \"#utility.yul\":9243:9252   */\n      dup4\n        /* \"#utility.yul\":9239:9257   */\n      add\n        /* \"#utility.yul\":9232:9292   */\n      mstore\n        /* \"#utility.yul\":8981:9298   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11047:11264   */\n    tag_253:\n        /* \"#utility.yul\":11087:11088   */\n      0x00\n        /* \"#utility.yul\":11113:11114   */\n      dup3\n        /* \"#utility.yul\":11103:11235   */\n      tag_495\n      jumpi\n        /* \"#utility.yul\":11157:11167   */\n      0x4e487b71\n        /* \"#utility.yul\":11152:11155   */\n      0xe0\n        /* \"#utility.yul\":11148:11168   */\n      shl\n        /* \"#utility.yul\":11145:11146   */\n      0x00\n        /* \"#utility.yul\":11138:11169   */\n      mstore\n        /* \"#utility.yul\":11192:11196   */\n      0x12\n        /* \"#utility.yul\":11189:11190   */\n      0x04\n        /* \"#utility.yul\":11182:11197   */\n      mstore\n        /* \"#utility.yul\":11220:11224   */\n      0x24\n        /* \"#utility.yul\":11217:11218   */\n      0x00\n        /* \"#utility.yul\":11210:11225   */\n      revert\n        /* \"#utility.yul\":11103:11235   */\n    tag_495:\n      pop\n        /* \"#utility.yul\":11249:11258   */\n      div\n      swap1\n        /* \"#utility.yul\":11047:11264   */\n      jump\t// out\n        /* \"#utility.yul\":12425:12626   */\n    tag_324:\n        /* \"#utility.yul\":12463:12466   */\n      0x00\n        /* \"#utility.yul\":12491:12501   */\n      0xffffffff\n        /* \"#utility.yul\":12536:12538   */\n      dup1\n        /* \"#utility.yul\":12529:12534   */\n      dup4\n        /* \"#utility.yul\":12525:12539   */\n      and\n        /* \"#utility.yul\":12563:12565   */\n      dup2\n        /* \"#utility.yul\":12554:12561   */\n      dup2\n        /* \"#utility.yul\":12551:12566   */\n      sub\n        /* \"#utility.yul\":12548:12589   */\n      tag_501\n      jumpi\n        /* \"#utility.yul\":12569:12587   */\n      tag_501\n      tag_395\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":12618:12619   */\n      0x01\n        /* \"#utility.yul\":12605:12620   */\n      add\n      swap4\n        /* \"#utility.yul\":12425:12626   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12631:12756   */\n    tag_328:\n        /* \"#utility.yul\":12696:12705   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12717:12727   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":12714:12750   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":12730:12748   */\n      tag_130\n      tag_395\n      jump\t// in\n        /* \"#utility.yul\":12761:12929   */\n    tag_349:\n        /* \"#utility.yul\":12834:12843   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":12865:12874   */\n      dup2\n      iszero\n        /* \"#utility.yul\":12882:12897   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":12876:12898   */\n      dup5\n      eq\n        /* \"#utility.yul\":12862:12899   */\n      or\n        /* \"#utility.yul\":12852:12923   */\n      tag_130\n      jumpi\n        /* \"#utility.yul\":12903:12921   */\n      tag_130\n      tag_395\n      jump\t// in\n        /* \"#utility.yul\":12934:13062   */\n    tag_352:\n        /* \"#utility.yul\":13001:13010   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":13022:13033   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":13019:13056   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":13036:13054   */\n      tag_130\n      tag_395\n      jump\t// in\n        /* \"#utility.yul\":13067:13194   */\n    tag_381:\n        /* \"#utility.yul\":13128:13138   */\n      0x4e487b71\n        /* \"#utility.yul\":13123:13126   */\n      0xe0\n        /* \"#utility.yul\":13119:13139   */\n      shl\n        /* \"#utility.yul\":13116:13117   */\n      0x00\n        /* \"#utility.yul\":13109:13140   */\n      mstore\n        /* \"#utility.yul\":13159:13163   */\n      0x31\n        /* \"#utility.yul\":13156:13157   */\n      0x04\n        /* \"#utility.yul\":13149:13164   */\n      mstore\n        /* \"#utility.yul\":13183:13187   */\n      0x24\n        /* \"#utility.yul\":13180:13181   */\n      0x00\n        /* \"#utility.yul\":13173:13188   */\n      revert\n\n    auxdata: 0xa26469706673582212203cd7bb4b9efd9274d7b952cf2dd887f2d5bfe42745a5792a1757400782d4203164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_988": {
									"entryPoint": null,
									"id": 988,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 339,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 258,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1588": {
									"entryPoint": 399,
									"id": 1588,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 758,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1420,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1794,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5917:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:7"
															},
															"nodeType": "YulIf",
															"src": "289:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:7"
															},
															"nodeType": "YulIf",
															"src": "359:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:7",
														"type": ""
													}
												],
												"src": "146:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:7",
														"type": ""
													}
												],
												"src": "531:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:7",
																			"statements": []
																		},
																		"src": "1104:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:7"
															},
															"nodeType": "YulIf",
															"src": "748:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:7",
														"type": ""
													}
												],
												"src": "657:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:7",
														"type": ""
													}
												],
												"src": "1207:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:7"
															},
															"nodeType": "YulIf",
															"src": "1517:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:7",
																					"statements": []
																				},
																				"src": "1964:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:7",
														"type": ""
													}
												],
												"src": "1378:1352:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2836:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2846:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2858:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2869:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2854:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2846:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2888:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2903:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2919:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2924:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2915:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2915:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2928:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2911:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2911:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2899:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2899:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2881:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2881:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2881:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2805:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2816:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2827:4:7",
														"type": ""
													}
												],
												"src": "2735:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2975:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2992:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2999:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3004:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2995:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2995:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2985:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2985:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2985:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3032:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3035:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3056:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3049:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3049:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2943:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3139:358:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3149:16:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3164:1:7",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "3153:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3174:16:7",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "3183:7:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "3174:5:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3199:13:7",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "3207:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "3199:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3263:228:7",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3308:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "3310:16:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3310:18:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3310:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3283:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3297:1:7",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3293:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3293:6:7"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "3301:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "3289:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3289:17:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3280:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3280:27:7"
																		},
																		"nodeType": "YulIf",
																		"src": "3277:53:7"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3369:29:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3371:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "3384:5:7"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "3391:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "3380:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3380:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "3371:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3350:8:7"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3360:7:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3346:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3346:22:7"
																		},
																		"nodeType": "YulIf",
																		"src": "3343:55:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3411:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3423:4:7"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3429:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "3419:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3419:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "3411:4:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3447:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3463:7:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3472:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "3459:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3459:22:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "3447:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3232:8:7"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3242:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3229:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:21:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3251:3:7",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3225:3:7",
																"statements": []
															},
															"src": "3221:270:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "3103:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3110:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3123:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3130:4:7",
														"type": ""
													}
												],
												"src": "3075:422:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3561:747:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3599:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3613:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3622:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3613:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3636:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3581:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3574:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3574:16:7"
															},
															"nodeType": "YulIf",
															"src": "3571:80:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3684:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3698:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3707:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3698:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3721:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3670:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3663:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3663:12:7"
															},
															"nodeType": "YulIf",
															"src": "3660:76:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3772:52:7",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "3786:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3795:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3786:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3809:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3765:59:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3770:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3840:123:7",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3875:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "3877:16:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3877:18:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3877:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3860:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3870:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "3857:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3857:17:7"
																				},
																				"nodeType": "YulIf",
																				"src": "3854:43:7"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3910:25:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3923:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3933:1:7",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3919:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3919:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3910:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3948:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3833:130:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3838:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "3752:4:7"
															},
															"nodeType": "YulSwitch",
															"src": "3745:218:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4061:70:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4075:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4088:4:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "4094:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "4084:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4084:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "4075:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "4116:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3985:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3991:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3982:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3982:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3999:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4009:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3996:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3996:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3978:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3978:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "4022:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4028:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4019:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4019:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "4037:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4047:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4034:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4034:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4015:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4015:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3975:77:7"
															},
															"nodeType": "YulIf",
															"src": "3972:159:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4140:57:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4182:4:7"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "4188:8:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "4163:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4163:34:7"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "4144:7:7",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "4153:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4242:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4244:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4244:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4244:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4212:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4229:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4225:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4225:6:7"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "4233:6:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4221:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4221:19:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4209:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4209:32:7"
															},
															"nodeType": "YulIf",
															"src": "4206:58:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4273:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4286:7:7"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "4295:6:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4282:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4282:20:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4273:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3532:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3538:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3551:5:7",
														"type": ""
													}
												],
												"src": "3502:806:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4381:72:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4391:56:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4421:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "4431:8:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4441:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4427:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4427:19:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "4400:20:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4400:47:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4391:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4352:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4358:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4371:5:7",
														"type": ""
													}
												],
												"src": "4313:140:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4510:116:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4520:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4535:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4538:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4531:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4531:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4520:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4598:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4600:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4600:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4600:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4569:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4562:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4562:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4576:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4583:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4592:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4579:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4579:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4573:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4573:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4559:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4559:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4552:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4552:45:7"
															},
															"nodeType": "YulIf",
															"src": "4549:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4489:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4492:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4498:7:7",
														"type": ""
													}
												],
												"src": "4458:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4677:171:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4708:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4729:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4736:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4741:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4732:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4732:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4722:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4722:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4722:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4773:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4776:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4766:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4766:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4766:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4801:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4804:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4794:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4794:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4794:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4697:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4690:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4690:9:7"
															},
															"nodeType": "YulIf",
															"src": "4687:132:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4828:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4837:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4840:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4833:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4833:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4828:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4662:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4665:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4671:1:7",
														"type": ""
													}
												],
												"src": "4631:217:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4902:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4912:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4924:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4927:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4920:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4912:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4953:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4955:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4955:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4955:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4944:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4950:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4941:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4941:11:7"
															},
															"nodeType": "YulIf",
															"src": "4938:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4884:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4887:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4893:4:7",
														"type": ""
													}
												],
												"src": "4853:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5018:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5035:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5042:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5047:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5038:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5038:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5028:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5028:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5028:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5075:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5078:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5068:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5068:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5068:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5099:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5102:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5092:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5092:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4986:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5165:88:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5196:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5198:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5198:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5198:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5181:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5192:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5188:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5188:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5178:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5178:17:7"
															},
															"nodeType": "YulIf",
															"src": "5175:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5227:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5238:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5245:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5234:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5234:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5227:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5147:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5157:3:7",
														"type": ""
													}
												],
												"src": "5118:135:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5306:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5316:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5327:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5330:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5323:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5323:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5316:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5355:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5357:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5357:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5357:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5347:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5350:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5344:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5344:10:7"
															},
															"nodeType": "YulIf",
															"src": "5341:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5289:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5292:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5298:3:7",
														"type": ""
													}
												],
												"src": "5258:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5545:188:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5555:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5567:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5578:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5563:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5563:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5555:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5597:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5612:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5628:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5633:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5624:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5624:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5637:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5620:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5620:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5608:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5608:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5590:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5590:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5590:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5661:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5672:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5657:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5657:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5677:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5650:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5650:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5650:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5704:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5715:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5700:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5720:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5693:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5693:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5693:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5498:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5509:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5517:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5525:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5536:4:7",
														"type": ""
													}
												],
												"src": "5388:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5839:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5849:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5861:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5872:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5857:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5857:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5849:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5891:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5902:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5884:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5884:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5884:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5808:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5819:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5830:4:7",
														"type": ""
													}
												],
												"src": "5738:177:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600560065534801562000015575f80fd5b503360405180604001604052806008815260200167243ab6a0b4b23b1960c11b81525060405180604001604052806003815260200162484d4d60e81b8152508160039081620000659190620004c4565b506004620000748282620004c4565b5050506001600160a01b038116620000a657604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b620000b18162000102565b50335f818152600960205260409020805460ff19166001179055620000fc90620000d9601290565b620000e690600a6200069b565b620000f690633b9aca00620006b2565b62000153565b62000747565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166200017e5760405163ec442f0560e01b81525f60048201526024016200009d565b6200018b5f83836200018f565b5050565b6001600160a01b0383165f9081526009602052604090205460ff1680620001cd57506001600160a01b0382165f9081526009602052604090205460ff165b80620001d95750600654155b15620001f157620001ec838383620002f6565b505050565b5f6103e860065483620002059190620006b2565b620002119190620006cc565b90505f620002208284620006ec565b6008549091505f9081036200023757600162000246565b600854620002469084620006cc565b6008549091505f906200025a9083620006b2565b620002669085620006ec565b90505f5b600854811015620002be57620002ab886008838154811062000290576200029062000702565b5f918252602090912001546001600160a01b031685620002f6565b620002b68162000716565b90506200026a565b508015620002e057600a54620002e09088906001600160a01b031683620002f6565b620002ed878785620002f6565b50505050505050565b6001600160a01b03831662000324578060025f82825462000318919062000731565b90915550620003969050565b6001600160a01b0383165f9081526020819052604090205481811015620003785760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016200009d565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216620003b457600280548290039055620003d2565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200041891815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200044e57607f821691505b6020821081036200046d57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620001ec575f81815260208120601f850160051c810160208610156200049b5750805b601f850160051c820191505b81811015620004bc57828155600101620004a7565b505050505050565b81516001600160401b03811115620004e057620004e062000425565b620004f881620004f1845462000439565b8462000473565b602080601f8311600181146200052e575f8415620005165750858301515b5f19600386901b1c1916600185901b178555620004bc565b5f85815260208120601f198616915b828110156200055e578886015182559484019460019091019084016200053d565b50858210156200057c57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b600181815b80851115620005e057815f1904821115620005c457620005c46200058c565b80851615620005d257918102915b93841c9390800290620005a5565b509250929050565b5f82620005f85750600162000695565b816200060657505f62000695565b81600181146200061f57600281146200062a576200064a565b600191505062000695565b60ff8411156200063e576200063e6200058c565b50506001821b62000695565b5060208310610133831016604e8410600b84101617156200066f575081810a62000695565b6200067b8383620005a0565b805f19048211156200069157620006916200058c565b0290505b92915050565b5f620006ab60ff841683620005e8565b9392505050565b80820281158282048414176200069557620006956200058c565b5f82620006e757634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156200069557620006956200058c565b634e487b7160e01b5f52603260045260245ffd5b5f600182016200072a576200072a6200058c565b5060010190565b808201808211156200069557620006956200058c565b61185c80620007555f395ff3fe608060405234801561000f575f80fd5b5060043610610153575f3560e01c80637ce3489b116100bf578063a9059cbb11610079578063a9059cbb146102e8578063ae91470d146102fb578063dd62ed3e1461030e578063df8408fe14610346578063f2fde38b14610359578063f9479ffa1461036c575f80fd5b80637ce3489b1461028d5780637d5b6c60146102a05780637fd6f15c146102b35780638da5cb5b146102bc57806395d89b41146102cd578063a8602fea146102d5575f80fd5b806342966c681161011057806342966c68146101df5780634618f6ac146101f45780634626402b146102075780635342acb41461023257806370a082311461025d578063715018a614610285575f80fd5b806306fdde0314610157578063095ea7b31461017557806318160ddd1461019857806323b872dd146101aa578063313ce567146101bd5780633539c6b1146101cc575b5f80fd5b61015f610374565b60405161016c919061130f565b60405180910390f35b610188610183366004611337565b610404565b604051901515815260200161016c565b6002545b60405190815260200161016c565b6101886101b836600461135f565b61041d565b6040516012815260200161016c565b6101886101da366004611435565b610440565b6101f26101ed366004611480565b610566565b005b61015f610202366004611497565b610573565b600a5461021a906001600160a01b031681565b6040516001600160a01b03909116815260200161016c565b610188610240366004611497565b6001600160a01b03165f9081526009602052604090205460ff1690565b61019c61026b366004611497565b6001600160a01b03165f9081526020819052604090205490565b6101f261060a565b6101f261029b366004611480565b61061d565b61021a6102ae366004611480565b61066a565b61019c60065481565b6005546001600160a01b031661021a565b61015f610692565b6101f26102e3366004611497565b6106a1565b6101886102f6366004611337565b61076b565b6101886103093660046114b0565b610778565b61019c61031c3660046114ea565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101f2610354366004611512565b6108ab565b6101f2610367366004611497565b6108dd565b6101f2610917565b6060600380546103839061154b565b80601f01602080910402602001604051908101604052809291908181526020018280546103af9061154b565b80156103fa5780601f106103d1576101008083540402835291602001916103fa565b820191905f5260205f20905b8154815290600101906020018083116103dd57829003601f168201915b5050505050905090565b5f33610411818585610ae4565b60019150505b92915050565b5f3361042a858285610af6565b610435858585610b6c565b506001949350505050565b5f610449610bc9565b6001600160a01b0382166104785760405162461bcd60e51b815260040161046f90611583565b60405180910390fd5b5f5b6008548110156104fa57838051906020012060075f600884815481106104a2576104a26115b0565b5f9182526020808320909101546001600160a01b03168352820192909252604090810190912090516104d491906115c4565b6040518091039020036104ea575f915050610417565b6104f38161164a565b905061047a565b506001600160a01b0382165f90815260076020526040902061051c84826116af565b507fa06dde3e644f7da70b4461f791ff2766ebeacd8cae66b3e6a98637a9dacbd900838360405161054e92919061176b565b60405180910390a161055f82610bf6565b9392505050565b6105703382610d51565b50565b60076020525f90815260409020805461058b9061154b565b80601f01602080910402602001604051908101604052809291908181526020018280546105b79061154b565b80156106025780601f106105d957610100808354040283529160200191610602565b820191905f5260205f20905b8154815290600101906020018083116105e557829003601f168201915b505050505081565b610612610bc9565b61061b5f610d89565b565b610625610bc9565b60328111156106655760405162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b604482015260640161046f565b600655565b60088181548110610679575f80fd5b5f918252602090912001546001600160a01b0316905081565b6060600480546103839061154b565b6106a9610bc9565b6001600160a01b0381166106ff5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420747265617375727920616464726573730000000000000000604482015260640161046f565b600a546001600160a01b03161561073257600a546001600160a01b03165f908152600960205260409020805460ff191690555b600a80546001600160a01b039092166001600160a01b0319909216821790555f908152600960205260409020805460ff19166001179055565b5f33610411818585610b6c565b5f610781610bc9565b5f805b60085481101561082957838051906020012060075f600884815481106107ac576107ac6115b0565b5f9182526020808320909101546001600160a01b03168352820192909252604090810190912090516107de91906115c4565b60405180910390200361081957600881815481106107fe576107fe6115b0565b5f918252602090912001546001600160a01b03169150610829565b6108228161164a565b9050610784565b506001600160a01b03811661084057505f92915050565b6001600160a01b0381165f90815260076020526040812061086091611282565b7ff7ce65b9119570713c55642c7ba09904806c36ec3da8fa5b1a8aa4a223132c2e838260405161089192919061176b565b60405180910390a16108a281610dda565b9150505b919050565b6108b3610bc9565b6001600160a01b03919091165f908152600960205260409020805460ff1916911515919091179055565b6108e5610bc9565b6001600160a01b03811661090e57604051631e4fbdf760e01b81525f600482015260240161046f565b61057081610d89565b61091f610bc9565b600a546001600160a01b03166109775760405162461bcd60e51b815260206004820152601760248201527f54726561737572792077616c6c6574206e6f7420736574000000000000000000604482015260640161046f565b600854806109bc5760405162461bcd60e51b8152602060048201526012602482015271139bc81391d3dcc81c9959da5cdd195c995960721b604482015260640161046f565b600a546001600160a01b03165f9081526020819052604090205480610a1c5760405162461bcd60e51b81526020600482015260166024820152754e6f2066756e647320746f206469737472696275746560501b604482015260640161046f565b5f610a278383611794565b90505f8111610a845760405162461bcd60e51b815260206004820152602360248201527f496e73756666696369656e742066756e647320666f722064697374726962757460448201526234b7b760e91b606482015260840161046f565b5f5b83811015610ade57600a5460088054610ace926001600160a01b0316919084908110610ab457610ab46115b0565b5f918252602090912001546001600160a01b031684610e99565b610ad78161164a565b9050610a86565b50505050565b610af18383836001610fbf565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610ade5781811015610b5e57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161046f565b610ade84848484035f610fbf565b6001600160a01b038316610b9557604051634b637e8f60e11b81525f600482015260240161046f565b6001600160a01b038216610bbe5760405163ec442f0560e01b81525f600482015260240161046f565b610af1838383611091565b6005546001600160a01b0316331461061b5760405163118cdaa760e01b815233600482015260240161046f565b5f6001600160a01b038216610c1d5760405162461bcd60e51b815260040161046f90611583565b6001600160a01b0382165f9081526009602052604090205460ff1615610c8f5760405162461bcd60e51b815260206004820152602160248201527f546869732077616c6c657420697320616c7265616479207265676973746572656044820152601960fa1b606482015260840161046f565b5f5b600854811015610ce957826001600160a01b031660088281548110610cb857610cb86115b0565b5f918252602090912001546001600160a01b031603610cd957505f92915050565b610ce28161164a565b9050610c91565b50506008805460018082019092557ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b039390931692831790555f91825260096020526040909120805460ff19168217905590565b6001600160a01b038216610d7a57604051634b637e8f60e11b81525f600482015260240161046f565b610d85825f83611091565b5050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6001600160a01b038216610e015760405162461bcd60e51b815260040161046f90611583565b5f5b60085463ffffffff82161015610e9157826001600160a01b031660088263ffffffff1681548110610e3657610e366115b0565b5f918252602090912001546001600160a01b031603610e8157610e58816111d2565b50506001600160a01b03165f908152600960205260409020805460ff1916600190811790915590565b610e8a816117b3565b9050610e03565b505f92915050565b6001600160a01b038316610ec3578060025f828254610eb891906117d5565b90915550610f339050565b6001600160a01b0383165f9081526020819052604090205481811015610f155760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161046f565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610f4f57600280548290039055610f6d565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fb291815260200190565b60405180910390a3505050565b6001600160a01b038416610fe85760405163e602df0560e01b81525f600482015260240161046f565b6001600160a01b03831661101157604051634a1406b160e11b81525f600482015260240161046f565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610ade57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161108391815260200190565b60405180910390a350505050565b6001600160a01b0383165f9081526009602052604090205460ff16806110ce57506001600160a01b0382165f9081526009602052604090205460ff165b806110d95750600654155b156110e957610af1838383610e99565b5f6103e8600654836110fb91906117e8565b6111059190611794565b90505f61111282846117ff565b6008549091505f908103611127576001611134565b6008546111349084611794565b6008549091505f9061114690836117e8565b61115090856117ff565b90505f5b60085481101561119f5761118f8860088381548110611175576111756115b0565b5f918252602090912001546001600160a01b031685610e99565b6111988161164a565b9050611154565b5080156111be57600a546111be9088906001600160a01b031683610e99565b6111c9878785610e99565b50505050505050565b600880546111e2906001906117ff565b815481106111f2576111f26115b0565b5f91825260209091200154600880546001600160a01b039092169163ffffffff8416908110611223576112236115b0565b905f5260205f20015f6101000a8154816001600160a01b0302191690836001600160a01b03160217905550600880548061125f5761125f611812565b5f8281526020902081015f1990810180546001600160a01b031916905501905550565b50805461128e9061154b565b5f825580601f1061129d575050565b601f0160209004905f5260205f209081019061057091905b808211156112c8575f81556001016112b5565b5090565b5f81518084525f5b818110156112f0576020818501810151868301820152016112d4565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f61055f60208301846112cc565b80356001600160a01b03811681146108a6575f80fd5b5f8060408385031215611348575f80fd5b61135183611321565b946020939093013593505050565b5f805f60608486031215611371575f80fd5b61137a84611321565b925061138860208501611321565b9150604084013590509250925092565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126113bb575f80fd5b813567ffffffffffffffff808211156113d6576113d6611398565b604051601f8301601f19908116603f011681019082821181831017156113fe576113fe611398565b81604052838152866020858801011115611416575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f8060408385031215611446575f80fd5b823567ffffffffffffffff81111561145c575f80fd5b611468858286016113ac565b92505061147760208401611321565b90509250929050565b5f60208284031215611490575f80fd5b5035919050565b5f602082840312156114a7575f80fd5b61055f82611321565b5f602082840312156114c0575f80fd5b813567ffffffffffffffff8111156114d6575f80fd5b6114e2848285016113ac565b949350505050565b5f80604083850312156114fb575f80fd5b61150483611321565b915061147760208401611321565b5f8060408385031215611523575f80fd5b61152c83611321565b915060208301358015158114611540575f80fd5b809150509250929050565b600181811c9082168061155f57607f821691505b60208210810361157d57634e487b7160e01b5f52602260045260245ffd5b50919050565b602080825260139082015272496e76616c6964204e474f206164647265737360681b604082015260600190565b634e487b7160e01b5f52603260045260245ffd5b5f8083546115d18161154b565b600182811680156115e957600181146115fe5761162a565b60ff198416875282151583028701945061162a565b875f526020805f205f5b858110156116215781548a820152908401908201611608565b50505082870194505b50929695505050505050565b634e487b7160e01b5f52601160045260245ffd5b5f6001820161165b5761165b611636565b5060010190565b601f821115610af1575f81815260208120601f850160051c810160208610156116885750805b601f850160051c820191505b818110156116a757828155600101611694565b505050505050565b815167ffffffffffffffff8111156116c9576116c9611398565b6116dd816116d7845461154b565b84611662565b602080601f831160018114611710575f84156116f95750858301515b5f19600386901b1c1916600185901b1785556116a7565b5f85815260208120601f198616915b8281101561173e5788860151825594840194600190910190840161171f565b508582101561175b57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b604081525f61177d60408301856112cc565b905060018060a01b03831660208301529392505050565b5f826117ae57634e487b7160e01b5f52601260045260245ffd5b500490565b5f63ffffffff8083168181036117cb576117cb611636565b6001019392505050565b8082018082111561041757610417611636565b808202811582820484141761041757610417611636565b8181038181111561041757610417611636565b634e487b7160e01b5f52603160045260245ffdfea26469706673582212203cd7bb4b9efd9274d7b952cf2dd887f2d5bfe42745a5792a1757400782d4203164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x243AB6A0B4B23B19 PUSH1 0xC1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x484D4D PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x65 SWAP2 SWAP1 PUSH3 0x4C4 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x74 DUP3 DUP3 PUSH3 0x4C4 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xA6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xB1 DUP2 PUSH3 0x102 JUMP JUMPDEST POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0xFC SWAP1 PUSH3 0xD9 PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH3 0xE6 SWAP1 PUSH1 0xA PUSH3 0x69B JUMP JUMPDEST PUSH3 0xF6 SWAP1 PUSH4 0x3B9ACA00 PUSH3 0x6B2 JUMP JUMPDEST PUSH3 0x153 JUMP JUMPDEST PUSH3 0x747 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x17E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0x9D JUMP JUMPDEST PUSH3 0x18B PUSH0 DUP4 DUP4 PUSH3 0x18F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH3 0x1CD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH3 0x1D9 JUMPI POP PUSH1 0x6 SLOAD ISZERO JUMPDEST ISZERO PUSH3 0x1F1 JUMPI PUSH3 0x1EC DUP4 DUP4 DUP4 PUSH3 0x2F6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E8 PUSH1 0x6 SLOAD DUP4 PUSH3 0x205 SWAP2 SWAP1 PUSH3 0x6B2 JUMP JUMPDEST PUSH3 0x211 SWAP2 SWAP1 PUSH3 0x6CC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x220 DUP3 DUP5 PUSH3 0x6EC JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 DUP2 SUB PUSH3 0x237 JUMPI PUSH1 0x1 PUSH3 0x246 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH3 0x246 SWAP1 DUP5 PUSH3 0x6CC JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH3 0x25A SWAP1 DUP4 PUSH3 0x6B2 JUMP JUMPDEST PUSH3 0x266 SWAP1 DUP6 PUSH3 0x6EC JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH3 0x2BE JUMPI PUSH3 0x2AB DUP9 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH3 0x290 JUMPI PUSH3 0x290 PUSH3 0x702 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH3 0x2F6 JUMP JUMPDEST PUSH3 0x2B6 DUP2 PUSH3 0x716 JUMP JUMPDEST SWAP1 POP PUSH3 0x26A JUMP JUMPDEST POP DUP1 ISZERO PUSH3 0x2E0 JUMPI PUSH1 0xA SLOAD PUSH3 0x2E0 SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH3 0x2F6 JUMP JUMPDEST PUSH3 0x2ED DUP8 DUP8 DUP6 PUSH3 0x2F6 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x324 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x318 SWAP2 SWAP1 PUSH3 0x731 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x396 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x378 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0x9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3B4 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x3D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x418 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x44E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x46D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1EC JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x49B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4BC JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4A7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x4E0 JUMPI PUSH3 0x4E0 PUSH3 0x425 JUMP JUMPDEST PUSH3 0x4F8 DUP2 PUSH3 0x4F1 DUP5 SLOAD PUSH3 0x439 JUMP JUMPDEST DUP5 PUSH3 0x473 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x52E JUMPI PUSH0 DUP5 ISZERO PUSH3 0x516 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x4BC JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x55E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x53D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x57C JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x5E0 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x5C4 JUMPI PUSH3 0x5C4 PUSH3 0x58C JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x5D2 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x5A5 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x5F8 JUMPI POP PUSH1 0x1 PUSH3 0x695 JUMP JUMPDEST DUP2 PUSH3 0x606 JUMPI POP PUSH0 PUSH3 0x695 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x61F JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x62A JUMPI PUSH3 0x64A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x695 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x63E JUMPI PUSH3 0x63E PUSH3 0x58C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x695 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x66F JUMPI POP DUP2 DUP2 EXP PUSH3 0x695 JUMP JUMPDEST PUSH3 0x67B DUP4 DUP4 PUSH3 0x5A0 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x691 JUMPI PUSH3 0x691 PUSH3 0x58C JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x6AB PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x5E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x695 JUMPI PUSH3 0x695 PUSH3 0x58C JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x6E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH3 0x695 JUMPI PUSH3 0x695 PUSH3 0x58C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH3 0x72A JUMPI PUSH3 0x72A PUSH3 0x58C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x695 JUMPI PUSH3 0x695 PUSH3 0x58C JUMP JUMPDEST PUSH2 0x185C DUP1 PUSH3 0x755 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x153 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CE3489B GT PUSH2 0xBF JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xAE91470D EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xDF8408FE EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xF9479FFA EQ PUSH2 0x36C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7CE3489B EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x7D5B6C60 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x7FD6F15C EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xA8602FEA EQ PUSH2 0x2D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x4618F6AC EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x285 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x3539C6B1 EQ PUSH2 0x1CC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15F PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH2 0x188 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH2 0x188 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1480 JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x21A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH2 0x188 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x1497 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x1497 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x1480 JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST PUSH2 0x21A PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1480 JUMP JUMPDEST PUSH2 0x66A JUMP JUMPDEST PUSH2 0x19C PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21A JUMP JUMPDEST PUSH2 0x15F PUSH2 0x692 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0x76B JUMP JUMPDEST PUSH2 0x188 PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0x14EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x1512 JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x383 SWAP1 PUSH2 0x154B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AF SWAP1 PUSH2 0x154B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x411 DUP2 DUP6 DUP6 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x42A DUP6 DUP3 DUP6 PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0x435 DUP6 DUP6 DUP6 PUSH2 0xB6C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x449 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x1583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x4FA JUMPI DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x7 PUSH0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4A2 JUMPI PUSH2 0x4A2 PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD SWAP1 SWAP2 KECCAK256 SWAP1 MLOAD PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x4EA JUMPI PUSH0 SWAP2 POP POP PUSH2 0x417 JUMP JUMPDEST PUSH2 0x4F3 DUP2 PUSH2 0x164A JUMP JUMPDEST SWAP1 POP PUSH2 0x47A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x51C DUP5 DUP3 PUSH2 0x16AF JUMP JUMPDEST POP PUSH32 0xA06DDE3E644F7DA70B4461F791FF2766EBEACD8CAE66B3E6A98637A9DACBD900 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x54E SWAP3 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x55F DUP3 PUSH2 0xBF6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x570 CALLER DUP3 PUSH2 0xD51 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x58B SWAP1 PUSH2 0x154B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B7 SWAP1 PUSH2 0x154B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x602 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x602 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x612 PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0x61B PUSH0 PUSH2 0xD89 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x625 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x32 DUP2 GT ISZERO PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x8CCACA40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x679 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x383 SWAP1 PUSH2 0x154B JUMP JUMPDEST PUSH2 0x6A9 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x732 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND DUP3 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x411 DUP2 DUP6 DUP6 PUSH2 0xB6C JUMP JUMPDEST PUSH0 PUSH2 0x781 PUSH2 0xBC9 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x829 JUMPI DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x7 PUSH0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD SWAP1 SWAP2 KECCAK256 SWAP1 MLOAD PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x819 JUMPI PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7FE JUMPI PUSH2 0x7FE PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x829 JUMP JUMPDEST PUSH2 0x822 DUP2 PUSH2 0x164A JUMP JUMPDEST SWAP1 POP PUSH2 0x784 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x840 JUMPI POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x860 SWAP2 PUSH2 0x1282 JUMP JUMPDEST PUSH32 0xF7CE65B9119570713C55642C7BA09904806C36EC3DA8FA5B1A8AA4A223132C2E DUP4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x891 SWAP3 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x8A2 DUP2 PUSH2 0xDDA JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8B3 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x8E5 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH2 0x570 DUP2 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x91F PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x977 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561737572792077616C6C6574206E6F7420736574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x8 SLOAD DUP1 PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BC81391D3DCC81C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xA1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F2066756E647320746F2064697374726962757465 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH0 PUSH2 0xA27 DUP4 DUP4 PUSH2 0x1794 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742066756E647320666F7220646973747269627574 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x34B7B7 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xADE JUMPI PUSH1 0xA SLOAD PUSH1 0x8 DUP1 SLOAD PUSH2 0xACE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xAB4 JUMPI PUSH2 0xAB4 PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xAD7 DUP2 PUSH2 0x164A JUMP JUMPDEST SWAP1 POP PUSH2 0xA86 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAF1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFBF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xADE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH2 0xADE DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xFBF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBBE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH2 0xAF1 DUP4 DUP4 DUP4 PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x1583 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732077616C6C657420697320616C726561647920726567697374657265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xCE9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCB8 JUMPI PUSH2 0xCB8 PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCD9 JUMPI POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCE2 DUP2 PUSH2 0x164A JUMP JUMPDEST SWAP1 POP PUSH2 0xC91 JUMP JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 DUP4 OR SWAP1 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 OR SWAP1 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH2 0xD85 DUP3 PUSH0 DUP4 PUSH2 0x1091 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x1583 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x8 SLOAD PUSH4 0xFFFFFFFF DUP3 AND LT ISZERO PUSH2 0xE91 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x8 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE81 JUMPI PUSH2 0xE58 DUP2 PUSH2 0x11D2 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0xE8A DUP2 PUSH2 0x17B3 JUMP JUMPDEST SWAP1 POP PUSH2 0xE03 JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEC3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEB8 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF33 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xF15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF4F JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xFE8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1011 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xADE JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1083 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x10CE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x10D9 JUMPI POP PUSH1 0x6 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x10E9 JUMPI PUSH2 0xAF1 DUP4 DUP4 DUP4 PUSH2 0xE99 JUMP JUMPDEST PUSH0 PUSH2 0x3E8 PUSH1 0x6 SLOAD DUP4 PUSH2 0x10FB SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0x1105 SWAP2 SWAP1 PUSH2 0x1794 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1112 DUP3 DUP5 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 DUP2 SUB PUSH2 0x1127 JUMPI PUSH1 0x1 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1134 SWAP1 DUP5 PUSH2 0x1794 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH2 0x1146 SWAP1 DUP4 PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0x1150 SWAP1 DUP6 PUSH2 0x17FF JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x119F JUMPI PUSH2 0x118F DUP9 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1175 JUMPI PUSH2 0x1175 PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x1198 DUP2 PUSH2 0x164A JUMP JUMPDEST SWAP1 POP PUSH2 0x1154 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x11BE JUMPI PUSH1 0xA SLOAD PUSH2 0x11BE SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x11C9 DUP8 DUP8 DUP6 PUSH2 0xE99 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x11E2 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x17FF JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x11F2 JUMPI PUSH2 0x11F2 PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x1223 JUMPI PUSH2 0x1223 PUSH2 0x15B0 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x125F JUMPI PUSH2 0x125F PUSH2 0x1812 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x128E SWAP1 PUSH2 0x154B JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x129D JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x12C8 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x12B5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12F0 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x12D4 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x55F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12CC JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1348 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1351 DUP4 PUSH2 0x1321 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1371 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x137A DUP5 PUSH2 0x1321 JUMP JUMPDEST SWAP3 POP PUSH2 0x1388 PUSH1 0x20 DUP6 ADD PUSH2 0x1321 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13D6 JUMPI PUSH2 0x13D6 PUSH2 0x1398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13FE JUMPI PUSH2 0x13FE PUSH2 0x1398 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1416 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1446 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x145C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1468 DUP6 DUP3 DUP7 ADD PUSH2 0x13AC JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1477 PUSH1 0x20 DUP5 ADD PUSH2 0x1321 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1490 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x55F DUP3 PUSH2 0x1321 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14E2 DUP5 DUP3 DUP6 ADD PUSH2 0x13AC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14FB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1504 DUP4 PUSH2 0x1321 JUMP JUMPDEST SWAP2 POP PUSH2 0x1477 PUSH1 0x20 DUP5 ADD PUSH2 0x1321 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1523 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x152C DUP4 PUSH2 0x1321 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1540 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x155F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x157D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x496E76616C6964204E474F2061646472657373 PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 DUP4 SLOAD PUSH2 0x15D1 DUP2 PUSH2 0x154B JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x15E9 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x15FE JUMPI PUSH2 0x162A JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x162A JUMP JUMPDEST DUP8 PUSH0 MSTORE PUSH1 0x20 DUP1 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1621 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1608 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x165B JUMPI PUSH2 0x165B PUSH2 0x1636 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xAF1 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1688 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16A7 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1694 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16C9 JUMPI PUSH2 0x16C9 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0x16DD DUP2 PUSH2 0x16D7 DUP5 SLOAD PUSH2 0x154B JUMP JUMPDEST DUP5 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1710 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x16F9 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x16A7 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x173E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x171F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x175B JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x177D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x12CC JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x17AE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x17CB JUMPI PUSH2 0x17CB PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x417 JUMPI PUSH2 0x417 PUSH2 0x1636 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x417 JUMPI PUSH2 0x417 PUSH2 0x1636 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x417 JUMPI PUSH2 0x417 PUSH2 0x1636 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xD7 0xBB 0x4B SWAP15 REVERT SWAP3 PUSH21 0xD7B952CF2DD887F2D5BFE42745A5792A1757400782 0xD4 KECCAK256 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "174:5358:6:-:0;;;266:1;238:29;;479:206;;;;;;;;;;218:10;1582:113:2;;;;;;;;;;;;;-1:-1:-1;;;1582:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:2;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:2;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2881:51:7;2854:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;548:10:6::1;529:30;::::0;;;:18:::1;:30;::::0;;;;:37;;-1:-1:-1;;529:37:6::1;562:4;529:37;::::0;;626:51:::1;::::0;666:10:::1;2761:2:2::0;;2688:82;666:10:6::1;660:16;::::0;:2:::1;:16;:::i;:::-;644:32;::::0;:13:::1;:32;:::i;:::-;626:5;:51::i;:::-;174:5358:::0;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7439:208:2:-;-1:-1:-1;;;;;7509:21:2;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:2;;7582:1;7553:32;;;2881:51:7;2854:18;;7553:32:2;2735:203:7;7505:91:2;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;4718:811:6:-;-1:-1:-1;;;;;4809:24:6;;;;;;:18;:24;;;;;;;;;:50;;-1:-1:-1;;;;;;4837:22:6;;;;;;:18;:22;;;;;;;;4809:50;:69;;;-1:-1:-1;4863:10:6;;:15;4809:69;4805:717;;;4895:30;4909:4;4915:2;4919:5;4895:13;:30::i;:::-;4718:811;;;:::o;4805:717::-;4958:11;4995:4;4981:10;;4973:5;:18;;;;:::i;:::-;4972:27;;;;:::i;:::-;4958:41;-1:-1:-1;5014:22:6;5039:11;4958:41;5039:5;:11;:::i;:::-;5081:10;:17;5014:36;;-1:-1:-1;5065:13:6;;5081:22;;:52;;5132:1;5081:52;;;5112:10;:17;5106:23;;:3;:23;:::i;:::-;5183:10;:17;5065:68;;-1:-1:-1;5148:17:6;;5175:25;;5065:68;5175:25;:::i;:::-;5168:33;;:3;:33;:::i;:::-;5148:53;;5223:6;5218:121;5239:10;:17;5235:21;;5218:121;;;5282:41;5296:4;5302:10;5313:1;5302:13;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5302:13:6;5317:5;5282:13;:41::i;:::-;5258:3;;;:::i;:::-;;;5218:121;;;-1:-1:-1;5359:13:6;;5355:100;;5413:14;;5393:46;;5407:4;;-1:-1:-1;;;;;5413:14:6;5429:9;5393:13;:46::i;:::-;5471:39;5485:4;5491:2;5495:14;5471:13;:39::i;:::-;4943:579;;;;4718:811;;;:::o;5989:1107:2:-;-1:-1:-1;;;;;6078:18:2;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:2;;-1:-1:-1;6074:540:2;;-1:-1:-1;;;;;6288:15:2;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:2;;-1:-1:-1;;;;;5608:32:7;;6367:50:2;;;5590:51:7;5657:18;;;5650:34;;;5700:18;;;5693:34;;;5563:18;;6367:50:2;5388:345:7;6317:115:2;-1:-1:-1;;;;;6552:15:2;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:2;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:2;7073:4;-1:-1:-1;;;;;7064:25:2;;7083:5;7064:25;;;;5884::7;;5872:2;5857:18;;5738:177;7064:25:2;;;;;;;;5989:1107;;;:::o;14:127:7:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:7;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:7;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:7;;;2580:26;2531:89;-1:-1:-1;;1335:1:7;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:7;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:7;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:7;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:7:o;2943:127::-;3004:10;2999:3;2995:20;2992:1;2985:31;3035:4;3032:1;3025:15;3059:4;3056:1;3049:15;3075:422;3164:1;3207:5;3164:1;3221:270;3242:7;3232:8;3229:21;3221:270;;;3301:4;3297:1;3293:6;3289:17;3283:4;3280:27;3277:53;;;3310:18;;:::i;:::-;3360:7;3350:8;3346:22;3343:55;;;3380:16;;;;3343:55;3459:22;;;;3419:15;;;;3221:270;;;3225:3;3075:422;;;;;:::o;3502:806::-;3551:5;3581:8;3571:80;;-1:-1:-1;3622:1:7;3636:5;;3571:80;3670:4;3660:76;;-1:-1:-1;3707:1:7;3721:5;;3660:76;3752:4;3770:1;3765:59;;;;3838:1;3833:130;;;;3745:218;;3765:59;3795:1;3786:10;;3809:5;;;3833:130;3870:3;3860:8;3857:17;3854:43;;;3877:18;;:::i;:::-;-1:-1:-1;;3933:1:7;3919:16;;3948:5;;3745:218;;4047:2;4037:8;4034:16;4028:3;4022:4;4019:13;4015:36;4009:2;3999:8;3996:16;3991:2;3985:4;3982:12;3978:35;3975:77;3972:159;;;-1:-1:-1;4084:19:7;;;4116:5;;3972:159;4163:34;4188:8;4182:4;4163:34;:::i;:::-;4233:6;4229:1;4225:6;4221:19;4212:7;4209:32;4206:58;;;4244:18;;:::i;:::-;4282:20;;-1:-1:-1;3502:806:7;;;;;:::o;4313:140::-;4371:5;4400:47;4441:4;4431:8;4427:19;4421:4;4400:47;:::i;:::-;4391:56;4313:140;-1:-1:-1;;;4313:140:7:o;4458:168::-;4531:9;;;4562;;4579:15;;;4573:22;;4559:37;4549:71;;4600:18;;:::i;4631:217::-;4671:1;4697;4687:132;;4741:10;4736:3;4732:20;4729:1;4722:31;4776:4;4773:1;4766:15;4804:4;4801:1;4794:15;4687:132;-1:-1:-1;4833:9:7;;4631:217::o;4853:128::-;4920:9;;;4941:11;;;4938:37;;;4955:18;;:::i;4986:127::-;5047:10;5042:3;5038:20;5035:1;5028:31;5078:4;5075:1;5068:15;5102:4;5099:1;5092:15;5118:135;5157:3;5178:17;;;5175:43;;5198:18;;:::i;:::-;-1:-1:-1;5245:1:7;5234:13;;5118:135::o;5258:125::-;5323:9;;;5344:10;;;5341:36;;;5357:18;;:::i;5738:177::-;174:5358:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2788,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4031,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 3409,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3017,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2806,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3465,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2924,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1588": {
									"entryPoint": 4241,
									"id": 1588,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3737,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1028,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1123": {
									"entryPoint": 1382,
									"id": 1123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@distributeTreasuryToNGOs_1472": {
									"entryPoint": 2327,
									"id": 1472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@excludeFromFee_1099": {
									"entryPoint": 2219,
									"id": 1099,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@feePercent_949": {
									"entryPoint": null,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isExcludedFromFee_1111": {
									"entryPoint": null,
									"id": 1111,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_345": {
									"entryPoint": 884,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ngoNames_953": {
									"entryPoint": 1395,
									"id": 953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ngoWallets_956": {
									"entryPoint": 1642,
									"id": 956,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@popFromNGOWallets_1064": {
									"entryPoint": 4562,
									"id": 1064,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@pushToNGOWallets_1042": {
									"entryPoint": null,
									"id": 1042,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@registerNGOWallet_1189": {
									"entryPoint": 3062,
									"id": 1189,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@registerNGO_1259": {
									"entryPoint": 1088,
									"id": 1259,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1546,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setFeePercent_1083": {
									"entryPoint": 1565,
									"id": 1083,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTreasuryWallet_1030": {
									"entryPoint": 1697,
									"id": 1030,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1682,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1053,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2269,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1899,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasuryWallet_962": {
									"entryPoint": null,
									"id": 962,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unregisterNGOWallet_1317": {
									"entryPoint": 3546,
									"id": 1317,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unregisterNGO_1396": {
									"entryPoint": 1912,
									"id": 1396,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 5036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 5296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_address": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": 5995,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0872d35976de08f0aa135bf934961c054082d5eca6e26e962dcaa077f2ef32b9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_16a775d88ff326055ef639aacc0e63c0701d399070d62a18288fc206c6578542__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a653adfc56c6a5082525d4866c63015b01abd19f8c3f9c57f012fa2392041db2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba8c7b94845b79afccc5885d51de055b4f21ba379566ced52bec60ec5391460d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6b764185d3739b16932c4b21e6113072c4e801fae3cbd068bda517d69a2b702__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef53133eb78330d291976c83314ee3bf79a4ca46417e3baa9acccde0196eb581__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_bytes_storage_ptr": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 5730,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint32": {
									"entryPoint": 6067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5686,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 6162,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5016,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13196:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "64:373:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "74:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "94:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "88:12:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "78:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "116:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "121:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "109:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "109:19:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "137:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "146:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "141:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "208:110:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "222:14:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "232:4:7",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "226:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "264:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "269:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "260:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "260:11:7"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "273:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "256:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "256:20:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "292:5:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "299:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "288:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "288:13:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "303:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "284:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "284:22:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "278:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "278:29:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "249:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "249:59:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "249:59:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "167:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "170:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "164:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "164:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "178:21:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "180:17:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "189:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "192:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "185:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "185:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "180:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "160:3:7",
																"statements": []
															},
															"src": "156:162:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "342:3:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "347:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "338:16:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "356:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "334:27:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "363:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "327:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "327:38:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "327:38:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:57:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "389:3:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "402:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "410:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "398:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "398:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "419:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "415:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "415:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "394:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "394:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "385:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:39:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "426:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "381:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "381:50:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "374:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "41:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "48:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:7",
														"type": ""
													}
												],
												"src": "14:423:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "563:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "580:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "591:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "573:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "573:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "603:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "641:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "652:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "637:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "637:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "611:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "611:45:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "603:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "532:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "543:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "554:4:7",
														"type": ""
													}
												],
												"src": "442:220:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "726:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "748:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "735:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "726:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "827:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "788:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "803:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "808:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "799:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "799:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "812:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "795:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "795:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "784:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "784:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "774:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "774:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "767:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:50:7"
															},
															"nodeType": "YulIf",
															"src": "764:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "695:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "706:5:7",
														"type": ""
													}
												],
												"src": "667:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "932:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "978:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "987:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "990:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "980:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "980:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "980:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "962:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "949:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "974:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:32:7"
															},
															"nodeType": "YulIf",
															"src": "942:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1003:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1032:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1013:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1013:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1051:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1078:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1089:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1074:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1074:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1061:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1061:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1051:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "890:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "901:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "913:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "921:6:7",
														"type": ""
													}
												],
												"src": "845:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1199:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1209:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1221:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1232:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1217:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1217:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1209:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1251:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1269:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1269:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1262:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1262:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1244:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1244:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1244:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1168:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1179:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1190:4:7",
														"type": ""
													}
												],
												"src": "1104:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1397:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1407:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1419:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1430:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1415:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1415:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1407:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1449:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1442:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1377:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1388:4:7",
														"type": ""
													}
												],
												"src": "1296:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1582:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1628:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1637:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1640:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1630:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1630:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1630:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1603:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1612:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1599:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1599:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1624:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1595:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1595:32:7"
															},
															"nodeType": "YulIf",
															"src": "1592:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1653:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1682:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1663:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1663:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1653:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1701:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1711:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1711:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1701:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1758:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1785:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1796:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1781:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1781:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1768:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1768:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1532:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1543:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1555:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1563:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1571:6:7",
														"type": ""
													}
												],
												"src": "1478:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1908:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1918:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1930:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1941:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1926:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1960:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1975:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1983:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1971:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1971:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1953:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1953:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1953:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1877:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1888:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1899:4:7",
														"type": ""
													}
												],
												"src": "1811:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2032:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2049:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2056:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2061:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2052:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2052:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2042:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2089:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2092:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2082:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2082:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2113:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2116:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2106:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2106:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2000:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2185:666:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2234:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2243:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2246:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2236:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2236:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2236:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2213:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2221:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2209:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2209:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2228:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2205:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2205:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2198:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2198:35:7"
															},
															"nodeType": "YulIf",
															"src": "2195:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2259:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2282:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2269:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:20:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2263:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2298:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2308:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2302:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2349:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2351:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2351:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2351:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2341:2:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2345:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2338:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2338:10:7"
															},
															"nodeType": "YulIf",
															"src": "2335:36:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2380:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2394:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2390:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2384:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2406:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2426:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2420:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2420:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2410:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2438:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2460:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "2484:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2488:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2480:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2480:13:7"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "2495:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2476:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2476:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2500:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2472:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2472:31:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2505:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2468:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2468:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2456:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2456:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2442:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2568:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2570:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2570:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2570:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2527:10:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2539:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2524:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2524:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2547:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2559:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2544:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2544:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2521:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2521:46:7"
															},
															"nodeType": "YulIf",
															"src": "2518:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2606:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2610:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2599:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2599:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2637:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2645:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2630:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2630:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2630:18:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2696:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2705:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2708:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2698:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2698:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2698:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2671:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2679:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2667:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2667:15:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2684:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2663:26:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2691:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2660:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2660:35:7"
															},
															"nodeType": "YulIf",
															"src": "2657:55:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2738:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2746:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2734:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2734:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2757:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2765:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2753:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2753:17:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2772:2:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2721:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:54:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2721:54:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2799:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2807:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2795:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2795:15:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2812:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2791:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2791:26:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2819:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2784:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2784:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2784:37:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2830:15:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2839:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2830:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2159:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2167:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2175:5:7",
														"type": ""
													}
												],
												"src": "2132:719:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:299:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2999:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3008:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3011:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3001:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3001:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3001:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2974:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2983:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2970:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2970:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2995:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2966:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:32:7"
															},
															"nodeType": "YulIf",
															"src": "2963:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3024:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3051:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3038:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3038:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3028:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3104:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3113:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3116:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3106:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3106:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3106:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3076:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3084:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3073:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:30:7"
															},
															"nodeType": "YulIf",
															"src": "3070:50:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3129:60:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3161:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3172:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3157:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3157:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3181:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3139:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:50:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3129:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3198:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3231:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3242:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3227:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3227:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3208:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3208:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3198:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2911:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2922:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2934:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2942:6:7",
														"type": ""
													}
												],
												"src": "2856:396:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3327:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3373:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3382:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3385:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3375:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3375:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3375:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3348:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3357:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3344:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3344:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3369:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:32:7"
															},
															"nodeType": "YulIf",
															"src": "3337:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3398:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3421:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3408:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3408:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3398:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3293:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3304:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3316:6:7",
														"type": ""
													}
												],
												"src": "3257:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3512:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3558:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3567:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3570:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3560:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3560:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3560:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3533:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3542:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3554:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3525:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3525:32:7"
															},
															"nodeType": "YulIf",
															"src": "3522:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3583:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3612:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3593:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3593:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3583:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3478:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3489:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3501:6:7",
														"type": ""
													}
												],
												"src": "3442:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3734:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3744:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3756:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3767:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3752:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3752:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3744:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3786:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3801:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3817:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3822:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3813:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3813:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3826:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3809:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3809:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3797:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3797:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3779:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3779:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3779:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3703:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3714:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3725:4:7",
														"type": ""
													}
												],
												"src": "3633:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3921:242:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3967:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3976:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3979:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3969:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3969:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3969:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3942:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3951:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3938:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3938:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3963:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3934:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3934:32:7"
															},
															"nodeType": "YulIf",
															"src": "3931:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3992:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4019:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4006:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4006:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3996:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4081:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4084:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4074:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nodeType": "YulIf",
															"src": "4038:50:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4097:60:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4129:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4140:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4125:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4125:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4149:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4107:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4107:50:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4097:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3887:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3898:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3910:6:7",
														"type": ""
													}
												],
												"src": "3841:322:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4255:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4301:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4310:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4313:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4303:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4303:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4303:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4276:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4285:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4272:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4297:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4268:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4268:32:7"
															},
															"nodeType": "YulIf",
															"src": "4265:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4326:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4355:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4336:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4326:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4374:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4384:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4384:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4374:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4213:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4224:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4236:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4244:6:7",
														"type": ""
													}
												],
												"src": "4168:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4517:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4563:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4572:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4575:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4565:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4565:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4565:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4538:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4547:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4534:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4534:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4559:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4530:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4530:32:7"
															},
															"nodeType": "YulIf",
															"src": "4527:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4588:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4617:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4598:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4598:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4588:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4636:45:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4666:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4677:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4662:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4662:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4649:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4649:32:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4640:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4734:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4743:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4746:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4736:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4736:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4736:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4703:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4724:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4717:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4717:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4710:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4710:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4700:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4700:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4693:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4693:40:7"
															},
															"nodeType": "YulIf",
															"src": "4690:60:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4759:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4769:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4759:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4475:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4486:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4498:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4506:6:7",
														"type": ""
													}
												],
												"src": "4433:347:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4840:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4850:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4864:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4867:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4860:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4860:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4850:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4881:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4911:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4917:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4907:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4907:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4885:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4958:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4960:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4974:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4982:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4970:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4970:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4960:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4938:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4931:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4931:26:7"
															},
															"nodeType": "YulIf",
															"src": "4928:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5048:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5069:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5076:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5081:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5072:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5072:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5062:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5062:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5062:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5113:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5116:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5106:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5106:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5106:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5141:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5144:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5134:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5134:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5134:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5004:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5027:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5035:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5024:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5024:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5001:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5001:38:7"
															},
															"nodeType": "YulIf",
															"src": "4998:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4820:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4829:6:7",
														"type": ""
													}
												],
												"src": "4785:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5344:169:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5361:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5372:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5354:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5354:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5354:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5395:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5406:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5391:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5391:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5411:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5384:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5384:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5384:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5434:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5445:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5430:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5430:18:7"
																	},
																	{
																		"hexValue": "496e76616c6964204e474f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5450:21:7",
																		"type": "",
																		"value": "Invalid NGO address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5423:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5423:49:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5423:49:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5481:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5493:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5504:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5489:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5489:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5481:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_16a775d88ff326055ef639aacc0e63c0701d399070d62a18288fc206c6578542__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5321:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5335:4:7",
														"type": ""
													}
												],
												"src": "5170:343:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5550:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5567:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5574:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5579:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5570:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5570:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5560:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5560:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5560:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5607:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5610:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5600:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5600:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5631:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5634:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5624:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5624:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5518:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5709:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5726:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "5729:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5719:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5719:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5719:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5742:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5760:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5763:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "5750:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5742:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_bytes_storage_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5692:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5700:4:7",
														"type": ""
													}
												],
												"src": "5650:124:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5917:706:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5927:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5938:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "5931:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5948:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5971:6:7"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "5965:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5965:13:7"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "5952:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5987:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "6027:9:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "6001:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6001:36:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5991:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6046:11:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6056:1:7",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6050:2:7",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6107:126:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "6128:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "6137:9:7"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6152:3:7",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "6148:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6148:8:7"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "6133:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6133:24:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "6121:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6121:37:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6121:37:7"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "6171:52:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "6182:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "6191:6:7"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nodeType": "YulIdentifier",
																													"src": "6213:6:7"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nodeType": "YulIdentifier",
																												"src": "6206:6:7"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "6206:14:7"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "6199:6:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6199:22:7"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "6187:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6187:35:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6178:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6178:45:7"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "6171:3:7"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6100:133:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6105:1:7",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6249:349:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6270:1:7",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "value0",
																							"nodeType": "YulIdentifier",
																							"src": "6273:6:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "6263:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6263:17:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6263:17:7"
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6293:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6303:4:7",
																					"type": "",
																					"value": "0x20"
																				},
																				"variables": [
																					{
																						"name": "_2",
																						"nodeType": "YulTypedName",
																						"src": "6297:2:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6320:31:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6345:1:7",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "6348:2:7"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "6335:9:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6335:16:7"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "6324:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6364:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6373:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "6368:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6441:111:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "6470:3:7"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "6475:1:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6466:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6466:11:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "6485:7:7"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "6479:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6479:14:7"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "6459:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6459:35:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6459:35:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6511:27:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "6526:7:7"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "6535:2:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6522:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6522:16:7"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "6511:7:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6398:1:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "6401:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6395:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6395:13:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "6409:19:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6411:15:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "6420:1:7"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "6423:2:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6416:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6416:10:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6411:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "6391:3:7",
																					"statements": []
																				},
																				"src": "6387:165:7"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "6565:23:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "6576:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "6581:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6572:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6572:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "6565:3:7"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6242:356:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6247:1:7",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "6077:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6088:2:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6073:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6073:18:7"
															},
															"nodeType": "YulSwitch",
															"src": "6066:532:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6607:10:7",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "6614:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6607:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5893:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5898:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5909:3:7",
														"type": ""
													}
												],
												"src": "5779:844:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6660:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6677:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6684:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6689:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6680:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6680:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6670:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6670:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6670:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6717:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6720:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6710:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6710:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6710:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6741:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6744:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6734:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6734:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6734:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6628:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6807:88:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6838:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6840:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6840:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6840:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6823:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6834:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6830:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6830:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6820:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6820:17:7"
															},
															"nodeType": "YulIf",
															"src": "6817:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6869:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6880:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6887:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6876:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6876:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6869:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6789:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6799:3:7",
														"type": ""
													}
												],
												"src": "6760:135:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6981:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7014:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7028:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7038:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "7032:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7059:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "7063:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7052:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7052:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7052:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7082:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7104:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7108:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "7094:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7094:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "7086:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7126:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "7149:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7159:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "7166:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7178:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7162:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7162:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "7155:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7155:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7145:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7145:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "7130:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7220:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7222:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "7237:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "7222:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "7202:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7214:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "7199:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7199:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "7196:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7256:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "7270:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7280:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "7287:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7292:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7283:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7283:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "7276:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7276:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7266:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7266:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "7260:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7310:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "7323:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "7314:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7408:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "7417:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "7424:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "7410:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7410:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7410:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "7358:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "7365:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "7355:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7355:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "7369:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7371:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "7384:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7391:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7380:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7380:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "7371:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "7351:3:7",
																			"statements": []
																		},
																		"src": "7347:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6997:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7002:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6994:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6994:11:7"
															},
															"nodeType": "YulIf",
															"src": "6991:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6953:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6960:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6965:10:7",
														"type": ""
													}
												],
												"src": "6900:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7535:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7545:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "7560:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7578:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "7581:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "7574:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7574:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7591:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "7587:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7587:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "7570:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7570:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "7566:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7566:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7556:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7556:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7602:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7605:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7598:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7598:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7553:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7553:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7545:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7512:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "7518:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "7526:4:7",
														"type": ""
													}
												],
												"src": "7450:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7717:1259:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7727:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7747:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7741:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7741:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7731:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7794:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7796:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7796:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7796:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7774:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7763:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7763:30:7"
															},
															"nodeType": "YulIf",
															"src": "7760:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7869:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "7907:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "7901:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7901:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "7875:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7875:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7915:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7825:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7825:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7825:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7931:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7948:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7935:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7958:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7977:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "7962:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7990:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "8003:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7990:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8060:659:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8074:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8093:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8105:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "8101:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8101:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "8089:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8089:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "8078:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8122:52:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8169:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_bytes_storage_ptr",
																						"nodeType": "YulIdentifier",
																						"src": "8136:32:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8136:38:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "8126:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8187:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8196:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "8191:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8274:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8299:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "8317:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "8322:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "8313:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8313:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "8307:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8307:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8292:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8292:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8292:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8351:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8365:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8373:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8361:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8361:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8351:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8392:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8409:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "8420:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8405:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8405:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8392:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8221:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8224:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8218:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8218:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "8233:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8235:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "8244:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "8247:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8240:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8240:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8235:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "8214:3:7",
																					"statements": []
																				},
																				"src": "8210:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8494:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8512:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8539:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8544:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8535:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8535:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8529:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8529:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8516:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8579:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8591:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "8618:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "8621:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "8614:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "8614:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "8630:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "8610:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "8610:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "8640:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "8636:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "8636:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "8606:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "8606:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "8602:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8602:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "8587:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8587:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8572:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8572:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8572:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8465:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8474:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8462:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8462:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "8459:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8680:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8694:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8697:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "8690:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8690:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8706:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8686:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8686:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8673:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8673:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8673:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8053:666:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8058:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8736:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8750:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8763:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8754:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8799:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8817:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8836:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8841:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8832:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8832:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8826:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8826:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8817:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8780:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "8777:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8886:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8945:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8952:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8892:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8892:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8879:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8879:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8879:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8728:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8033:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8041:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8030:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8030:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "8023:947:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7702:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7708:3:7",
														"type": ""
													}
												],
												"src": "7621:1355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9130:168:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9147:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9158:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9140:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9140:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9140:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9170:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9196:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9208:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9219:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9204:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9204:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "9178:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9178:45:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9170:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9243:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9254:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9239:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9263:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9279:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9284:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9275:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9275:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9288:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9271:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9271:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9259:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9259:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9232:60:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9232:60:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9091:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9102:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9110:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9121:4:7",
														"type": ""
													}
												],
												"src": "8981:317:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9477:162:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9494:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9505:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9487:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9487:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9487:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9528:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9539:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9524:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9524:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9544:2:7",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9517:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9517:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9517:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9567:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9578:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9563:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9563:18:7"
																	},
																	{
																		"hexValue": "46656520746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9583:14:7",
																		"type": "",
																		"value": "Fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9556:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9556:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9556:42:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9607:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9619:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9630:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9615:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9615:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9607:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9454:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9468:4:7",
														"type": ""
													}
												],
												"src": "9303:336:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9818:174:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9835:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9846:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9828:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9828:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9828:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9869:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9880:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9865:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9865:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9885:2:7",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9858:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9858:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9858:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9908:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9919:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9904:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9904:18:7"
																	},
																	{
																		"hexValue": "496e76616c69642074726561737572792061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9924:26:7",
																		"type": "",
																		"value": "Invalid treasury address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9897:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9897:54:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9897:54:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9960:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9972:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9983:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9968:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9968:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9960:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9795:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9809:4:7",
														"type": ""
													}
												],
												"src": "9644:348:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10171:173:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10188:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10199:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10181:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10181:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10181:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10222:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10233:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10218:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10218:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10238:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10211:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10211:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10211:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10261:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10272:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10257:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10257:18:7"
																	},
																	{
																		"hexValue": "54726561737572792077616c6c6574206e6f7420736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10277:25:7",
																		"type": "",
																		"value": "Treasury wallet not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10250:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10250:53:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10250:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10312:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10324:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10335:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10320:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10320:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10312:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6b764185d3739b16932c4b21e6113072c4e801fae3cbd068bda517d69a2b702__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10148:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10162:4:7",
														"type": ""
													}
												],
												"src": "9997:347:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10523:168:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10540:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10551:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10533:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10533:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10533:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10574:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10585:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10570:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10570:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10590:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10563:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10563:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10563:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10613:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10624:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10609:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10609:18:7"
																	},
																	{
																		"hexValue": "4e6f204e474f732072656769737465726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10629:20:7",
																		"type": "",
																		"value": "No NGOs registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10602:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10602:48:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10602:48:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10659:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10671:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10682:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10667:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10667:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10659:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a653adfc56c6a5082525d4866c63015b01abd19f8c3f9c57f012fa2392041db2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10500:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10514:4:7",
														"type": ""
													}
												],
												"src": "10349:342:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10870:172:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10887:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10898:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10880:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10880:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10880:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10921:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10932:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10917:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10917:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10937:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10910:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10910:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10910:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10960:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10971:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10956:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10956:18:7"
																	},
																	{
																		"hexValue": "4e6f2066756e647320746f2064697374726962757465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10976:24:7",
																		"type": "",
																		"value": "No funds to distribute"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10949:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10949:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10949:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11010:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11022:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11033:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11018:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11018:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11010:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0872d35976de08f0aa135bf934961c054082d5eca6e26e962dcaa077f2ef32b9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10847:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10861:4:7",
														"type": ""
													}
												],
												"src": "10696:346:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11093:171:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11124:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11145:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11152:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11157:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11148:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11148:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11138:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11138:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11138:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11189:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11192:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11182:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11182:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11182:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11217:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11220:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11210:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11210:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11210:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11113:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11106:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11106:9:7"
															},
															"nodeType": "YulIf",
															"src": "11103:132:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11244:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11253:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11256:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11249:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11249:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11244:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11078:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11081:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11087:1:7",
														"type": ""
													}
												],
												"src": "11047:217:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11443:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11460:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11471:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11453:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11453:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11453:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11494:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11505:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11490:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11490:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11510:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11483:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11483:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11483:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11533:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11544:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11529:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11529:18:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e647320666f7220646973747269627574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11549:34:7",
																		"type": "",
																		"value": "Insufficient funds for distribut"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11522:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11522:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11522:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11604:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11615:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11600:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11600:18:7"
																	},
																	{
																		"hexValue": "696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11620:5:7",
																		"type": "",
																		"value": "ion"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11593:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11593:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11593:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11635:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11647:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11658:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11643:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11643:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11635:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba8c7b94845b79afccc5885d51de055b4f21ba379566ced52bec60ec5391460d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11420:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11434:4:7",
														"type": ""
													}
												],
												"src": "11269:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11830:188:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11840:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11852:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11863:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11848:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11848:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11840:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11882:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11897:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11913:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11918:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "11909:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11909:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11922:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "11905:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11905:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11893:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11893:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11875:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11875:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11875:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11946:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11957:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11942:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11942:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11962:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11935:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11935:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11935:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11989:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12000:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11985:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11985:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12005:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11978:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11978:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11978:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11783:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11794:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11802:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11810:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11821:4:7",
														"type": ""
													}
												],
												"src": "11673:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12197:223:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12214:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12225:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12207:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12207:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12207:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12248:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12259:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12244:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12244:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12264:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12237:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12237:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12237:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12287:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12298:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12283:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12283:18:7"
																	},
																	{
																		"hexValue": "546869732077616c6c657420697320616c726561647920726567697374657265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12303:34:7",
																		"type": "",
																		"value": "This wallet is already registere"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12276:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12276:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12276:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12358:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12369:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12354:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12354:18:7"
																	},
																	{
																		"hexValue": "64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12374:3:7",
																		"type": "",
																		"value": "d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12347:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12347:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12347:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12387:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12399:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12410:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12395:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12395:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12387:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef53133eb78330d291976c83314ee3bf79a4ca46417e3baa9acccde0196eb581__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12174:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12188:4:7",
														"type": ""
													}
												],
												"src": "12023:397:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12471:155:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12481:20:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12491:10:7",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12485:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12510:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12529:5:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "12536:2:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12525:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12525:14:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "12514:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12567:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12569:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12569:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12569:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "12554:7:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "12563:2:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12551:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12551:15:7"
															},
															"nodeType": "YulIf",
															"src": "12548:41:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12598:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "12609:7:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12618:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12605:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12605:15:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12598:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12453:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12463:3:7",
														"type": ""
													}
												],
												"src": "12425:201:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12679:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12689:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12700:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12703:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12696:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12696:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12689:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12728:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12730:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12730:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12730:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12720:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "12723:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12717:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12717:10:7"
															},
															"nodeType": "YulIf",
															"src": "12714:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12662:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12665:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12671:3:7",
														"type": ""
													}
												],
												"src": "12631:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12813:116:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12823:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12838:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12841:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12834:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12834:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12823:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12901:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12903:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12903:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12903:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12872:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12865:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12865:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12879:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "12886:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "12895:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "12882:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12882:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "12876:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12876:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "12862:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12862:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12855:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12855:45:7"
															},
															"nodeType": "YulIf",
															"src": "12852:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12792:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12795:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12801:7:7",
														"type": ""
													}
												],
												"src": "12761:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12983:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12993:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13005:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13008:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13001:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13001:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12993:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13034:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13036:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13036:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13036:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13025:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13031:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13022:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13022:11:7"
															},
															"nodeType": "YulIf",
															"src": "13019:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12965:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12968:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12974:4:7",
														"type": ""
													}
												],
												"src": "12934:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13099:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13116:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13123:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13128:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13119:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13119:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13109:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13109:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13109:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13156:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13159:4:7",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13149:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13149:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13149:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13180:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13183:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13173:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13173:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13173:15:7"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "13067:127:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_16a775d88ff326055ef639aacc0e63c0701d399070d62a18288fc206c6578542__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid NGO address\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function array_dataslot_bytes_storage_ptr(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage_ptr(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Fee too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid treasury address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c6b764185d3739b16932c4b21e6113072c4e801fae3cbd068bda517d69a2b702__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Treasury wallet not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a653adfc56c6a5082525d4866c63015b01abd19f8c3f9c57f012fa2392041db2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"No NGOs registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0872d35976de08f0aa135bf934961c054082d5eca6e26e962dcaa077f2ef32b9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"No funds to distribute\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ba8c7b94845b79afccc5885d51de055b4f21ba379566ced52bec60ec5391460d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Insufficient funds for distribut\")\n        mstore(add(headStart, 96), \"ion\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_ef53133eb78330d291976c83314ee3bf79a4ca46417e3baa9acccde0196eb581__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"This wallet is already registere\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint32(value) -> ret\n    {\n        let _1 := 0xffffffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x153 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CE3489B GT PUSH2 0xBF JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xAE91470D EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xDF8408FE EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xF9479FFA EQ PUSH2 0x36C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7CE3489B EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x7D5B6C60 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x7FD6F15C EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xA8602FEA EQ PUSH2 0x2D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x4618F6AC EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x285 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x3539C6B1 EQ PUSH2 0x1CC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15F PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH2 0x188 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH2 0x188 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1480 JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x21A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH2 0x188 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x1497 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x1497 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x1480 JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST PUSH2 0x21A PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1480 JUMP JUMPDEST PUSH2 0x66A JUMP JUMPDEST PUSH2 0x19C PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21A JUMP JUMPDEST PUSH2 0x15F PUSH2 0x692 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0x76B JUMP JUMPDEST PUSH2 0x188 PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0x14EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x1512 JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x383 SWAP1 PUSH2 0x154B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AF SWAP1 PUSH2 0x154B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x411 DUP2 DUP6 DUP6 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x42A DUP6 DUP3 DUP6 PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0x435 DUP6 DUP6 DUP6 PUSH2 0xB6C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x449 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x1583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x4FA JUMPI DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x7 PUSH0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4A2 JUMPI PUSH2 0x4A2 PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD SWAP1 SWAP2 KECCAK256 SWAP1 MLOAD PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x4EA JUMPI PUSH0 SWAP2 POP POP PUSH2 0x417 JUMP JUMPDEST PUSH2 0x4F3 DUP2 PUSH2 0x164A JUMP JUMPDEST SWAP1 POP PUSH2 0x47A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x51C DUP5 DUP3 PUSH2 0x16AF JUMP JUMPDEST POP PUSH32 0xA06DDE3E644F7DA70B4461F791FF2766EBEACD8CAE66B3E6A98637A9DACBD900 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x54E SWAP3 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x55F DUP3 PUSH2 0xBF6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x570 CALLER DUP3 PUSH2 0xD51 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x58B SWAP1 PUSH2 0x154B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B7 SWAP1 PUSH2 0x154B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x602 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x602 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x612 PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0x61B PUSH0 PUSH2 0xD89 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x625 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x32 DUP2 GT ISZERO PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x8CCACA40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x679 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x383 SWAP1 PUSH2 0x154B JUMP JUMPDEST PUSH2 0x6A9 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x732 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND DUP3 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x411 DUP2 DUP6 DUP6 PUSH2 0xB6C JUMP JUMPDEST PUSH0 PUSH2 0x781 PUSH2 0xBC9 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x829 JUMPI DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x7 PUSH0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD SWAP1 SWAP2 KECCAK256 SWAP1 MLOAD PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x819 JUMPI PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7FE JUMPI PUSH2 0x7FE PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x829 JUMP JUMPDEST PUSH2 0x822 DUP2 PUSH2 0x164A JUMP JUMPDEST SWAP1 POP PUSH2 0x784 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x840 JUMPI POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x860 SWAP2 PUSH2 0x1282 JUMP JUMPDEST PUSH32 0xF7CE65B9119570713C55642C7BA09904806C36EC3DA8FA5B1A8AA4A223132C2E DUP4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x891 SWAP3 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x8A2 DUP2 PUSH2 0xDDA JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8B3 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x8E5 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH2 0x570 DUP2 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x91F PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x977 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561737572792077616C6C6574206E6F7420736574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x8 SLOAD DUP1 PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BC81391D3DCC81C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xA1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F2066756E647320746F2064697374726962757465 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH0 PUSH2 0xA27 DUP4 DUP4 PUSH2 0x1794 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742066756E647320666F7220646973747269627574 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x34B7B7 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xADE JUMPI PUSH1 0xA SLOAD PUSH1 0x8 DUP1 SLOAD PUSH2 0xACE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xAB4 JUMPI PUSH2 0xAB4 PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xAD7 DUP2 PUSH2 0x164A JUMP JUMPDEST SWAP1 POP PUSH2 0xA86 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAF1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFBF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xADE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH2 0xADE DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xFBF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBBE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH2 0xAF1 DUP4 DUP4 DUP4 PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x1583 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732077616C6C657420697320616C726561647920726567697374657265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xCE9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCB8 JUMPI PUSH2 0xCB8 PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCD9 JUMPI POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCE2 DUP2 PUSH2 0x164A JUMP JUMPDEST SWAP1 POP PUSH2 0xC91 JUMP JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 DUP4 OR SWAP1 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 OR SWAP1 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH2 0xD85 DUP3 PUSH0 DUP4 PUSH2 0x1091 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x1583 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x8 SLOAD PUSH4 0xFFFFFFFF DUP3 AND LT ISZERO PUSH2 0xE91 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x8 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE81 JUMPI PUSH2 0xE58 DUP2 PUSH2 0x11D2 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0xE8A DUP2 PUSH2 0x17B3 JUMP JUMPDEST SWAP1 POP PUSH2 0xE03 JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEC3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEB8 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF33 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xF15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF4F JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xFE8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1011 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xADE JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1083 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x10CE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x10D9 JUMPI POP PUSH1 0x6 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x10E9 JUMPI PUSH2 0xAF1 DUP4 DUP4 DUP4 PUSH2 0xE99 JUMP JUMPDEST PUSH0 PUSH2 0x3E8 PUSH1 0x6 SLOAD DUP4 PUSH2 0x10FB SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0x1105 SWAP2 SWAP1 PUSH2 0x1794 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1112 DUP3 DUP5 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 DUP2 SUB PUSH2 0x1127 JUMPI PUSH1 0x1 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1134 SWAP1 DUP5 PUSH2 0x1794 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH2 0x1146 SWAP1 DUP4 PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0x1150 SWAP1 DUP6 PUSH2 0x17FF JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x119F JUMPI PUSH2 0x118F DUP9 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1175 JUMPI PUSH2 0x1175 PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x1198 DUP2 PUSH2 0x164A JUMP JUMPDEST SWAP1 POP PUSH2 0x1154 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x11BE JUMPI PUSH1 0xA SLOAD PUSH2 0x11BE SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x11C9 DUP8 DUP8 DUP6 PUSH2 0xE99 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x11E2 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x17FF JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x11F2 JUMPI PUSH2 0x11F2 PUSH2 0x15B0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x1223 JUMPI PUSH2 0x1223 PUSH2 0x15B0 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x125F JUMPI PUSH2 0x125F PUSH2 0x1812 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x128E SWAP1 PUSH2 0x154B JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x129D JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x12C8 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x12B5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12F0 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x12D4 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x55F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12CC JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1348 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1351 DUP4 PUSH2 0x1321 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1371 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x137A DUP5 PUSH2 0x1321 JUMP JUMPDEST SWAP3 POP PUSH2 0x1388 PUSH1 0x20 DUP6 ADD PUSH2 0x1321 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13D6 JUMPI PUSH2 0x13D6 PUSH2 0x1398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13FE JUMPI PUSH2 0x13FE PUSH2 0x1398 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1416 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1446 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x145C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1468 DUP6 DUP3 DUP7 ADD PUSH2 0x13AC JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1477 PUSH1 0x20 DUP5 ADD PUSH2 0x1321 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1490 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x55F DUP3 PUSH2 0x1321 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14E2 DUP5 DUP3 DUP6 ADD PUSH2 0x13AC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14FB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1504 DUP4 PUSH2 0x1321 JUMP JUMPDEST SWAP2 POP PUSH2 0x1477 PUSH1 0x20 DUP5 ADD PUSH2 0x1321 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1523 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x152C DUP4 PUSH2 0x1321 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1540 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x155F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x157D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x496E76616C6964204E474F2061646472657373 PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 DUP4 SLOAD PUSH2 0x15D1 DUP2 PUSH2 0x154B JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x15E9 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x15FE JUMPI PUSH2 0x162A JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x162A JUMP JUMPDEST DUP8 PUSH0 MSTORE PUSH1 0x20 DUP1 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1621 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1608 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x165B JUMPI PUSH2 0x165B PUSH2 0x1636 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xAF1 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1688 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16A7 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1694 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16C9 JUMPI PUSH2 0x16C9 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0x16DD DUP2 PUSH2 0x16D7 DUP5 SLOAD PUSH2 0x154B JUMP JUMPDEST DUP5 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1710 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x16F9 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x16A7 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x173E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x171F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x175B JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x177D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x12CC JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x17AE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x17CB JUMPI PUSH2 0x17CB PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x417 JUMPI PUSH2 0x417 PUSH2 0x1636 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x417 JUMPI PUSH2 0x417 PUSH2 0x1636 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x417 JUMPI PUSH2 0x417 PUSH2 0x1636 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xD7 0xBB 0x4B SWAP15 REVERT SWAP3 PUSH21 0xD7B952CF2DD887F2D5BFE42745A5792A1757400782 0xD4 KECCAK256 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "174:5358:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:7;;1262:22;1244:41;;1232:2;1217:18;3979:186:2;1104:187:7;2830:97:2;2908:12;;2830:97;;;1442:25:7;;;1430:2;1415:18;2830:97:2;1296:177:7;4757:244:2;;;;;;:::i;:::-;;:::i;2688:82::-;;;2761:2;1953:36:7;;1941:2;1926:18;2688:82:2;1811:184:7;2407:491:6;;;;;;:::i;:::-;;:::i;1776:83::-;;;;;;:::i;:::-;;:::i;:::-;;295:43;;;;;;:::i;:::-;;:::i;441:29::-;;;;;-1:-1:-1;;;;;441:29:6;;;;;;-1:-1:-1;;;;;3797:32:7;;;3779:51;;3767:2;3752:18;441:29:6;3633:203:7;1642:126:6;;;;;;:::i;:::-;-1:-1:-1;;;;;1733:27:6;1709:4;1733:27;;;:18;:27;;;;;;;;;1642:126;2985:116:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:2;3050:7;3076:18;;;;;;;;;;;;2985:116;2293:101:0;;;:::i;1335:159:6:-;;;;;;:::i;:::-;;:::i;345:27::-;;;;;;:::i;:::-;;:::i;238:29::-;;;;;;1638:85:0;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;1962:93:2;;;:::i;693:370:6:-;;;;;;:::i;:::-;;:::i;3296:178:2:-;;;;;;:::i;:::-;;:::i;3412:576:6:-;;;;;;:::i;:::-;;:::i;3532:140:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:2;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;1502:132:6;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;3996:617:6:-;;;:::i;1760:89:2:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:5;4106:31:2;735:10:5;4122:7:2;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:5;4900:37:2;4916:4;735:10:5;4931:5:2;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:2;;4757:244;-1:-1:-1;;;;4757:244:2:o;2407:491:6:-;2501:4;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2526:25:6;::::1;2518:57;;;;-1:-1:-1::0;;;2518:57:6::1;;;;;;;:::i;:::-;;;;;;;;;2591:6;2586:162;2607:10;:17:::0;2603:21;::::1;2586:162;;;2712:8;2695:27;;;;;;2666:8;:23;2675:10;2686:1;2675:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;2675:13:6::1;2666:23:::0;;;::::1;::::0;;;;;;;;;;;2649:42;;::::1;::::0;2666:23;2649:42:::1;:::i;:::-;;;;;;;;:73:::0;2645:91:::1;;2731:5;2724:12;;;;;2645:91;2626:3;::::0;::::1;:::i;:::-;;;2586:162;;;-1:-1:-1::0;;;;;;2758:21:6;::::1;;::::0;;;:8:::1;:21;::::0;;;;:32:::1;2782:8:::0;2758:21;:32:::1;:::i;:::-;;2806:36;2820:8;2830:11;2806:36;;;;;;;:::i;:::-;;;;;;;;2860:30;2878:11;2860:17;:30::i;:::-;2853:37:::0;2407:491;-1:-1:-1;;;2407:491:6:o;1776:83::-;1826:25;1832:10;1844:6;1826:5;:25::i;:::-;1776:83;:::o;295:43::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1335:159:6:-;1531:13:0;:11;:13::i;:::-;1432:2:6::1;1417:11;:17;;1409:42;;;::::0;-1:-1:-1;;;1409:42:6;;9505:2:7;1409:42:6::1;::::0;::::1;9487:21:7::0;9544:2;9524:18;;;9517:30;-1:-1:-1;;;9563:18:7;;;9556:42;9615:18;;1409:42:6::1;9303:336:7::0;1409:42:6::1;1462:10;:24:::0;1335:159::o;345:27::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;345:27:6;;-1:-1:-1;345:27:6;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;693:370:6:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;783:29:6;::::1;775:66;;;::::0;-1:-1:-1;;;775:66:6;;9846:2:7;775:66:6::1;::::0;::::1;9828:21:7::0;9885:2;9865:18;;;9858:30;9924:26;9904:18;;;9897:54;9968:18;;775:66:6::1;9644:348:7::0;775:66:6::1;858:14;::::0;-1:-1:-1;;;;;858:14:6::1;:28:::0;854:103:::1;;922:14;::::0;-1:-1:-1;;;;;922:14:6::1;940:5;903:34:::0;;;:18:::1;:34;::::0;;;;:42;;-1:-1:-1;;903:42:6::1;::::0;;854:103:::1;969:14;:32:::0;;-1:-1:-1;;;;;969:32:6;;::::1;-1:-1:-1::0;;;;;;969:32:6;;::::1;::::0;::::1;::::0;;:14:::1;1014:34:::0;;;:18:::1;:34;::::0;;;;:41;;-1:-1:-1;;1014:41:6::1;969:32:::0;1014:41:::1;::::0;;693:370::o;3296:178:2:-;3365:4;735:10:5;3419:27:2;735:10:5;3436:2:2;3440:5;3419:9;:27::i;3412:576:6:-;3487:4;1531:13:0;:11;:13::i;:::-;3504:19:6::1;3552:6:::0;3547:235:::1;3568:10;:17:::0;3564:21;::::1;3547:235;;;3673:8;3656:27;;;;;;3627:8;:23;3636:10;3647:1;3636:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;3636:13:6::1;3627:23:::0;;;::::1;::::0;;;;;;;;;;;3610:42;;::::1;::::0;3627:23;3610:42:::1;:::i;:::-;;;;;;;;:73:::0;3606:165:::1;;3718:10;3729:1;3718:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;3718:13:6::1;::::0;-1:-1:-1;3750:5:6::1;;3606:165;3587:3;::::0;::::1;:::i;:::-;;;3547:235;;;-1:-1:-1::0;;;;;;3796:25:6;::::1;3792:43;;-1:-1:-1::0;3830:5:6::1;::::0;3412:576;-1:-1:-1;;3412:576:6:o;3792:43::-:1;-1:-1:-1::0;;;;;3855:21:6;::::1;;::::0;;;:8:::1;:21;::::0;;;;3848:28:::1;::::0;::::1;:::i;:::-;3892:38;3908:8;3918:11;3892:38;;;;;;;:::i;:::-;;;;;;;;3948:32;3968:11;3948:19;:32::i;:::-;3941:39;;;1554:1:0;3412:576:6::0;;;:::o;1502:132::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1588:27:6;;;::::1;;::::0;;;:18:::1;:27;::::0;;;;:38;;-1:-1:-1;;1588:38:6::1;::::0;::::1;;::::0;;;::::1;::::0;;1502:132::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;3779:51:7::0;3752:18;;2672:31:0::1;3633:203:7::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;3996:617:6:-:0;1531:13:0;:11;:13::i;:::-;4070:14:6::1;::::0;-1:-1:-1;;;;;4070:14:6::1;4062:64;;;::::0;-1:-1:-1;;;4062:64:6;;10199:2:7;4062:64:6::1;::::0;::::1;10181:21:7::0;10238:2;10218:18;;;10211:30;10277:25;10257:18;;;10250:53;10320:18;;4062:64:6::1;9997:347:7::0;4062:64:6::1;4156:10;:17:::0;4192:12;4184:43:::1;;;::::0;-1:-1:-1;;;4184:43:6;;10551:2:7;4184:43:6::1;::::0;::::1;10533:21:7::0;10590:2;10570:18;;;10563:30;-1:-1:-1;;;10609:18:7;;;10602:48;10667:18;;4184:43:6::1;10349:342:7::0;4184:43:6::1;4276:14;::::0;-1:-1:-1;;;;;4276:14:6::1;4240:23;3076:18:2::0;;;;;;;;;;;4310:19:6;4302:54:::1;;;::::0;-1:-1:-1;;;4302:54:6;;10898:2:7;4302:54:6::1;::::0;::::1;10880:21:7::0;10937:2;10917:18;;;10910:30;-1:-1:-1;;;10956:18:7;;;10949:52;11018:18;;4302:54:6::1;10696:346:7::0;4302:54:6::1;4369:13;4385:26;4403:8:::0;4385:15;:26:::1;:::i;:::-;4369:42;;4438:1;4430:5;:9;4422:57;;;::::0;-1:-1:-1;;;4422:57:6;;11471:2:7;4422:57:6::1;::::0;::::1;11453:21:7::0;11510:2;11490:18;;;11483:30;11549:34;11529:18;;;11522:62;-1:-1:-1;;;11600:18:7;;;11593:33;11643:19;;4422:57:6::1;11269:399:7::0;4422:57:6::1;4497:6;4492:114;4513:8;4509:1;:12;4492:114;;;4557:14;::::0;4573:10:::1;:13:::0;;4543:51:::1;::::0;-1:-1:-1;;;;;4557:14:6::1;::::0;4573:10;4584:1;;4573:13;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;4573:13:6::1;4588:5:::0;4543:13:::1;:51::i;:::-;4523:3;::::0;::::1;:::i;:::-;;;4492:114;;;;4051:562;;;3996:617::o:0;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;-1:-1:-1;;;;;3638:18:2;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:2;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:2;;-1:-1:-1;;;;;11893:32:7;;10668:60:2;;;11875:51:7;11942:18;;;11935:34;;;11985:18;;;11978:34;;;11848:18;;10668:60:2;11673:345:7;10613:130:2;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;5374:300::-;-1:-1:-1;;;;;5457:18:2;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:2;;5525:1;5498:30;;;3779:51:7;3752:18;;5498:30:2;3633:203:7;5453:86:2;-1:-1:-1;;;;;5552:16:2;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:2;;5620:1;5591:32;;;3779:51:7;3752:18;;5591:32:2;3633:203:7;5548:86:2;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;3779:51:7;3752:18;;1901:40:0;3633:203:7;1919:480:6;1984:4;-1:-1:-1;;;;;2008:25:6;;2000:57;;;;-1:-1:-1;;;2000:57:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;2076:31:6;;;;;;:18;:31;;;;;;;;:40;2068:86;;;;-1:-1:-1;;;2068:86:6;;12225:2:7;2068:86:6;;;12207:21:7;12264:2;12244:18;;;12237:30;12303:34;12283:18;;;12276:62;-1:-1:-1;;;12354:18:7;;;12347:31;12395:19;;2068:86:6;12023:397:7;2068:86:6;2170:6;2165:116;2186:10;:17;2182:21;;2165:116;;;2244:11;-1:-1:-1;;;;;2227:28:6;:10;2238:1;2227:13;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2227:13:6;:28;2224:45;;-1:-1:-1;2264:5:6;;1919:480;-1:-1:-1;;1919:480:6:o;2224:45::-;2205:3;;;:::i;:::-;;;2165:116;;;-1:-1:-1;;1135:10:6;:25;;;;;;;;;;;;;-1:-1:-1;;;;;;1135:25:6;-1:-1:-1;;;;;1135:25:6;;;;;;;;;-1:-1:-1;2331:31:6;;;:18;:31;;;;;;:38;;-1:-1:-1;;2331:38:6;;;;;1135:25;1919:480::o;7965:206:2:-;-1:-1:-1;;;;;8035:21:2;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:2;;8106:1;8079:30;;;3779:51:7;3752:18;;8079:30:2;3633:203:7;8031:89:2;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2964:440:6:-;3031:4;-1:-1:-1;;;;;3055:25:6;;3047:57;;;;-1:-1:-1;;;3047:57:6;;;;;;;:::i;:::-;3120:8;3115:259;3138:10;:17;3134:21;;;;3115:259;;;3208:11;-1:-1:-1;;;;;3191:28:6;:10;3202:1;3191:13;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;3191:13:6;:28;3187:176;;3240:20;3258:1;3240:17;:20::i;:::-;-1:-1:-1;;;;;;;3279:31:6;;;;;:18;:31;;;;;:38;;-1:-1:-1;;3279:38:6;3313:4;3279:38;;;;;;3313:4;2964:440::o;3187:176::-;3157:3;;;:::i;:::-;;;3115:259;;;-1:-1:-1;3391:5:6;;2964:440;-1:-1:-1;;2964:440:6:o;5989:1107:2:-;-1:-1:-1;;;;;6078:18:2;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:2;;-1:-1:-1;6074:540:2;;-1:-1:-1;;;;;6288:15:2;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:2;;-1:-1:-1;;;;;11893:32:7;;6367:50:2;;;11875:51:7;11942:18;;;11935:34;;;11985:18;;;11978:34;;;11848:18;;6367:50:2;11673:345:7;6317:115:2;-1:-1:-1;;;;;6552:15:2;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:2;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:2;7073:4;-1:-1:-1;;;;;7064:25:2;;7083:5;7064:25;;;;1442::7;;1430:2;1415:18;;1296:177;7064:25:2;;;;;;;;5989:1107;;;:::o;9682:432::-;-1:-1:-1;;;;;9794:19:2;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:2;;9865:1;9836:32;;;3779:51:7;3752:18;;9836:32:2;3633:203:7;9790:89:2;-1:-1:-1;;;;;9892:21:2;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:2;;9964:1;9936:31;;;3779:51:7;3752:18;;9936:31:2;3633:203:7;9888:90:2;-1:-1:-1;;;;;9987:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:2;10075:5;-1:-1:-1;;;;;10066:31:2;;10091:5;10066:31;;;;1442:25:7;;1430:2;1415:18;;1296:177;10066:31:2;;;;;;;;9682:432;;;;:::o;4718:811:6:-;-1:-1:-1;;;;;4809:24:6;;;;;;:18;:24;;;;;;;;;:50;;-1:-1:-1;;;;;;4837:22:6;;;;;;:18;:22;;;;;;;;4809:50;:69;;;-1:-1:-1;4863:10:6;;:15;4809:69;4805:717;;;4895:30;4909:4;4915:2;4919:5;4895:13;:30::i;4805:717::-;4958:11;4995:4;4981:10;;4973:5;:18;;;;:::i;:::-;4972:27;;;;:::i;:::-;4958:41;-1:-1:-1;5014:22:6;5039:11;4958:41;5039:5;:11;:::i;:::-;5081:10;:17;5014:36;;-1:-1:-1;5065:13:6;;5081:22;;:52;;5132:1;5081:52;;;5112:10;:17;5106:23;;:3;:23;:::i;:::-;5183:10;:17;5065:68;;-1:-1:-1;5148:17:6;;5175:25;;5065:68;5175:25;:::i;:::-;5168:33;;:3;:33;:::i;:::-;5148:53;;5223:6;5218:121;5239:10;:17;5235:21;;5218:121;;;5282:41;5296:4;5302:10;5313:1;5302:13;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5302:13:6;5317:5;5282:13;:41::i;:::-;5258:3;;;:::i;:::-;;;5218:121;;;-1:-1:-1;5359:13:6;;5355:100;;5413:14;;5393:46;;5407:4;;-1:-1:-1;;;;;5413:14:6;5429:9;5393:13;:46::i;:::-;5471:39;5485:4;5491:2;5495:14;5471:13;:39::i;:::-;4943:579;;;;4718:811;;;:::o;1176:151::-;1259:10;1270:17;;:21;;1290:1;;1270:21;:::i;:::-;1259:33;;;;;;;;:::i;:::-;;;;;;;;;;;1238:10;:18;;-1:-1:-1;;;;;1259:33:6;;;;1238:18;;;;;;;;;;:::i;:::-;;;;;;;;;:54;;;;;-1:-1:-1;;;;;1238:54:6;;;;;-1:-1:-1;;;;;1238:54:6;;;;;;1303:10;:16;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1303:16:6;;;;;-1:-1:-1;;;;;;1303:16:6;;;;;;-1:-1:-1;1176:151:6:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:423:7:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;667:173::-;735:20;;-1:-1:-1;;;;;784:31:7;;774:42;;764:70;;830:1;827;820:12;845:254;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:7:o;1478:328::-;1555:6;1563;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1796:2;1785:9;1781:18;1768:32;1758:42;;1478:328;;;;;:::o;2000:127::-;2061:10;2056:3;2052:20;2049:1;2042:31;2092:4;2089:1;2082:15;2116:4;2113:1;2106:15;2132:719;2175:5;2228:3;2221:4;2213:6;2209:17;2205:27;2195:55;;2246:1;2243;2236:12;2195:55;2282:6;2269:20;2308:18;2345:2;2341;2338:10;2335:36;;;2351:18;;:::i;:::-;2426:2;2420:9;2394:2;2480:13;;-1:-1:-1;;2476:22:7;;;2500:2;2472:31;2468:40;2456:53;;;2524:18;;;2544:22;;;2521:46;2518:72;;;2570:18;;:::i;:::-;2610:10;2606:2;2599:22;2645:2;2637:6;2630:18;2691:3;2684:4;2679:2;2671:6;2667:15;2663:26;2660:35;2657:55;;;2708:1;2705;2698:12;2657:55;2772:2;2765:4;2757:6;2753:17;2746:4;2738:6;2734:17;2721:54;2819:1;2812:4;2807:2;2799:6;2795:15;2791:26;2784:37;2839:6;2830:15;;;;;;2132:719;;;;:::o;2856:396::-;2934:6;2942;2995:2;2983:9;2974:7;2970:23;2966:32;2963:52;;;3011:1;3008;3001:12;2963:52;3051:9;3038:23;3084:18;3076:6;3073:30;3070:50;;;3116:1;3113;3106:12;3070:50;3139;3181:7;3172:6;3161:9;3157:22;3139:50;:::i;:::-;3129:60;;;3208:38;3242:2;3231:9;3227:18;3208:38;:::i;:::-;3198:48;;2856:396;;;;;:::o;3257:180::-;3316:6;3369:2;3357:9;3348:7;3344:23;3340:32;3337:52;;;3385:1;3382;3375:12;3337:52;-1:-1:-1;3408:23:7;;3257:180;-1:-1:-1;3257:180:7:o;3442:186::-;3501:6;3554:2;3542:9;3533:7;3529:23;3525:32;3522:52;;;3570:1;3567;3560:12;3522:52;3593:29;3612:9;3593:29;:::i;3841:322::-;3910:6;3963:2;3951:9;3942:7;3938:23;3934:32;3931:52;;;3979:1;3976;3969:12;3931:52;4019:9;4006:23;4052:18;4044:6;4041:30;4038:50;;;4084:1;4081;4074:12;4038:50;4107;4149:7;4140:6;4129:9;4125:22;4107:50;:::i;:::-;4097:60;3841:322;-1:-1:-1;;;;3841:322:7:o;4168:260::-;4236:6;4244;4297:2;4285:9;4276:7;4272:23;4268:32;4265:52;;;4313:1;4310;4303:12;4265:52;4336:29;4355:9;4336:29;:::i;:::-;4326:39;;4384:38;4418:2;4407:9;4403:18;4384:38;:::i;4433:347::-;4498:6;4506;4559:2;4547:9;4538:7;4534:23;4530:32;4527:52;;;4575:1;4572;4565:12;4527:52;4598:29;4617:9;4598:29;:::i;:::-;4588:39;;4677:2;4666:9;4662:18;4649:32;4724:5;4717:13;4710:21;4703:5;4700:32;4690:60;;4746:1;4743;4736:12;4690:60;4769:5;4759:15;;;4433:347;;;;;:::o;4785:380::-;4864:1;4860:12;;;;4907;;;4928:61;;4982:4;4974:6;4970:17;4960:27;;4928:61;5035:2;5027:6;5024:14;5004:18;5001:38;4998:161;;5081:10;5076:3;5072:20;5069:1;5062:31;5116:4;5113:1;5106:15;5144:4;5141:1;5134:15;4998:161;;4785:380;;;:::o;5170:343::-;5372:2;5354:21;;;5411:2;5391:18;;;5384:30;-1:-1:-1;;;5445:2:7;5430:18;;5423:49;5504:2;5489:18;;5170:343::o;5518:127::-;5579:10;5574:3;5570:20;5567:1;5560:31;5610:4;5607:1;5600:15;5634:4;5631:1;5624:15;5779:844;5909:3;5938:1;5971:6;5965:13;6001:36;6027:9;6001:36;:::i;:::-;6056:1;6073:18;;;6100:133;;;;6247:1;6242:356;;;;6066:532;;6100:133;-1:-1:-1;;6133:24:7;;6121:37;;6206:14;;6199:22;6187:35;;6178:45;;;-1:-1:-1;6100:133:7;;6242:356;6273:6;6270:1;6263:17;6303:4;6348:2;6345:1;6335:16;6373:1;6387:165;6401:6;6398:1;6395:13;6387:165;;;6479:14;;6466:11;;;6459:35;6522:16;;;;6416:10;;6387:165;;;6391:3;;;6581:6;6576:3;6572:16;6565:23;;6066:532;-1:-1:-1;6614:3:7;;5779:844;-1:-1:-1;;;;;;5779:844:7:o;6628:127::-;6689:10;6684:3;6680:20;6677:1;6670:31;6720:4;6717:1;6710:15;6744:4;6741:1;6734:15;6760:135;6799:3;6820:17;;;6817:43;;6840:18;;:::i;:::-;-1:-1:-1;6887:1:7;6876:13;;6760:135::o;6900:545::-;7002:2;6997:3;6994:11;6991:448;;;7038:1;7063:5;7059:2;7052:17;7108:4;7104:2;7094:19;7178:2;7166:10;7162:19;7159:1;7155:27;7149:4;7145:38;7214:4;7202:10;7199:20;7196:47;;;-1:-1:-1;7237:4:7;7196:47;7292:2;7287:3;7283:12;7280:1;7276:20;7270:4;7266:31;7256:41;;7347:82;7365:2;7358:5;7355:13;7347:82;;;7410:17;;;7391:1;7380:13;7347:82;;;7351:3;;;6900:545;;;:::o;7621:1355::-;7747:3;7741:10;7774:18;7766:6;7763:30;7760:56;;;7796:18;;:::i;:::-;7825:97;7915:6;7875:38;7907:4;7901:11;7875:38;:::i;:::-;7869:4;7825:97;:::i;:::-;7977:4;;8041:2;8030:14;;8058:1;8053:666;;;;8763:1;8780:6;8777:89;;;-1:-1:-1;8832:19:7;;;8826:26;8777:89;-1:-1:-1;;7578:1:7;7574:11;;;7570:24;7566:29;7556:40;7602:1;7598:11;;;7553:57;8879:81;;8023:947;;8053:666;5726:1;5719:14;;;5763:4;5750:18;;-1:-1:-1;;8089:20:7;;;8210:236;8224:7;8221:1;8218:14;8210:236;;;8313:19;;;8307:26;8292:42;;8405:27;;;;8373:1;8361:14;;;;8240:19;;8210:236;;;8214:3;8474:6;8465:7;8462:19;8459:201;;;8535:19;;;8529:26;-1:-1:-1;;8618:1:7;8614:14;;;8630:3;8610:24;8606:37;8602:42;8587:58;8572:74;;8459:201;-1:-1:-1;;;;;8706:1:7;8690:14;;;8686:22;8673:36;;-1:-1:-1;7621:1355:7:o;8981:317::-;9158:2;9147:9;9140:21;9121:4;9178:45;9219:2;9208:9;9204:18;9196:6;9178:45;:::i;:::-;9170:53;;9288:1;9284;9279:3;9275:11;9271:19;9263:6;9259:32;9254:2;9243:9;9239:18;9232:60;8981:317;;;;;:::o;11047:217::-;11087:1;11113;11103:132;;11157:10;11152:3;11148:20;11145:1;11138:31;11192:4;11189:1;11182:15;11220:4;11217:1;11210:15;11103:132;-1:-1:-1;11249:9:7;;11047:217::o;12425:201::-;12463:3;12491:10;12536:2;12529:5;12525:14;12563:2;12554:7;12551:15;12548:41;;12569:18;;:::i;:::-;12618:1;12605:15;;12425:201;-1:-1:-1;;;12425:201:7:o;12631:125::-;12696:9;;;12717:10;;;12714:36;;;12730:18;;:::i;12761:168::-;12834:9;;;12865;;12882:15;;;12876:22;;12862:37;12852:71;;12903:18;;:::i;12934:128::-;13001:9;;;13022:11;;;13019:37;;;13036:18;;:::i;13067:127::-;13128:10;13123:3;13119:20;13116:1;13109:31;13159:4;13156:1;13149:15;13183:4;13180:1;13173:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1247200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24758",
								"balanceOf(address)": "2648",
								"burn(uint256)": "57528",
								"decimals()": "288",
								"distributeTreasuryToNGOs()": "infinite",
								"excludeFromFee(address,bool)": "26943",
								"feePercent()": "2361",
								"isExcludedFromFee(address)": "2635",
								"name()": "infinite",
								"ngoNames(address)": "infinite",
								"ngoWallets(uint256)": "4656",
								"owner()": "2419",
								"registerNGO(string,address)": "infinite",
								"renounceOwnership()": "infinite",
								"setFeePercent(uint256)": "24535",
								"setTreasuryWallet(address)": "79729",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443",
								"treasuryWallet()": "2403",
								"unregisterNGO(string)": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite",
								"popFromNGOWallets(uint32)": "81510",
								"pushToNGOWallets(address)": "infinite",
								"registerNGOWallet(address)": "infinite",
								"unregisterNGOWallet(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 5532,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 5532,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 5532,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 266,
									"end": 267,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 238,
									"end": 267,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 238,
									"end": 267,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 479,
									"end": 685,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 479,
									"end": 685,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 479,
									"end": 685,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 479,
									"end": 685,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 479,
									"end": 685,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 479,
									"end": 685,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 685,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 479,
									"end": 685,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 479,
									"end": 685,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 479,
									"end": 685,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 479,
									"end": 685,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 218,
									"end": 228,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "243AB6A0B4B23B19"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "484D4D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2881,
									"end": 2932,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2854,
									"end": 2872,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2854,
									"end": 2872,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 548,
									"end": 558,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 529,
									"end": 559,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 529,
									"end": 559,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 529,
									"end": 559,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 529,
									"end": 559,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 529,
									"end": 547,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 529,
									"end": 559,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 529,
									"end": 559,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 529,
									"end": 559,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 529,
									"end": 559,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 529,
									"end": 559,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 529,
									"end": 566,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 529,
									"end": 566,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 529,
									"end": 566,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 562,
									"end": 566,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 529,
									"end": 566,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 529,
									"end": 566,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 529,
									"end": 566,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 626,
									"end": 677,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 626,
									"end": 677,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 666,
									"end": 676,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 666,
									"end": 676,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 666,
									"end": 676,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 660,
									"end": 676,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 660,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 660,
									"end": 662,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 660,
									"end": 676,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 660,
									"end": 676,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 660,
									"end": 676,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 660,
									"end": 676,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 644,
									"end": 676,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 644,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 644,
									"end": 657,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "3B9ACA00"
								},
								{
									"begin": 644,
									"end": 676,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 644,
									"end": 676,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 644,
									"end": 676,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 644,
									"end": 676,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 626,
									"end": 631,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 626,
									"end": 677,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 626,
									"end": 677,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 626,
									"end": 677,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 5532,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 174,
									"end": 5532,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2881,
									"end": 2932,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2854,
									"end": 2872,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2854,
									"end": 2872,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2735,
									"end": 2938,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4718,
									"end": 5529,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 4718,
									"end": 5529,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4827,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4859,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 4809,
									"end": 4859,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4837,
									"end": 4859,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4837,
									"end": 4859,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4837,
									"end": 4859,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4837,
									"end": 4859,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4837,
									"end": 4859,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4837,
									"end": 4859,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4837,
									"end": 4855,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 4837,
									"end": 4859,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4837,
									"end": 4859,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4837,
									"end": 4859,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4837,
									"end": 4859,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4837,
									"end": 4859,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4837,
									"end": 4859,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4837,
									"end": 4859,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 4837,
									"end": 4859,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4859,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 4809,
									"end": 4859,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4878,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4878,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4809,
									"end": 4878,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4863,
									"end": 4873,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 4863,
									"end": 4873,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4863,
									"end": 4878,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4878,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4809,
									"end": 4878,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4805,
									"end": 5522,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4805,
									"end": 5522,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4805,
									"end": 5522,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4895,
									"end": 4925,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 4909,
									"end": 4913,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4915,
									"end": 4917,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4919,
									"end": 4924,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4895,
									"end": 4908,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 4895,
									"end": 4925,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4895,
									"end": 4925,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 4895,
									"end": 4925,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4718,
									"end": 5529,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4718,
									"end": 5529,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4718,
									"end": 5529,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4718,
									"end": 5529,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4805,
									"end": 5522,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4805,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4958,
									"end": 4969,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4995,
									"end": 4999,
									"name": "PUSH",
									"source": 6,
									"value": "3E8"
								},
								{
									"begin": 4981,
									"end": 4991,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 4981,
									"end": 4991,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 4978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 4973,
									"end": 4991,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4972,
									"end": 4999,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4972,
									"end": 4999,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4972,
									"end": 4999,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4972,
									"end": 4999,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 4972,
									"end": 4999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4972,
									"end": 4999,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4972,
									"end": 4999,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4958,
									"end": 4999,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5014,
									"end": 5036,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5039,
									"end": 5050,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 4958,
									"end": 4999,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5039,
									"end": 5044,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5039,
									"end": 5050,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 5039,
									"end": 5050,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5039,
									"end": 5050,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 5039,
									"end": 5050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5081,
									"end": 5091,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5081,
									"end": 5098,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5014,
									"end": 5050,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5014,
									"end": 5050,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5065,
									"end": 5078,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5065,
									"end": 5078,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5081,
									"end": 5103,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5081,
									"end": 5103,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5081,
									"end": 5133,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5081,
									"end": 5133,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5132,
									"end": 5133,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5081,
									"end": 5133,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 5081,
									"end": 5133,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5081,
									"end": 5133,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5081,
									"end": 5133,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5112,
									"end": 5122,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5112,
									"end": 5129,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5106,
									"end": 5129,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 5106,
									"end": 5129,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5106,
									"end": 5109,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5106,
									"end": 5129,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 5106,
									"end": 5129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5106,
									"end": 5129,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 5106,
									"end": 5129,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5183,
									"end": 5193,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5183,
									"end": 5200,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5065,
									"end": 5133,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5065,
									"end": 5133,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5148,
									"end": 5165,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5148,
									"end": 5165,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5175,
									"end": 5200,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 5175,
									"end": 5200,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5065,
									"end": 5133,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5175,
									"end": 5200,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 5175,
									"end": 5200,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5175,
									"end": 5200,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 5175,
									"end": 5200,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5168,
									"end": 5201,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 5168,
									"end": 5201,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5168,
									"end": 5171,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5168,
									"end": 5201,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 5168,
									"end": 5201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5168,
									"end": 5201,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 5168,
									"end": 5201,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5148,
									"end": 5201,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5148,
									"end": 5201,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5223,
									"end": 5229,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5218,
									"end": 5339,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 5218,
									"end": 5339,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5239,
									"end": 5249,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5239,
									"end": 5256,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5235,
									"end": 5256,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5235,
									"end": 5256,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5218,
									"end": 5339,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5218,
									"end": 5339,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 5218,
									"end": 5339,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5282,
									"end": 5323,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 5296,
									"end": 5300,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5312,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5313,
									"end": 5314,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 5302,
									"end": 5315,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5302,
									"end": 5315,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5317,
									"end": 5322,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5282,
									"end": 5295,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5282,
									"end": 5323,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5282,
									"end": 5323,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 5282,
									"end": 5323,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5258,
									"end": 5261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 5258,
									"end": 5261,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5258,
									"end": 5261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 5258,
									"end": 5261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5258,
									"end": 5261,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 5258,
									"end": 5261,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5258,
									"end": 5261,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5258,
									"end": 5261,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5218,
									"end": 5339,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 5218,
									"end": 5339,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5218,
									"end": 5339,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 5218,
									"end": 5339,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5359,
									"end": 5372,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5359,
									"end": 5372,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5355,
									"end": 5455,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5355,
									"end": 5455,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5413,
									"end": 5427,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 5413,
									"end": 5427,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5393,
									"end": 5439,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5393,
									"end": 5439,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5407,
									"end": 5411,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 5407,
									"end": 5411,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5413,
									"end": 5427,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5429,
									"end": 5438,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5393,
									"end": 5406,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5393,
									"end": 5439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5393,
									"end": 5439,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5393,
									"end": 5439,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5510,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 5485,
									"end": 5489,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 5491,
									"end": 5493,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 5495,
									"end": 5509,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5484,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5471,
									"end": 5510,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5510,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 5471,
									"end": 5510,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4943,
									"end": 5522,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4943,
									"end": 5522,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4943,
									"end": 5522,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4943,
									"end": 5522,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4718,
									"end": 5529,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4718,
									"end": 5529,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4718,
									"end": 5529,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4718,
									"end": 5529,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5608,
									"end": 5640,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5608,
									"end": 5640,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5590,
									"end": 5641,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5657,
									"end": 5675,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5657,
									"end": 5675,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5657,
									"end": 5675,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5650,
									"end": 5684,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5650,
									"end": 5684,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5650,
									"end": 5684,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5718,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 5700,
									"end": 5718,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5693,
									"end": 5727,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5693,
									"end": 5727,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5693,
									"end": 5727,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5563,
									"end": 5581,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5563,
									"end": 5581,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 5388,
									"end": 5733,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5884,
									"end": 5909,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5884,
									"end": 5909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5872,
									"end": 5874,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5857,
									"end": 5875,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5857,
									"end": 5875,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5738,
									"end": 5915,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2943,
									"end": 3070,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2943,
									"end": 3070,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3004,
									"end": 3014,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 2999,
									"end": 3002,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 2995,
									"end": 3015,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2992,
									"end": 2993,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3016,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3035,
									"end": 3039,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 3032,
									"end": 3033,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3025,
									"end": 3040,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3059,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3056,
									"end": 3057,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3049,
									"end": 3064,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3497,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3075,
									"end": 3497,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3164,
									"end": 3165,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3207,
									"end": 3212,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3164,
									"end": 3165,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3242,
									"end": 3249,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3232,
									"end": 3240,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3229,
									"end": 3250,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3301,
									"end": 3305,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3293,
									"end": 3299,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3289,
									"end": 3306,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3287,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3280,
									"end": 3307,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3277,
									"end": 3330,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3277,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3277,
									"end": 3330,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3310,
									"end": 3328,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3310,
									"end": 3328,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3310,
									"end": 3328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3310,
									"end": 3328,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3310,
									"end": 3328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3360,
									"end": 3367,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3350,
									"end": 3358,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3346,
									"end": 3368,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3343,
									"end": 3398,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3343,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3343,
									"end": 3398,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3396,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3396,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3396,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3396,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3343,
									"end": 3398,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3343,
									"end": 3398,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3459,
									"end": 3481,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3459,
									"end": 3481,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3459,
									"end": 3481,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3459,
									"end": 3481,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3419,
									"end": 3434,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3419,
									"end": 3434,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3419,
									"end": 3434,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3419,
									"end": 3434,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3225,
									"end": 3228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3497,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3497,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3497,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3497,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3497,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3497,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3551,
									"end": 3556,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3581,
									"end": 3589,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3651,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 3571,
									"end": 3651,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3622,
									"end": 3623,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3636,
									"end": 3641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3636,
									"end": 3641,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3651,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 3571,
									"end": 3651,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3670,
									"end": 3674,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3660,
									"end": 3736,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3660,
									"end": 3736,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3707,
									"end": 3708,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3721,
									"end": 3726,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3721,
									"end": 3726,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3660,
									"end": 3736,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3660,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3752,
									"end": 3756,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3770,
									"end": 3771,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3838,
									"end": 3839,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 3963,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 3963,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 3963,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3833,
									"end": 3963,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3745,
									"end": 3963,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3745,
									"end": 3963,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3795,
									"end": 3796,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3786,
									"end": 3796,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3786,
									"end": 3796,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3809,
									"end": 3814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3809,
									"end": 3814,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3809,
									"end": 3814,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 3963,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3833,
									"end": 3963,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3870,
									"end": 3873,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 3860,
									"end": 3868,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3857,
									"end": 3874,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3854,
									"end": 3897,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3854,
									"end": 3897,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 3854,
									"end": 3897,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3877,
									"end": 3895,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 3877,
									"end": 3895,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3877,
									"end": 3895,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3877,
									"end": 3895,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 3877,
									"end": 3895,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3933,
									"end": 3934,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3919,
									"end": 3935,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3919,
									"end": 3935,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3948,
									"end": 3953,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3948,
									"end": 3953,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3745,
									"end": 3963,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3745,
									"end": 3963,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3745,
									"end": 3963,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4047,
									"end": 4049,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4037,
									"end": 4045,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4034,
									"end": 4050,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4028,
									"end": 4031,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4022,
									"end": 4026,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4019,
									"end": 4032,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4015,
									"end": 4051,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4009,
									"end": 4011,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 3999,
									"end": 4007,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3996,
									"end": 4012,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3991,
									"end": 3993,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 3985,
									"end": 3989,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3982,
									"end": 3994,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 4013,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3975,
									"end": 4052,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4131,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3972,
									"end": 4131,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4084,
									"end": 4103,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4084,
									"end": 4103,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4084,
									"end": 4103,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 4116,
									"end": 4121,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 4116,
									"end": 4121,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4131,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3972,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4163,
									"end": 4197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4188,
									"end": 4196,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4182,
									"end": 4186,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4163,
									"end": 4197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4163,
									"end": 4197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4163,
									"end": 4197,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4163,
									"end": 4197,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4233,
									"end": 4239,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4229,
									"end": 4230,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4231,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4221,
									"end": 4240,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4219,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4209,
									"end": 4241,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4206,
									"end": 4264,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4206,
									"end": 4264,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4206,
									"end": 4264,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4244,
									"end": 4262,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4244,
									"end": 4262,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4244,
									"end": 4262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4244,
									"end": 4262,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4244,
									"end": 4262,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4282,
									"end": 4302,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4282,
									"end": 4302,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3502,
									"end": 4308,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4313,
									"end": 4453,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4313,
									"end": 4453,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4371,
									"end": 4376,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4400,
									"end": 4447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4441,
									"end": 4445,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 4431,
									"end": 4439,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4427,
									"end": 4446,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4421,
									"end": 4425,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4400,
									"end": 4447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4400,
									"end": 4447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4400,
									"end": 4447,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4400,
									"end": 4447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4391,
									"end": 4447,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4313,
									"end": 4453,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4313,
									"end": 4453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4458,
									"end": 4626,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4458,
									"end": 4626,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4531,
									"end": 4540,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4531,
									"end": 4540,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4531,
									"end": 4540,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4562,
									"end": 4571,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4562,
									"end": 4571,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4579,
									"end": 4594,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4579,
									"end": 4594,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4579,
									"end": 4594,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4573,
									"end": 4595,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4573,
									"end": 4595,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4559,
									"end": 4596,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4620,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 4549,
									"end": 4620,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4600,
									"end": 4618,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 4600,
									"end": 4618,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4600,
									"end": 4618,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4631,
									"end": 4848,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 4631,
									"end": 4848,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 4672,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4697,
									"end": 4698,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4819,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4687,
									"end": 4819,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4741,
									"end": 4751,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 4736,
									"end": 4739,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 4732,
									"end": 4752,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4729,
									"end": 4730,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4722,
									"end": 4753,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4776,
									"end": 4780,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 4773,
									"end": 4774,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4766,
									"end": 4781,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4801,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4794,
									"end": 4809,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4819,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4687,
									"end": 4819,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4833,
									"end": 4842,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4833,
									"end": 4842,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4631,
									"end": 4848,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4981,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 4853,
									"end": 4981,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4920,
									"end": 4929,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4920,
									"end": 4929,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4920,
									"end": 4929,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4941,
									"end": 4952,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4941,
									"end": 4952,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4941,
									"end": 4952,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4938,
									"end": 4975,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4938,
									"end": 4975,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 4938,
									"end": 4975,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4955,
									"end": 4973,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 4955,
									"end": 4973,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4955,
									"end": 4973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4986,
									"end": 5113,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 4986,
									"end": 5113,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5047,
									"end": 5057,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 5042,
									"end": 5045,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 5038,
									"end": 5058,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 5035,
									"end": 5036,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5028,
									"end": 5059,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5082,
									"name": "PUSH",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 5075,
									"end": 5076,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 5068,
									"end": 5083,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5102,
									"end": 5106,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5099,
									"end": 5100,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5092,
									"end": 5107,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5118,
									"end": 5253,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 5118,
									"end": 5253,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5157,
									"end": 5160,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5178,
									"end": 5195,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5178,
									"end": 5195,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5178,
									"end": 5195,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5175,
									"end": 5218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5175,
									"end": 5218,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5198,
									"end": 5216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5198,
									"end": 5216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 5198,
									"end": 5216,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5198,
									"end": 5216,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5198,
									"end": 5216,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5245,
									"end": 5246,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5234,
									"end": 5247,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5247,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5118,
									"end": 5253,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5258,
									"end": 5383,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 5258,
									"end": 5383,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5323,
									"end": 5332,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5323,
									"end": 5332,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5323,
									"end": 5332,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5344,
									"end": 5354,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5344,
									"end": 5354,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5344,
									"end": 5354,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5341,
									"end": 5377,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5341,
									"end": 5377,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 5341,
									"end": 5377,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5357,
									"end": 5375,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 5357,
									"end": 5375,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 5357,
									"end": 5375,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5738,
									"end": 5915,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 5738,
									"end": 5915,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 174,
									"end": 5532,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 5532,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 5532,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 5532,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 5532,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 5532,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 5532,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203cd7bb4b9efd9274d7b952cf2dd887f2d5bfe42745a5792a1757400782d4203164736f6c63430008140033",
									".code": [
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "7CE3489B"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "AE91470D"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "DF8408FE"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "F9479FFA"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "7CE3489B"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "7D5B6C60"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "7FD6F15C"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "A8602FEA"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "4618F6AC"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "4626402B"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "5342ACB4"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "3539C6B1"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5532,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1269,
											"end": 1283,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1262,
											"end": 1284,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1244,
											"end": 1285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1244,
											"end": 1285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1104,
											"end": 1291,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1432,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1296,
											"end": 1473,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1953,
											"end": 1989,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1989,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 1943,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1811,
											"end": 1995,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2898,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2407,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2407,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2407,
											"end": 2898,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2898,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2407,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2407,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2898,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2407,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2407,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1776,
											"end": 1859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1776,
											"end": 1859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 295,
											"end": 338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 295,
											"end": 338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 441,
											"end": 470,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 441,
											"end": 470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 441,
											"end": 470,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 441,
											"end": 470,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 441,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 441,
											"end": 470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 441,
											"end": 470,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 441,
											"end": 470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 441,
											"end": 470,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 441,
											"end": 470,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 441,
											"end": 470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 441,
											"end": 470,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 470,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3797,
											"end": 3829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3829,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3829,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3779,
											"end": 3830,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3779,
											"end": 3830,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3769,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 441,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3633,
											"end": 3836,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1768,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1642,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1642,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1642,
											"end": 1768,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1768,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1642,
											"end": 1768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1768,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1642,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1733,
											"end": 1760,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1751,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1733,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1733,
											"end": 1760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1760,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1760,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1733,
											"end": 1760,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1768,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1494,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1335,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1335,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1335,
											"end": 1494,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1494,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1335,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1335,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1494,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1335,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1335,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 345,
											"end": 372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 345,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 345,
											"end": 372,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 345,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 345,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 345,
											"end": 372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 345,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 238,
											"end": 267,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 238,
											"end": 267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 238,
											"end": 267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 238,
											"end": 267,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 238,
											"end": 267,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 238,
											"end": 267,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 238,
											"end": 267,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 693,
											"end": 1063,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 693,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 693,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 693,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 693,
											"end": 1063,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 693,
											"end": 1063,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 693,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 693,
											"end": 1063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 693,
											"end": 1063,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 693,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 693,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 693,
											"end": 1063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3412,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3412,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1634,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1502,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1502,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1502,
											"end": 1634,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1634,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1502,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1502,
											"end": 1634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1634,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1502,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1502,
											"end": 1634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4613,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3996,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3996,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3996,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 2898,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2407,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2526,
											"end": 2551,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2518,
											"end": 2575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2518,
											"end": 2575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2748,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2586,
											"end": 2748,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2607,
											"end": 2624,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2624,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2748,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2586,
											"end": 2748,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2722,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2722,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2695,
											"end": 2722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2722,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2666,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2686,
											"end": 2687,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2675,
											"end": 2688,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2675,
											"end": 2688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2675,
											"end": 2688,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2675,
											"end": 2688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2675,
											"end": 2688,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2689,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2691,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2691,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2649,
											"end": 2691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2691,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2649,
											"end": 2691,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2691,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2649,
											"end": 2691,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 2691,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2691,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2691,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2691,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2691,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2691,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2722,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2645,
											"end": 2736,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2731,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2736,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 2736,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 2736,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2724,
											"end": 2736,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2736,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2645,
											"end": 2736,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2626,
											"end": 2629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2626,
											"end": 2629,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2626,
											"end": 2629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2629,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2586,
											"end": 2748,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2748,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2586,
											"end": 2748,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2758,
											"end": 2779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2779,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2779,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2758,
											"end": 2779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2779,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2779,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2782,
											"end": 2790,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2758,
											"end": 2790,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2790,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2758,
											"end": 2790,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2790,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A06DDE3E644F7DA70B4461F791FF2766EBEACD8CAE66B3E6A98637A9DACBD900"
										},
										{
											"begin": 2820,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2841,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2806,
											"end": 2842,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2842,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2860,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2878,
											"end": 2889,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2860,
											"end": 2877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2860,
											"end": 2890,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2860,
											"end": 2890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2860,
											"end": 2890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2898,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2407,
											"end": 2898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1832,
											"end": 1842,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1850,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1826,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 295,
											"end": 338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 295,
											"end": 338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 295,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 295,
											"end": 338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1494,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1335,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1417,
											"end": 1428,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1434,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1434,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1409,
											"end": 1451,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9505,
											"end": 9507,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1409,
											"end": 1451,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1451,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9508,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9544,
											"end": 9546,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 9524,
											"end": 9542,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9524,
											"end": 9542,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9524,
											"end": 9542,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9517,
											"end": 9547,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8CCACA40E8DEDE40D0D2CED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9563,
											"end": 9581,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9563,
											"end": 9581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9563,
											"end": 9581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9556,
											"end": 9598,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9615,
											"end": 9633,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9615,
											"end": 9633,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 9303,
											"end": 9639,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1451,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1409,
											"end": 1451,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1462,
											"end": 1486,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 345,
											"end": 372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 345,
											"end": 372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 345,
											"end": 372,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 345,
											"end": 372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 345,
											"end": 372,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 345,
											"end": 372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 345,
											"end": 372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 693,
											"end": 1063,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 693,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 783,
											"end": 812,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 775,
											"end": 841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 775,
											"end": 841,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 775,
											"end": 841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 775,
											"end": 841,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 775,
											"end": 841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 775,
											"end": 841,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 775,
											"end": 841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 775,
											"end": 841,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 775,
											"end": 841,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9885,
											"end": 9887,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 9865,
											"end": 9883,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9865,
											"end": 9883,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9865,
											"end": 9883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9858,
											"end": 9888,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9924,
											"end": 9950,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420747265617375727920616464726573730000000000000000"
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9897,
											"end": 9951,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9968,
											"end": 9986,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9968,
											"end": 9986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 775,
											"end": 841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 9644,
											"end": 9992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 775,
											"end": 841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 775,
											"end": 841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 858,
											"end": 872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 858,
											"end": 872,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 858,
											"end": 872,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 858,
											"end": 886,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 854,
											"end": 957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 854,
											"end": 957,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 922,
											"end": 936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 922,
											"end": 936,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 922,
											"end": 936,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 940,
											"end": 945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 903,
											"end": 937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 903,
											"end": 937,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 903,
											"end": 921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 903,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 903,
											"end": 937,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 903,
											"end": 937,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 903,
											"end": 937,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 903,
											"end": 945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 903,
											"end": 945,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 903,
											"end": 945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 903,
											"end": 945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 903,
											"end": 945,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 854,
											"end": 957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 854,
											"end": 957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 969,
											"end": 983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 969,
											"end": 1001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 969,
											"end": 1001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 969,
											"end": 1001,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 969,
											"end": 983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1014,
											"end": 1048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1014,
											"end": 1048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1048,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1055,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1014,
											"end": 1055,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 693,
											"end": 1063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3487,
											"end": 3491,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3504,
											"end": 3523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3558,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3547,
											"end": 3782,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3547,
											"end": 3782,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3568,
											"end": 3585,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3585,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3585,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3547,
											"end": 3782,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3547,
											"end": 3782,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3547,
											"end": 3782,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3673,
											"end": 3681,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3683,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3683,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3683,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3656,
											"end": 3683,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3683,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3627,
											"end": 3650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3647,
											"end": 3648,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3636,
											"end": 3649,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3636,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3636,
											"end": 3649,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3636,
											"end": 3649,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3636,
											"end": 3649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3650,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3652,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3610,
											"end": 3652,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3610,
											"end": 3652,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3610,
											"end": 3652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3652,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3652,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3652,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3652,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3652,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3683,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3606,
											"end": 3771,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3729,
											"end": 3730,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3718,
											"end": 3731,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3718,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3718,
											"end": 3731,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3718,
											"end": 3731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3718,
											"end": 3731,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3750,
											"end": 3755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3750,
											"end": 3755,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3771,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3606,
											"end": 3771,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3587,
											"end": 3590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3587,
											"end": 3590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3587,
											"end": 3590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3547,
											"end": 3782,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3547,
											"end": 3782,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3547,
											"end": 3782,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3547,
											"end": 3782,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3796,
											"end": 3821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3821,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3792,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3792,
											"end": 3835,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3830,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3412,
											"end": 3988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3792,
											"end": 3835,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3792,
											"end": 3835,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3855,
											"end": 3876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3876,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3876,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3855,
											"end": 3876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3855,
											"end": 3876,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3876,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3855,
											"end": 3876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3876,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3848,
											"end": 3876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3848,
											"end": 3876,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3876,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3848,
											"end": 3876,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F7CE65B9119570713C55642C7BA09904806C36EC3DA8FA5B1A8AA4A223132C2E"
										},
										{
											"begin": 3908,
											"end": 3916,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 3929,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3892,
											"end": 3930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3930,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 3980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3968,
											"end": 3979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 3967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3948,
											"end": 3980,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 3980,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3948,
											"end": 3980,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3941,
											"end": 3980,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3941,
											"end": 3980,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3941,
											"end": 3980,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1634,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1502,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 1615,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1615,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1615,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1615,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1615,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1615,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1588,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1615,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1615,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1615,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1615,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1626,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 1626,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1626,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1626,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1626,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1626,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3830,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3633,
											"end": 3836,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4613,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3996,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4070,
											"end": 4084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4070,
											"end": 4084,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4070,
											"end": 4084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 4062,
											"end": 4126,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4062,
											"end": 4126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4062,
											"end": 4126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10199,
											"end": 10201,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4062,
											"end": 4126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4062,
											"end": 4126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4126,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10240,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 10218,
											"end": 10236,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10218,
											"end": 10236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10218,
											"end": 10236,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10211,
											"end": 10241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10277,
											"end": 10302,
											"name": "PUSH",
											"source": 7,
											"value": "54726561737572792077616C6C6574206E6F7420736574000000000000000000"
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10303,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10338,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10320,
											"end": 10338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 9997,
											"end": 10344,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4126,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 4062,
											"end": 4126,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4156,
											"end": 4173,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4204,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 4184,
											"end": 4227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4184,
											"end": 4227,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4184,
											"end": 4227,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4227,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10551,
											"end": 10553,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4184,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4184,
											"end": 4227,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10533,
											"end": 10554,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10590,
											"end": 10592,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 10570,
											"end": 10588,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10570,
											"end": 10588,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10570,
											"end": 10588,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10563,
											"end": 10593,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81391D3DCC81C9959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10609,
											"end": 10627,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10609,
											"end": 10627,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10609,
											"end": 10627,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10602,
											"end": 10650,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10685,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10667,
											"end": 10685,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 10349,
											"end": 10691,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 4184,
											"end": 4227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4276,
											"end": 4290,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4276,
											"end": 4290,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4310,
											"end": 4329,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4302,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 4302,
											"end": 4356,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4302,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4302,
											"end": 4356,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4302,
											"end": 4356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10898,
											"end": 10900,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4302,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4302,
											"end": 4356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4302,
											"end": 4356,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10880,
											"end": 10901,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10937,
											"end": 10939,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 10917,
											"end": 10935,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10917,
											"end": 10935,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10917,
											"end": 10935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10910,
											"end": 10940,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F2066756E647320746F2064697374726962757465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10956,
											"end": 10974,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10956,
											"end": 10974,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10956,
											"end": 10974,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10949,
											"end": 11001,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 10696,
											"end": 11042,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 4302,
											"end": 4356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4411,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4403,
											"end": 4411,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4385,
											"end": 4400,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4385,
											"end": 4411,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4385,
											"end": 4411,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4385,
											"end": 4411,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4385,
											"end": 4411,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4411,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4411,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4430,
											"end": 4435,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4430,
											"end": 4439,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4422,
											"end": 4479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4422,
											"end": 4479,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4422,
											"end": 4479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4422,
											"end": 4479,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4422,
											"end": 4479,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4422,
											"end": 4479,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11471,
											"end": 11473,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4422,
											"end": 4479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4422,
											"end": 4479,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4422,
											"end": 4479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11453,
											"end": 11474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11510,
											"end": 11512,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 11490,
											"end": 11508,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11490,
											"end": 11508,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11490,
											"end": 11508,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11483,
											"end": 11513,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11549,
											"end": 11583,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742066756E647320666F7220646973747269627574"
										},
										{
											"begin": 11529,
											"end": 11547,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11529,
											"end": 11547,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11529,
											"end": 11547,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11522,
											"end": 11584,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11600,
											"end": 11618,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11600,
											"end": 11618,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11600,
											"end": 11618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11593,
											"end": 11626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11643,
											"end": 11662,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 11643,
											"end": 11662,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4422,
											"end": 4479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 11269,
											"end": 11668,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4422,
											"end": 4479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4422,
											"end": 4479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4606,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 4492,
											"end": 4606,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4521,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4509,
											"end": 4510,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4509,
											"end": 4521,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4606,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 4492,
											"end": 4606,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4557,
											"end": 4571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4557,
											"end": 4571,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4573,
											"end": 4586,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4586,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4594,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 4543,
											"end": 4594,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4557,
											"end": 4571,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4557,
											"end": 4571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4585,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4586,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4573,
											"end": 4586,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4573,
											"end": 4586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4573,
											"end": 4586,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4573,
											"end": 4586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4573,
											"end": 4586,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4586,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4586,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4573,
											"end": 4586,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4586,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4586,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4586,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4573,
											"end": 4586,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4588,
											"end": 4593,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4543,
											"end": 4594,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4594,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 4543,
											"end": 4594,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 4523,
											"end": 4526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 4523,
											"end": 4526,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4526,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 4523,
											"end": 4526,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4526,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4526,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 4492,
											"end": 4606,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4606,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 4492,
											"end": 4606,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4606,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4613,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4613,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4613,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11893,
											"end": 11925,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11893,
											"end": 11925,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11875,
											"end": 11926,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11942,
											"end": 11960,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11942,
											"end": 11960,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11942,
											"end": 11960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11969,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11969,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11985,
											"end": 12003,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11985,
											"end": 12003,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11985,
											"end": 12003,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11978,
											"end": 12012,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11978,
											"end": 12012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11978,
											"end": 12012,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11848,
											"end": 11866,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11848,
											"end": 11866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 11673,
											"end": 12018,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3779,
											"end": 3830,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3633,
											"end": 3836,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3779,
											"end": 3830,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3633,
											"end": 3836,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3830,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3633,
											"end": 3836,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 2399,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1919,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1984,
											"end": 1988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 2000,
											"end": 2057,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2057,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2057,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2057,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2057,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2000,
											"end": 2057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2000,
											"end": 2057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2000,
											"end": 2057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2057,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 2000,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2076,
											"end": 2107,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2107,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2107,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2094,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2076,
											"end": 2107,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2107,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2076,
											"end": 2107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2107,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2107,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2107,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2076,
											"end": 2107,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2116,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 2068,
											"end": 2154,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2154,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2068,
											"end": 2154,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2068,
											"end": 2154,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2154,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12225,
											"end": 12227,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2068,
											"end": 2154,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2068,
											"end": 2154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12207,
											"end": 12228,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12264,
											"end": 12266,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 12244,
											"end": 12262,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12244,
											"end": 12262,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12244,
											"end": 12262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12237,
											"end": 12267,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12303,
											"end": 12337,
											"name": "PUSH",
											"source": 7,
											"value": "546869732077616C6C657420697320616C726561647920726567697374657265"
										},
										{
											"begin": 12283,
											"end": 12301,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 12283,
											"end": 12301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12283,
											"end": 12301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12276,
											"end": 12338,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12354,
											"end": 12372,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12354,
											"end": 12372,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12354,
											"end": 12372,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12347,
											"end": 12378,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12414,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 12395,
											"end": 12414,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 12023,
											"end": 12420,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2154,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 2068,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 2165,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2196,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2186,
											"end": 2203,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2203,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2281,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 2165,
											"end": 2281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2255,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2237,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2238,
											"end": 2239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2227,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2255,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2264,
											"end": 2269,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2269,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 2399,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 2224,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 2205,
											"end": 2208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2205,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2208,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 2205,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 2165,
											"end": 2281,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 2165,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1135,
											"end": 1145,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "PUSH",
											"source": 6,
											"value": "F3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2349,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 2399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3779,
											"end": 3830,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3633,
											"end": 3836,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 3404,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2964,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3055,
											"end": 3080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 3047,
											"end": 3104,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3104,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3047,
											"end": 3104,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3047,
											"end": 3104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3104,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3104,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3047,
											"end": 3104,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3047,
											"end": 3104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3047,
											"end": 3104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3104,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 3047,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3120,
											"end": 3128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3115,
											"end": 3374,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 3115,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3138,
											"end": 3155,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3155,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3134,
											"end": 3155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3155,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3155,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3374,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 3115,
											"end": 3374,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3219,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3219,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3202,
											"end": 3203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3191,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3219,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 3187,
											"end": 3363,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3258,
											"end": 3259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 3240,
											"end": 3260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3260,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3240,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3297,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3317,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3317,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3317,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3279,
											"end": 3317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3317,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3317,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3317,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 3404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3363,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 3187,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3157,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 3157,
											"end": 3160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3157,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 3157,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3157,
											"end": 3160,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 3157,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3157,
											"end": 3160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3157,
											"end": 3160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 3115,
											"end": 3374,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3374,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 3115,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3391,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3396,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 3404,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2964,
											"end": 3404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11893,
											"end": 11925,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11893,
											"end": 11925,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11875,
											"end": 11926,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11942,
											"end": 11960,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11942,
											"end": 11960,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11942,
											"end": 11960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11969,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11969,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11985,
											"end": 12003,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11985,
											"end": 12003,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11985,
											"end": 12003,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11978,
											"end": 12012,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11978,
											"end": 12012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11978,
											"end": 12012,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11848,
											"end": 11866,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11848,
											"end": 11866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 11673,
											"end": 12018,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1432,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1473,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3779,
											"end": 3830,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3633,
											"end": 3836,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3779,
											"end": 3830,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3633,
											"end": 3836,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1432,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1473,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4718,
											"end": 5529,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 4718,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4809,
											"end": 4833,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4833,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4809,
											"end": 4833,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4809,
											"end": 4833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4833,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4809,
											"end": 4833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4833,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4833,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4833,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4809,
											"end": 4833,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4833,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 4809,
											"end": 4859,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4855,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4859,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 4809,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 4809,
											"end": 4878,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4863,
											"end": 4873,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4863,
											"end": 4873,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4863,
											"end": 4878,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4878,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 4809,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 5522,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 4805,
											"end": 5522,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 4909,
											"end": 4913,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4917,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 4924,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4895,
											"end": 4925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 5522,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 4805,
											"end": 5522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4958,
											"end": 4969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 4999,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 4981,
											"end": 4991,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4981,
											"end": 4991,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4978,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 4973,
											"end": 4991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4972,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 4972,
											"end": 4999,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4972,
											"end": 4999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4972,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4972,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4972,
											"end": 4999,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 4972,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4958,
											"end": 4999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5014,
											"end": 5036,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 4958,
											"end": 4999,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5044,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 5039,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5050,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 5039,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5081,
											"end": 5098,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5050,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5065,
											"end": 5078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5065,
											"end": 5078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5103,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5103,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 5081,
											"end": 5133,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5081,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 5081,
											"end": 5133,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5133,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 5081,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5122,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5106,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 5106,
											"end": 5129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5106,
											"end": 5109,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5106,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 5106,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5106,
											"end": 5129,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 5106,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5183,
											"end": 5193,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5183,
											"end": 5200,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5065,
											"end": 5133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5065,
											"end": 5133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5148,
											"end": 5165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5148,
											"end": 5165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5175,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 5175,
											"end": 5200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5065,
											"end": 5133,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5175,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 5175,
											"end": 5200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5175,
											"end": 5200,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 5175,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 5168,
											"end": 5201,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5171,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 5168,
											"end": 5201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5201,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 5168,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5201,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5223,
											"end": 5229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5339,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 5218,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5239,
											"end": 5249,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5239,
											"end": 5256,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5235,
											"end": 5256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5235,
											"end": 5256,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5339,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 5218,
											"end": 5339,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 5296,
											"end": 5300,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5312,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5313,
											"end": 5314,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5302,
											"end": 5315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5317,
											"end": 5322,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5282,
											"end": 5323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5323,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 5282,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 5258,
											"end": 5261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5258,
											"end": 5261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5261,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 5258,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 5218,
											"end": 5339,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5339,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 5218,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5359,
											"end": 5372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5359,
											"end": 5372,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 5355,
											"end": 5455,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5413,
											"end": 5427,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5413,
											"end": 5427,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 5393,
											"end": 5439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5411,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5413,
											"end": 5427,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5438,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5393,
											"end": 5439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5439,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 5393,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 5485,
											"end": 5489,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5491,
											"end": 5493,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5495,
											"end": 5509,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5471,
											"end": 5510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5510,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 5471,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 5522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 5522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 5522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 5522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1327,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 1176,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 1270,
											"end": 1291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 1270,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1291,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 1270,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1259,
											"end": 1292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1292,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1238,
											"end": 1256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1292,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 1303,
											"end": 1319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1176,
											"end": 1327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "225"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "125"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "385"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "385"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "169"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "388"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "389"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "388"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "389"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 437,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 14,
											"end": 437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 56,
											"end": 59,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 99,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 88,
											"end": 100,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 121,
											"end": 127,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 116,
											"end": 119,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 109,
											"end": 128,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 146,
											"end": 147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 170,
											"end": 176,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 167,
											"end": 168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 164,
											"end": 177,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 156,
											"end": 318,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 156,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 236,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 288,
											"end": 301,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 288,
											"end": 301,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 288,
											"end": 301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 284,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 284,
											"end": 306,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 278,
											"end": 307,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 260,
											"end": 271,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 260,
											"end": 271,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 260,
											"end": 271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 256,
											"end": 276,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 256,
											"end": 276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 249,
											"end": 308,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 185,
											"end": 197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 156,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 156,
											"end": 318,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 160,
											"end": 163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 363,
											"end": 364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 347,
											"end": 353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 342,
											"end": 345,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 338,
											"end": 354,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 334,
											"end": 361,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 327,
											"end": 365,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 426,
											"end": 430,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 419,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 415,
											"end": 422,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 412,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 398,
											"end": 413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 394,
											"end": 423,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 392,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 385,
											"end": 424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 381,
											"end": 431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 431,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 437,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 437,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 662,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 442,
											"end": 662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 593,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 589,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 573,
											"end": 594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 554,
											"end": 558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 652,
											"end": 654,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 637,
											"end": 655,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 611,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 611,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 667,
											"end": 840,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 667,
											"end": 840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 755,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 735,
											"end": 755,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 784,
											"end": 815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 784,
											"end": 815,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 774,
											"end": 816,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 774,
											"end": 816,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 764,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 764,
											"end": 834,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 828,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 820,
											"end": 832,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 845,
											"end": 1099,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 845,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 913,
											"end": 919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 921,
											"end": 927,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 971,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 949,
											"end": 972,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 945,
											"end": 977,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 942,
											"end": 994,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 942,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 942,
											"end": 994,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 990,
											"end": 991,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 988,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 980,
											"end": 992,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 942,
											"end": 994,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 942,
											"end": 994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 1032,
											"end": 1041,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 1013,
											"end": 1042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1042,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 845,
											"end": 1099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1561,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1626,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1612,
											"end": 1621,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1603,
											"end": 1610,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1622,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1595,
											"end": 1627,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1642,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 1682,
											"end": 1691,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 1663,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1692,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 1711,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1749,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1785,
											"end": 1794,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1768,
											"end": 1800,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1758,
											"end": 1800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1758,
											"end": 1800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2127,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 2000,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2061,
											"end": 2071,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2056,
											"end": 2059,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2052,
											"end": 2072,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2049,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2092,
											"end": 2096,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2089,
											"end": 2090,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2113,
											"end": 2114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 2132,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2231,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2225,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2213,
											"end": 2219,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2232,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 2195,
											"end": 2250,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2247,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2244,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2248,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2250,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 2195,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2289,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2348,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2351,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 2351,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 2351,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2351,
											"end": 2369,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 2351,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2428,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2429,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2396,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2480,
											"end": 2493,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2476,
											"end": 2498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2498,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2498,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2502,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 2472,
											"end": 2503,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2509,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2509,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2542,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2542,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2542,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2566,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2566,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2566,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 2518,
											"end": 2590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 2570,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2645,
											"end": 2647,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2637,
											"end": 2643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2630,
											"end": 2648,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2694,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2688,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2671,
											"end": 2677,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2695,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2712,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 2657,
											"end": 2712,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2706,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2710,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2712,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 2657,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2774,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2765,
											"end": 2769,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2763,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2753,
											"end": 2770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2750,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2744,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2734,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2775,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 2819,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2816,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2807,
											"end": 2809,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2805,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2810,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 2821,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2845,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2845,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2851,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2856,
											"end": 3252,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2856,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2934,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2948,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2995,
											"end": 2997,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 2992,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 2981,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 2993,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 2998,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2963,
											"end": 3015,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2963,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 2963,
											"end": 3015,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3001,
											"end": 3013,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2963,
											"end": 3015,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 2963,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3060,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3038,
											"end": 3061,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3102,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3073,
											"end": 3103,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3120,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 3070,
											"end": 3120,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3106,
											"end": 3118,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3120,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 3070,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 3181,
											"end": 3188,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3170,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3179,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 3139,
											"end": 3189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3189,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 3139,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3189,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 3242,
											"end": 3244,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3231,
											"end": 3240,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 3208,
											"end": 3246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3246,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 3208,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3246,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3246,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2856,
											"end": 3252,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2856,
											"end": 3252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2856,
											"end": 3252,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2856,
											"end": 3252,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2856,
											"end": 3252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2856,
											"end": 3252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3437,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3257,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3322,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3357,
											"end": 3366,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3355,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3367,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3372,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3389,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 3337,
											"end": 3389,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3383,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3387,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3389,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 3337,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3408,
											"end": 3431,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3431,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3257,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3628,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3442,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3556,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3540,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3529,
											"end": 3552,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3525,
											"end": 3557,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3574,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 3522,
											"end": 3574,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3571,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3568,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3560,
											"end": 3572,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3574,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 3522,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 3612,
											"end": 3621,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 3593,
											"end": 3622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3841,
											"end": 4163,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3841,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 3916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 3965,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 3960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3942,
											"end": 3949,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3961,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3966,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3983,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 3931,
											"end": 3983,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 3980,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 3977,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3969,
											"end": 3981,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3983,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 3931,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4019,
											"end": 4028,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4029,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4044,
											"end": 4050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4038,
											"end": 4088,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4038,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 4038,
											"end": 4088,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4085,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4081,
											"end": 4082,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4086,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4038,
											"end": 4088,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 4038,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 4149,
											"end": 4156,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4140,
											"end": 4146,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4138,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4125,
											"end": 4147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 4107,
											"end": 4157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4157,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 4107,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4097,
											"end": 4157,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3841,
											"end": 4163,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3841,
											"end": 4163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4168,
											"end": 4428,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4168,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4250,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4297,
											"end": 4299,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4285,
											"end": 4294,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4283,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4272,
											"end": 4295,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4268,
											"end": 4300,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4317,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 4265,
											"end": 4317,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4314,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4311,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4315,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4317,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 4265,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 4355,
											"end": 4364,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 4336,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 4336,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4365,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4407,
											"end": 4416,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 4384,
											"end": 4422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4780,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 4433,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4498,
											"end": 4504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4512,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4561,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4547,
											"end": 4556,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4545,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4534,
											"end": 4557,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 4562,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4527,
											"end": 4579,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4527,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 4527,
											"end": 4579,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4577,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4527,
											"end": 4579,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 4527,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 4617,
											"end": 4626,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 4598,
											"end": 4627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4627,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 4598,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4627,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4679,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4666,
											"end": 4675,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4662,
											"end": 4680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4649,
											"end": 4681,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4710,
											"end": 4731,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4708,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4700,
											"end": 4732,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 4690,
											"end": 4750,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4744,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4748,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4750,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 4690,
											"end": 4750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4769,
											"end": 4774,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4759,
											"end": 4774,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4759,
											"end": 4774,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4759,
											"end": 4774,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4780,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4780,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4780,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 5165,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 4785,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 4865,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4860,
											"end": 4872,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4872,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4872,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4872,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4907,
											"end": 4919,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4907,
											"end": 4919,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4907,
											"end": 4919,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 4928,
											"end": 4989,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 4986,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 4974,
											"end": 4980,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4970,
											"end": 4987,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 4987,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 4987,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4989,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 4928,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5035,
											"end": 5037,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5004,
											"end": 5022,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5039,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4998,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 4998,
											"end": 5159,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5091,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5076,
											"end": 5079,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5072,
											"end": 5092,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5070,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5062,
											"end": 5093,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5120,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5113,
											"end": 5114,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5106,
											"end": 5121,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5144,
											"end": 5148,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5141,
											"end": 5142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5134,
											"end": 5149,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4998,
											"end": 5159,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 4998,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4998,
											"end": 5159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 5165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 5165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 5165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 5165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5170,
											"end": 5513,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5170,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5374,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5354,
											"end": 5375,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5375,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5411,
											"end": 5413,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 5391,
											"end": 5409,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5409,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5384,
											"end": 5414,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964204E474F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5445,
											"end": 5447,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5506,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5170,
											"end": 5513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5518,
											"end": 5645,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 5518,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5579,
											"end": 5589,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5574,
											"end": 5577,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5570,
											"end": 5590,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5568,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5591,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5614,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 5607,
											"end": 5608,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5634,
											"end": 5638,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5631,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5624,
											"end": 5639,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 6623,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 5779,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5909,
											"end": 5912,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5971,
											"end": 5977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 5978,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6001,
											"end": 6037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 6027,
											"end": 6036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6001,
											"end": 6037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6001,
											"end": 6037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6001,
											"end": 6037,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 6001,
											"end": 6037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6056,
											"end": 6057,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6233,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6233,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 6100,
											"end": 6233,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6247,
											"end": 6248,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6242,
											"end": 6598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6598,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 6242,
											"end": 6598,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 6066,
											"end": 6598,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6233,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 6100,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6133,
											"end": 6157,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6133,
											"end": 6157,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6121,
											"end": 6158,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6121,
											"end": 6158,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6220,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6220,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6221,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6187,
											"end": 6222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6187,
											"end": 6222,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6223,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6223,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6223,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6100,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 6100,
											"end": 6233,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6598,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 6242,
											"end": 6598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6273,
											"end": 6279,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6263,
											"end": 6280,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6303,
											"end": 6307,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6348,
											"end": 6350,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6346,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6335,
											"end": 6351,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6373,
											"end": 6374,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6387,
											"end": 6552,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 6387,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6408,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6387,
											"end": 6552,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6387,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 6387,
											"end": 6552,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 6493,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 6493,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6477,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6477,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6494,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6522,
											"end": 6538,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6522,
											"end": 6538,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6522,
											"end": 6538,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6522,
											"end": 6538,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6416,
											"end": 6426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6416,
											"end": 6426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6387,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 6387,
											"end": 6552,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6387,
											"end": 6552,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 6387,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6581,
											"end": 6587,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6576,
											"end": 6579,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6588,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6598,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 6066,
											"end": 6598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6614,
											"end": 6617,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6614,
											"end": 6617,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 6623,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5779,
											"end": 6623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6755,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 6628,
											"end": 6755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6689,
											"end": 6699,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 6684,
											"end": 6687,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6680,
											"end": 6700,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6677,
											"end": 6678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6670,
											"end": 6701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 6724,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6717,
											"end": 6718,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6710,
											"end": 6725,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6744,
											"end": 6748,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6741,
											"end": 6742,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6734,
											"end": 6749,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6895,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6760,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 6817,
											"end": 6860,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 6840,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 6840,
											"end": 6858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 6858,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 6840,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6887,
											"end": 6888,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6876,
											"end": 6889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 7445,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 6900,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6997,
											"end": 7000,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7005,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6991,
											"end": 7439,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6991,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 6991,
											"end": 7439,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7038,
											"end": 7039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7068,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7061,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7052,
											"end": 7069,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7108,
											"end": 7112,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7104,
											"end": 7106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7094,
											"end": 7113,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7178,
											"end": 7180,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7166,
											"end": 7176,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7162,
											"end": 7181,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7159,
											"end": 7160,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7155,
											"end": 7182,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7183,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7214,
											"end": 7218,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7202,
											"end": 7212,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7219,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7243,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 7196,
											"end": 7243,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7237,
											"end": 7241,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7243,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 7196,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7292,
											"end": 7294,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7287,
											"end": 7290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7280,
											"end": 7281,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7276,
											"end": 7296,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 7270,
											"end": 7274,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7266,
											"end": 7297,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7256,
											"end": 7297,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7256,
											"end": 7297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7429,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 7347,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 7367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7358,
											"end": 7363,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7355,
											"end": 7368,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7429,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 7347,
											"end": 7429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7427,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7427,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7427,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7391,
											"end": 7392,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7380,
											"end": 7393,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 7347,
											"end": 7429,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7429,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 7347,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7351,
											"end": 7354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7351,
											"end": 7354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7351,
											"end": 7354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 7445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 7445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 7445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 7445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7621,
											"end": 8976,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 7621,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7750,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7741,
											"end": 7751,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7774,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7763,
											"end": 7793,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7760,
											"end": 7816,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7760,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 7760,
											"end": 7816,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 7796,
											"end": 7814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7825,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 7915,
											"end": 7921,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 7907,
											"end": 7911,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7912,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 7875,
											"end": 7913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 7913,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 7875,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7869,
											"end": 7873,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7825,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 7825,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7825,
											"end": 7922,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 7825,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7977,
											"end": 7981,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7977,
											"end": 7981,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8041,
											"end": 8043,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8030,
											"end": 8044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8030,
											"end": 8044,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8058,
											"end": 8059,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8053,
											"end": 8719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8719,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 8053,
											"end": 8719,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8763,
											"end": 8764,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8780,
											"end": 8786,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8777,
											"end": 8866,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8777,
											"end": 8866,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 8777,
											"end": 8866,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8832,
											"end": 8851,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 8851,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 8851,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8826,
											"end": 8852,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8777,
											"end": 8866,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 8777,
											"end": 8866,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7578,
											"end": 7579,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7570,
											"end": 7594,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7595,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7556,
											"end": 7596,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7603,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7598,
											"end": 7609,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7609,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7610,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8960,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8960,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 8023,
											"end": 8970,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8719,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 8053,
											"end": 8719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5733,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5719,
											"end": 5733,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5719,
											"end": 5733,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5767,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8089,
											"end": 8109,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8089,
											"end": 8109,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8089,
											"end": 8109,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8210,
											"end": 8446,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 8210,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8224,
											"end": 8231,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8221,
											"end": 8222,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8218,
											"end": 8232,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8210,
											"end": 8446,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8210,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 8210,
											"end": 8446,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8313,
											"end": 8332,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8313,
											"end": 8332,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8313,
											"end": 8332,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8333,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8292,
											"end": 8334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8292,
											"end": 8334,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8405,
											"end": 8432,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8405,
											"end": 8432,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8405,
											"end": 8432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8405,
											"end": 8432,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8373,
											"end": 8374,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8361,
											"end": 8375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8361,
											"end": 8375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8361,
											"end": 8375,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8361,
											"end": 8375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8240,
											"end": 8259,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8240,
											"end": 8259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8210,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 8210,
											"end": 8446,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8210,
											"end": 8446,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 8210,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8214,
											"end": 8217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8474,
											"end": 8480,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8462,
											"end": 8481,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8459,
											"end": 8660,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8459,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 8459,
											"end": 8660,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8535,
											"end": 8554,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8535,
											"end": 8554,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8535,
											"end": 8554,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8529,
											"end": 8555,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8618,
											"end": 8619,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 8614,
											"end": 8628,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8614,
											"end": 8628,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8614,
											"end": 8628,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 8633,
											"name": "PUSH",
											"source": 7,
											"value": "F8"
										},
										{
											"begin": 8610,
											"end": 8634,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8606,
											"end": 8643,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 8602,
											"end": 8644,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 8587,
											"end": 8645,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8646,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8459,
											"end": 8660,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 8459,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8706,
											"end": 8707,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8690,
											"end": 8704,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8690,
											"end": 8704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8690,
											"end": 8704,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8673,
											"end": 8709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8673,
											"end": 8709,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7621,
											"end": 8976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8981,
											"end": 9298,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 8981,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9158,
											"end": 9160,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9147,
											"end": 9156,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9140,
											"end": 9161,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9121,
											"end": 9125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9178,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 9219,
											"end": 9221,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9208,
											"end": 9217,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9178,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 9178,
											"end": 9223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9178,
											"end": 9223,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 9178,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9170,
											"end": 9223,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9170,
											"end": 9223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9288,
											"end": 9289,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9284,
											"end": 9285,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9279,
											"end": 9282,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 9275,
											"end": 9286,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 9271,
											"end": 9290,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9269,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9254,
											"end": 9256,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9252,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9239,
											"end": 9257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9292,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8981,
											"end": 9298,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8981,
											"end": 9298,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8981,
											"end": 9298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8981,
											"end": 9298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8981,
											"end": 9298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8981,
											"end": 9298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11047,
											"end": 11264,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 11047,
											"end": 11264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11087,
											"end": 11088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11113,
											"end": 11114,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11103,
											"end": 11235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 11103,
											"end": 11235,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11157,
											"end": 11167,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 11152,
											"end": 11155,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 11148,
											"end": 11168,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 11145,
											"end": 11146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11138,
											"end": 11169,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11192,
											"end": 11196,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 11189,
											"end": 11190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11182,
											"end": 11197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11220,
											"end": 11224,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11217,
											"end": 11218,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11210,
											"end": 11225,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11103,
											"end": 11235,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 11103,
											"end": 11235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11249,
											"end": 11258,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11249,
											"end": 11258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11047,
											"end": 11264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12425,
											"end": 12626,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 12425,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12463,
											"end": 12466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12491,
											"end": 12501,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12536,
											"end": 12538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12529,
											"end": 12534,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12525,
											"end": 12539,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12563,
											"end": 12565,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12554,
											"end": 12561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12551,
											"end": 12566,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12548,
											"end": 12589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 12548,
											"end": 12589,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12569,
											"end": 12587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 12569,
											"end": 12587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 12569,
											"end": 12587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12569,
											"end": 12587,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 12569,
											"end": 12587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12618,
											"end": 12619,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12605,
											"end": 12620,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12605,
											"end": 12620,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12425,
											"end": 12626,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12425,
											"end": 12626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12631,
											"end": 12756,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 12631,
											"end": 12756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12696,
											"end": 12705,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12696,
											"end": 12705,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12696,
											"end": 12705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12717,
											"end": 12727,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12717,
											"end": 12727,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12717,
											"end": 12727,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12714,
											"end": 12750,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12714,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 12714,
											"end": 12750,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12730,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 12730,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 12730,
											"end": 12748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12761,
											"end": 12929,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 12761,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 12865,
											"end": 12874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12865,
											"end": 12874,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12882,
											"end": 12897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12882,
											"end": 12897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12882,
											"end": 12897,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 12876,
											"end": 12898,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12876,
											"end": 12898,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12862,
											"end": 12899,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 12852,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 12852,
											"end": 12923,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12903,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 12903,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 12903,
											"end": 12921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12934,
											"end": 13062,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 12934,
											"end": 13062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13001,
											"end": 13010,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13001,
											"end": 13010,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13001,
											"end": 13010,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13022,
											"end": 13033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13022,
											"end": 13033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13022,
											"end": 13033,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13019,
											"end": 13056,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13019,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 13019,
											"end": 13056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13036,
											"end": 13054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 13036,
											"end": 13054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 13036,
											"end": 13054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13067,
											"end": 13194,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 13067,
											"end": 13194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13128,
											"end": 13138,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 13123,
											"end": 13126,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 13119,
											"end": 13139,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 13116,
											"end": 13117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13109,
											"end": 13140,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13159,
											"end": 13163,
											"name": "PUSH",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 13156,
											"end": 13157,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13149,
											"end": 13164,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13183,
											"end": 13187,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13180,
											"end": 13181,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13173,
											"end": 13188,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"HumAidTokenv2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"distributeTreasuryToNGOs()": "f9479ffa",
							"excludeFromFee(address,bool)": "df8408fe",
							"feePercent()": "7fd6f15c",
							"isExcludedFromFee(address)": "5342acb4",
							"name()": "06fdde03",
							"ngoNames(address)": "4618f6ac",
							"ngoWallets(uint256)": "7d5b6c60",
							"owner()": "8da5cb5b",
							"registerNGO(string,address)": "3539c6b1",
							"renounceOwnership()": "715018a6",
							"setFeePercent(uint256)": "7ce3489b",
							"setTreasuryWallet(address)": "a8602fea",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasuryWallet()": "4626402b",
							"unregisterNGO(string)": "ae91470d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ngo\",\"type\":\"address\"}],\"name\":\"NGORegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ngo\",\"type\":\"address\"}],\"name\":\"NGOUnregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeTreasuryToNGOs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ngoNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ngoWallets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ngoName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_ngoAddress\",\"type\":\"address\"}],\"name\":\"registerNGO\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasuryWallet\",\"type\":\"address\"}],\"name\":\"setTreasuryWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ngoName\",\"type\":\"string\"}],\"name\":\"unregisterNGO\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HumAidTokenv2.sol\":\"HumAidv2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"HumAidTokenv2.sol\":{\"keccak256\":\"0x05d8b5e54a747c23215347fba992f140c3fac23aefd462e28d95cee35c8051de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6a2c93e84e68c1e1b8da92a930aa42a0736474451dc4efe2ec8856f1d491af8\",\"dweb:/ipfs/QmbMVhH8W8ogGa1LCjW254isEkkRX43cqJLQpZpyi8BNGE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "HumAidTokenv2.sol:HumAidv2",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "HumAidTokenv2.sol:HumAidv2",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "HumAidTokenv2.sol:HumAidv2",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "HumAidTokenv2.sol:HumAidv2",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "HumAidTokenv2.sol:HumAidv2",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "HumAidTokenv2.sol:HumAidv2",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 949,
								"contract": "HumAidTokenv2.sol:HumAidv2",
								"label": "feePercent",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 953,
								"contract": "HumAidTokenv2.sol:HumAidv2",
								"label": "ngoNames",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_string_storage)"
							},
							{
								"astId": 956,
								"contract": "HumAidTokenv2.sol:HumAidv2",
								"label": "ngoWallets",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 960,
								"contract": "HumAidTokenv2.sol:HumAidv2",
								"label": "_isExcludedFromFee",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 962,
								"contract": "HumAidTokenv2.sol:HumAidv2",
								"label": "treasuryWallet",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"HumAidTokenv2.sol": {
				"ast": {
					"absolutePath": "HumAidTokenv2.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"HumAidv2": [
							1589
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1590,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1590,
							"sourceUnit": 800,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1590,
							"sourceUnit": 148,
							"src": "118:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"195:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "195:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "195:5:6"
								},
								{
									"arguments": [
										{
											"arguments": [
												{
													"expression": {
														"id": 943,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "218:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "222:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "218:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 942,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "210:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:6",
													"typeDescriptions": {}
												}
											},
											"id": 945,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "210:19:6",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"202:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "202:7:6"
									},
									"id": 946,
									"nodeType": "InheritanceSpecifier",
									"src": "202:28:6"
								}
							],
							"canonicalName": "HumAidv2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1589,
							"linearizedBaseContracts": [
								1589,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "HumAidv2",
							"nameLocation": "183:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7fd6f15c",
									"id": 949,
									"mutability": "mutable",
									"name": "feePercent",
									"nameLocation": "253:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1589,
									"src": "238:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 947,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "238:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 948,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "266:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4618f6ac",
									"id": 953,
									"mutability": "mutable",
									"name": "ngoNames",
									"nameLocation": "330:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1589,
									"src": "295:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
										"typeString": "mapping(address => string)"
									},
									"typeName": {
										"id": 952,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 950,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "304:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "295:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
											"typeString": "mapping(address => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 951,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "315:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7d5b6c60",
									"id": 956,
									"mutability": "mutable",
									"name": "ngoWallets",
									"nameLocation": "362:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1589,
									"src": "345:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 954,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "345:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 955,
										"nodeType": "ArrayTypeName",
										"src": "345:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 960,
									"mutability": "mutable",
									"name": "_isExcludedFromFee",
									"nameLocation": "414:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1589,
									"src": "381:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 959,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 957,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "389:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "381:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 958,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "400:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "4626402b",
									"id": 962,
									"mutability": "mutable",
									"name": "treasuryWallet",
									"nameLocation": "456:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1589,
									"src": "441:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 961,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "441:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "518:167:6",
										"statements": [
											{
												"expression": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 969,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "529:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 972,
														"indexExpression": {
															"expression": {
																"id": 970,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "548:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "552:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "548:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "529:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "562:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "529:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "529:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 977,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "632:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "636:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "632:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "315f3030305f3030305f303030",
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "644:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1_000_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "660:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 981,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "666:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "666:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "660:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "644:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 976,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "626:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "626:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "626:51:6"
											}
										]
									},
									"id": 988,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "48756d4169647632",
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "499:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_26778a96cee55df0e06d70929075d818fffff6e495bb390e99323868d2037f67",
														"typeString": "literal_string \"HumAidv2\""
													},
													"value": "HumAidv2"
												},
												{
													"hexValue": "484d4d",
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "511:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_eb2150ea2ef71680814def23519d3aa8fbcf990a35e6060f3645629e91977aea",
														"typeString": "literal_string \"HMM\""
													},
													"value": "HMM"
												}
											],
											"id": 967,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 964,
												"name": "ERC20",
												"nameLocations": [
													"493:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "493:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "493:24:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:2:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:0:6"
									},
									"scope": 1589,
									"src": "479:206:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "764:299:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 996,
																"name": "_treasuryWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "783:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "810:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "802:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 997,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "802:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "802:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "783:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642074726561737572792061646472657373",
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "814:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
																"typeString": "literal_string \"Invalid treasury address\""
															},
															"value": "Invalid treasury address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
																"typeString": "literal_string \"Invalid treasury address\""
															}
														],
														"id": 995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "775:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "775:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "775:66:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1005,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "858:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "884:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "876:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1006,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "876:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "876:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "858:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1018,
												"nodeType": "IfStatement",
												"src": "854:103:6",
												"trueBody": {
													"id": 1017,
													"nodeType": "Block",
													"src": "888:69:6",
													"statements": [
														{
															"expression": {
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1011,
																		"name": "_isExcludedFromFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "903:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1013,
																	"indexExpression": {
																		"id": 1012,
																		"name": "treasuryWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "922:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "903:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "940:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "903:42:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1016,
															"nodeType": "ExpressionStatement",
															"src": "903:42:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1019,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "969:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1020,
														"name": "_treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "986:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "969:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "969:32:6"
											},
											{
												"expression": {
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1023,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "1014:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1025,
														"indexExpression": {
															"id": 1024,
															"name": "treasuryWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "1033:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1014:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1051:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1014:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "1014:41:6"
											}
										]
									},
									"functionSelector": "a8602fea",
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 993,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 992,
												"name": "onlyOwner",
												"nameLocations": [
													"754:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "754:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "754:9:6"
										}
									],
									"name": "setTreasuryWallet",
									"nameLocation": "702:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "_treasuryWallet",
												"nameLocation": "728:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "720:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:25:6"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "764:0:6"
									},
									"scope": 1589,
									"src": "693:370:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "1123:45:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "1151:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1035,
															"name": "ngoWallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "1135:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1146:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1135:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1135:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "1135:25:6"
											}
										]
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pushToNGOWallets",
									"nameLocation": "1080:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1105:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1097:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:18:6"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:0:6"
									},
									"scope": 1589,
									"src": "1071:97:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "1226:101:6",
										"statements": [
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1047,
															"name": "ngoWallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "1238:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1049,
														"indexExpression": {
															"id": 1048,
															"name": "_index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "1249:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1238:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1050,
															"name": "ngoWallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "1259:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1055,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1051,
																	"name": "ngoWallets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "1270:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1281:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1270:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1290:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1270:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1259:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1238:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "1238:54:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1058,
															"name": "ngoWallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "1303:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1314:3:6",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "1303:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1303:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "1303:16:6"
											}
										]
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "popFromNGOWallets",
									"nameLocation": "1185:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "1210:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1203:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1043,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1203:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:15:6"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:0:6"
									},
									"scope": 1589,
									"src": "1176:151:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "1398:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1072,
																"name": "_feePercent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "1417:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3530",
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1432:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"src": "1417:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46656520746f6f2068696768",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1436:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															},
															"value": "Fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															}
														],
														"id": 1071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1409:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1409:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "1409:42:6"
											},
											{
												"expression": {
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1078,
														"name": "feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "1462:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1079,
														"name": "_feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "1475:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1462:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "1462:24:6"
											}
										]
									},
									"functionSelector": "7ce3489b",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1069,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1068,
												"name": "onlyOwner",
												"nameLocations": [
													"1388:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1388:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1388:9:6"
										}
									],
									"name": "setFeePercent",
									"nameLocation": "1344:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "_feePercent",
												"nameLocation": "1366:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1358:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1357:21:6"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1398:0:6"
									},
									"scope": 1589,
									"src": "1335:159:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "1577:57:6",
										"statements": [
											{
												"expression": {
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1092,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "1588:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1094,
														"indexExpression": {
															"id": 1093,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "1607:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1588:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1095,
														"name": "excluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "1618:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1588:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "1588:38:6"
											}
										]
									},
									"functionSelector": "df8408fe",
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1090,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1089,
												"name": "onlyOwner",
												"nameLocations": [
													"1567:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1567:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1567:9:6"
										}
									],
									"name": "excludeFromFee",
									"nameLocation": "1511:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1534:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1526:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "excluded",
												"nameLocation": "1548:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1543:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1086,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1543:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1525:32:6"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1577:0:6"
									},
									"scope": 1589,
									"src": "1502:132:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "1715:53:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1106,
														"name": "_isExcludedFromFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "1733:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1108,
													"indexExpression": {
														"id": 1107,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "1752:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1733:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1105,
												"id": 1109,
												"nodeType": "Return",
												"src": "1726:34:6"
											}
										]
									},
									"functionSelector": "5342acb4",
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcludedFromFee",
									"nameLocation": "1651:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1677:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1669:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:17:6"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1709:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1103,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1709:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:6:6"
									},
									"scope": 1589,
									"src": "1642:126:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "1815:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1117,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1832:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1836:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1832:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "1844:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1116,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1826:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "1826:25:6"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1785:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1798:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1790:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1789:16:6"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1815:0:6"
									},
									"scope": 1589,
									"src": "1776:83:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "a06dde3e644f7da70b4461f791ff2766ebeacd8cae66b3e6a98637a9dacbd900",
									"id": 1129,
									"name": "NGORegistered",
									"nameLocation": "1873:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1894:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1887:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1887:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"indexed": false,
												"mutability": "mutable",
												"name": "ngo",
												"nameLocation": "1908:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1900:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:26:6"
									},
									"src": "1867:46:6"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "1989:410:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1137,
																"name": "_ngoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "2008:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2031:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2023:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1138,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2023:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2023:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2008:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204e474f2061646472657373",
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2035:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16a775d88ff326055ef639aacc0e63c0701d399070d62a18288fc206c6578542",
																"typeString": "literal_string \"Invalid NGO address\""
															},
															"value": "Invalid NGO address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16a775d88ff326055ef639aacc0e63c0701d399070d62a18288fc206c6578542",
																"typeString": "literal_string \"Invalid NGO address\""
															}
														],
														"id": 1136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2000:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "2000:57:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1147,
																	"name": "_isExcludedFromFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "2076:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1149,
																"indexExpression": {
																	"id": 1148,
																	"name": "_ngoAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "2095:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2076:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2111:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "2076:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546869732077616c6c657420697320616c72656164792072656769737465726564",
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2118:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef53133eb78330d291976c83314ee3bf79a4ca46417e3baa9acccde0196eb581",
																"typeString": "literal_string \"This wallet is already registered\""
															},
															"value": "This wallet is already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef53133eb78330d291976c83314ee3bf79a4ca46417e3baa9acccde0196eb581",
																"typeString": "literal_string \"This wallet is already registered\""
															}
														],
														"id": 1146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2068:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2068:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "2068:86:6"
											},
											{
												"body": {
													"id": 1174,
													"nodeType": "Block",
													"src": "2209:72:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1166,
																		"name": "ngoWallets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 956,
																		"src": "2227:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1168,
																	"indexExpression": {
																		"id": 1167,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "2238:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2227:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1169,
																	"name": "_ngoAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "2244:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2227:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1173,
															"nodeType": "IfStatement",
															"src": "2224:45:6",
															"trueBody": {
																"expression": {
																	"hexValue": "66616c7365",
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2264:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"functionReturnParameters": 1135,
																"id": 1172,
																"nodeType": "Return",
																"src": "2257:12:6"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1159,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "2182:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1160,
															"name": "ngoWallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "2186:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2197:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2186:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2182:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"initializationExpression": {
													"assignments": [
														1156
													],
													"declarations": [
														{
															"constant": false,
															"id": 1156,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2175:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1175,
															"src": "2170:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1155,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2170:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1158,
													"initialValue": {
														"hexValue": "30",
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2179:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2170:10:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2205:3:6",
														"subExpression": {
															"id": 1163,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "2207:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1165,
													"nodeType": "ExpressionStatement",
													"src": "2205:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2165:116:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1177,
															"name": "_ngoAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "2308:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1176,
														"name": "pushToNGOWallets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "2291:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2291:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "2291:29:6"
											},
											{
												"expression": {
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1180,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "2331:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1182,
														"indexExpression": {
															"id": 1181,
															"name": "_ngoAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "2350:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2331:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2365:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2331:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "2331:38:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2387:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1135,
												"id": 1187,
												"nodeType": "Return",
												"src": "2380:11:6"
											}
										]
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerNGOWallet",
									"nameLocation": "1928:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "_ngoAddress",
												"nameLocation": "1954:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "1946:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:21:6"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "1984:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1984:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1983:6:6"
									},
									"scope": 1589,
									"src": "1919:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "2507:391:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1201,
																"name": "_ngoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "2526:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2549:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2541:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1202,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2541:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2541:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2526:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204e474f2061646472657373",
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2553:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16a775d88ff326055ef639aacc0e63c0701d399070d62a18288fc206c6578542",
																"typeString": "literal_string \"Invalid NGO address\""
															},
															"value": "Invalid NGO address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16a775d88ff326055ef639aacc0e63c0701d399070d62a18288fc206c6578542",
																"typeString": "literal_string \"Invalid NGO address\""
															}
														],
														"id": 1200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2518:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2518:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "2518:57:6"
											},
											{
												"body": {
													"id": 1241,
													"nodeType": "Block",
													"src": "2630:118:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1224,
																						"name": "ngoNames",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 953,
																						"src": "2666:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																							"typeString": "mapping(address => string storage ref)"
																						}
																					},
																					"id": 1228,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 1225,
																							"name": "ngoWallets",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 956,
																							"src": "2675:10:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1227,
																						"indexExpression": {
																							"id": 1226,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1211,
																							"src": "2686:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2675:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2666:23:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"id": 1223,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2659:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 1222,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "2659:5:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2659:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		],
																		"id": 1221,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "2649:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2649:42:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1234,
																					"name": "_ngoName",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1191,
																					"src": "2712:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2705:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 1232,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "2705:5:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2705:16:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1231,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "2695:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2695:27:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2649:73:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1240,
															"nodeType": "IfStatement",
															"src": "2645:91:6",
															"trueBody": {
																"expression": {
																	"hexValue": "66616c7365",
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2731:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"functionReturnParameters": 1199,
																"id": 1239,
																"nodeType": "Return",
																"src": "2724:12:6"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1214,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "2603:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1215,
															"name": "ngoWallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "2607:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2618:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2607:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2603:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1242,
												"initializationExpression": {
													"assignments": [
														1211
													],
													"declarations": [
														{
															"constant": false,
															"id": 1211,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2596:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1242,
															"src": "2591:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1210,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2591:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1213,
													"initialValue": {
														"hexValue": "30",
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2600:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2591:10:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2626:3:6",
														"subExpression": {
															"id": 1218,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "2628:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1220,
													"nodeType": "ExpressionStatement",
													"src": "2626:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2586:162:6"
											},
											{
												"expression": {
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1243,
															"name": "ngoNames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2758:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																"typeString": "mapping(address => string storage ref)"
															}
														},
														"id": 1245,
														"indexExpression": {
															"id": 1244,
															"name": "_ngoAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "2767:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2758:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1246,
														"name": "_ngoName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "2782:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2758:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "2758:32:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1250,
															"name": "_ngoName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "2820:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1251,
															"name": "_ngoAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "2830:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1249,
														"name": "NGORegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "2806:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2806:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "EmitStatement",
												"src": "2801:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1255,
															"name": "_ngoAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "2878:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1254,
														"name": "registerNGOWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "2860:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) returns (bool)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2860:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1199,
												"id": 1257,
												"nodeType": "Return",
												"src": "2853:37:6"
											}
										]
									},
									"functionSelector": "3539c6b1",
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1196,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1195,
												"name": "onlyOwner",
												"nameLocations": [
													"2482:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2482:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2482:9:6"
										}
									],
									"name": "registerNGO",
									"nameLocation": "2416:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "_ngoName",
												"nameLocation": "2442:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "2428:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1190,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2428:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "_ngoAddress",
												"nameLocation": "2460:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "2452:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2452:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:45:6"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "2501:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1197,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2501:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2500:6:6"
									},
									"scope": 1589,
									"src": "2407:491:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "f7ce65b9119570713c55642c7ba09904806c36ec3da8fa5b1a8aa4a223132c2e",
									"id": 1265,
									"name": "NGOUnregistered",
									"nameLocation": "2916:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2939:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "2932:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1260,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2932:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"indexed": false,
												"mutability": "mutable",
												"name": "ngo",
												"nameLocation": "2953:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "2945:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2945:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2931:26:6"
									},
									"src": "2910:48:6"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "3036:368:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1273,
																"name": "_ngoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1267,
																"src": "3055:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3078:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3070:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1274,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3070:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3070:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3055:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204e474f2061646472657373",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3082:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16a775d88ff326055ef639aacc0e63c0701d399070d62a18288fc206c6578542",
																"typeString": "literal_string \"Invalid NGO address\""
															},
															"value": "Invalid NGO address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16a775d88ff326055ef639aacc0e63c0701d399070d62a18288fc206c6578542",
																"typeString": "literal_string \"Invalid NGO address\""
															}
														],
														"id": 1272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3047:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3047:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "3047:57:6"
											},
											{
												"body": {
													"id": 1312,
													"nodeType": "Block",
													"src": "3172:202:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1293,
																		"name": "ngoWallets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 956,
																		"src": "3191:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1295,
																	"indexExpression": {
																		"id": 1294,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "3202:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3191:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1296,
																	"name": "_ngoAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "3208:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3191:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1311,
															"nodeType": "IfStatement",
															"src": "3187:176:6",
															"trueBody": {
																"id": 1310,
																"nodeType": "Block",
																"src": "3221:142:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1299,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1283,
																					"src": "3258:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				],
																				"id": 1298,
																				"name": "popFromNGOWallets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1064,
																				"src": "3240:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$returns$__$",
																					"typeString": "function (uint32)"
																				}
																			},
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3240:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1301,
																		"nodeType": "ExpressionStatement",
																		"src": "3240:20:6"
																	},
																	{
																		"expression": {
																			"id": 1306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1302,
																					"name": "_isExcludedFromFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 960,
																					"src": "3279:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1304,
																				"indexExpression": {
																					"id": 1303,
																					"name": "_ngoAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1267,
																					"src": "3298:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3279:31:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1305,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3313:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "3279:38:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1307,
																		"nodeType": "ExpressionStatement",
																		"src": "3279:38:6"
																	},
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 1308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3343:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 1271,
																		"id": 1309,
																		"nodeType": "Return",
																		"src": "3336:11:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1286,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "3134:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1287,
															"name": "ngoWallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "3138:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3149:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3138:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3134:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"initializationExpression": {
													"assignments": [
														1283
													],
													"declarations": [
														{
															"constant": false,
															"id": 1283,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3127:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1313,
															"src": "3120:8:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"typeName": {
																"id": 1282,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "3120:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1285,
													"initialValue": {
														"hexValue": "30",
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3131:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3120:12:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3157:3:6",
														"subExpression": {
															"id": 1290,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "3159:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1292,
													"nodeType": "ExpressionStatement",
													"src": "3157:3:6"
												},
												"nodeType": "ForStatement",
												"src": "3115:259:6"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3391:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1271,
												"id": 1315,
												"nodeType": "Return",
												"src": "3384:12:6"
											}
										]
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unregisterNGOWallet",
									"nameLocation": "2973:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "_ngoAddress",
												"nameLocation": "3001:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2993:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2993:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2992:21:6"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "3031:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3031:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3030:6:6"
									},
									"scope": 1589,
									"src": "2964:440:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "3493:495:6",
										"statements": [
											{
												"assignments": [
													1327
												],
												"declarations": [
													{
														"constant": false,
														"id": 1327,
														"mutability": "mutable",
														"name": "_ngoAddress",
														"nameLocation": "3512:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1395,
														"src": "3504:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1326,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3504:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1332,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3534:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3526:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1328,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3526:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3526:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3504:32:6"
											},
											{
												"body": {
													"id": 1370,
													"nodeType": "Block",
													"src": "3591:191:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1347,
																						"name": "ngoNames",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 953,
																						"src": "3627:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																							"typeString": "mapping(address => string storage ref)"
																						}
																					},
																					"id": 1351,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 1348,
																							"name": "ngoWallets",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 956,
																							"src": "3636:10:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1350,
																						"indexExpression": {
																							"id": 1349,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1334,
																							"src": "3647:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3636:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3627:23:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"id": 1346,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3620:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 1345,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "3620:5:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3620:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		],
																		"id": 1344,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "3610:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3610:42:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1357,
																					"name": "_ngoName",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1319,
																					"src": "3673:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3666:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 1355,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "3666:5:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3666:16:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1354,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "3656:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3656:27:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "3610:73:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1369,
															"nodeType": "IfStatement",
															"src": "3606:165:6",
															"trueBody": {
																"id": 1368,
																"nodeType": "Block",
																"src": "3685:86:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1361,
																				"name": "_ngoAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1327,
																				"src": "3704:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1362,
																					"name": "ngoWallets",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "3718:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1364,
																				"indexExpression": {
																					"id": 1363,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1334,
																					"src": "3729:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3718:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "3704:27:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1366,
																		"nodeType": "ExpressionStatement",
																		"src": "3704:27:6"
																	},
																	{
																		"id": 1367,
																		"nodeType": "Break",
																		"src": "3750:5:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1337,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "3564:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1338,
															"name": "ngoWallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "3568:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3579:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3568:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3564:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1371,
												"initializationExpression": {
													"assignments": [
														1334
													],
													"declarations": [
														{
															"constant": false,
															"id": 1334,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3557:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1371,
															"src": "3552:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1333,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3552:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1336,
													"initialValue": {
														"hexValue": "30",
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3561:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3552:10:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3587:3:6",
														"subExpression": {
															"id": 1341,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "3589:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1343,
													"nodeType": "ExpressionStatement",
													"src": "3587:3:6"
												},
												"nodeType": "ForStatement",
												"src": "3547:235:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1372,
														"name": "_ngoAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "3796:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3819:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3811:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1373,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3811:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3811:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3796:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1380,
												"nodeType": "IfStatement",
												"src": "3792:43:6",
												"trueBody": {
													"expression": {
														"hexValue": "66616c7365",
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3830:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 1325,
													"id": 1379,
													"nodeType": "Return",
													"src": "3823:12:6"
												}
											},
											{
												"expression": {
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3848:28:6",
													"subExpression": {
														"baseExpression": {
															"id": 1381,
															"name": "ngoNames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "3855:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																"typeString": "mapping(address => string storage ref)"
															}
														},
														"id": 1383,
														"indexExpression": {
															"id": 1382,
															"name": "_ngoAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "3864:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3855:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "3848:28:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1387,
															"name": "_ngoName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "3908:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1388,
															"name": "_ngoAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "3918:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1386,
														"name": "NGOUnregistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "3892:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3892:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "EmitStatement",
												"src": "3887:43:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1392,
															"name": "_ngoAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "3968:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1391,
														"name": "unregisterNGOWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "3948:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) returns (bool)"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3948:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1325,
												"id": 1394,
												"nodeType": "Return",
												"src": "3941:39:6"
											}
										]
									},
									"functionSelector": "ae91470d",
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1322,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1321,
												"name": "onlyOwner",
												"nameLocations": [
													"3468:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3468:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3468:9:6"
										}
									],
									"name": "unregisterNGO",
									"nameLocation": "3421:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "_ngoName",
												"nameLocation": "3449:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "3435:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1318,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3435:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3434:24:6"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "3487:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3487:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3486:6:6"
									},
									"scope": 1589,
									"src": "3412:576:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "4051:562:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1402,
																"name": "treasuryWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "4070:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4096:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4088:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1403,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4088:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4088:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4070:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726561737572792077616c6c6574206e6f7420736574",
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4100:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6b764185d3739b16932c4b21e6113072c4e801fae3cbd068bda517d69a2b702",
																"typeString": "literal_string \"Treasury wallet not set\""
															},
															"value": "Treasury wallet not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6b764185d3739b16932c4b21e6113072c4e801fae3cbd068bda517d69a2b702",
																"typeString": "literal_string \"Treasury wallet not set\""
															}
														],
														"id": 1401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4062:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4062:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "4062:64:6"
											},
											{
												"assignments": [
													1412
												],
												"declarations": [
													{
														"constant": false,
														"id": 1412,
														"mutability": "mutable",
														"name": "ngoCount",
														"nameLocation": "4145:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "4137:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1411,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1415,
												"initialValue": {
													"expression": {
														"id": 1413,
														"name": "ngoWallets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "4156:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4167:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4156:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4137:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1417,
																"name": "ngoCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "4192:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4203:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4192:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f204e474f732072656769737465726564",
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4206:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a653adfc56c6a5082525d4866c63015b01abd19f8c3f9c57f012fa2392041db2",
																"typeString": "literal_string \"No NGOs registered\""
															},
															"value": "No NGOs registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a653adfc56c6a5082525d4866c63015b01abd19f8c3f9c57f012fa2392041db2",
																"typeString": "literal_string \"No NGOs registered\""
															}
														],
														"id": 1416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4184:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4184:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "4184:43:6"
											},
											{
												"assignments": [
													1424
												],
												"declarations": [
													{
														"constant": false,
														"id": 1424,
														"mutability": "mutable",
														"name": "treasuryBalance",
														"nameLocation": "4248:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "4240:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1423,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4240:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1428,
												"initialValue": {
													"arguments": [
														{
															"id": 1426,
															"name": "treasuryWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "4276:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1425,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "4266:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4240:51:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1430,
																"name": "treasuryBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "4310:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4328:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4310:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2066756e647320746f2064697374726962757465",
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4331:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0872d35976de08f0aa135bf934961c054082d5eca6e26e962dcaa077f2ef32b9",
																"typeString": "literal_string \"No funds to distribute\""
															},
															"value": "No funds to distribute"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0872d35976de08f0aa135bf934961c054082d5eca6e26e962dcaa077f2ef32b9",
																"typeString": "literal_string \"No funds to distribute\""
															}
														],
														"id": 1429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4302:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4302:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "4302:54:6"
											},
											{
												"assignments": [
													1437
												],
												"declarations": [
													{
														"constant": false,
														"id": 1437,
														"mutability": "mutable",
														"name": "share",
														"nameLocation": "4377:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "4369:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1436,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4369:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1441,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1438,
														"name": "treasuryBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "4385:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1439,
														"name": "ngoCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "4403:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4385:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4369:42:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1443,
																"name": "share",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "4430:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4438:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4430:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e647320666f7220646973747269627574696f6e",
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4441:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba8c7b94845b79afccc5885d51de055b4f21ba379566ced52bec60ec5391460d",
																"typeString": "literal_string \"Insufficient funds for distribution\""
															},
															"value": "Insufficient funds for distribution"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba8c7b94845b79afccc5885d51de055b4f21ba379566ced52bec60ec5391460d",
																"typeString": "literal_string \"Insufficient funds for distribution\""
															}
														],
														"id": 1442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4422:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4422:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "4422:57:6"
											},
											{
												"body": {
													"id": 1469,
													"nodeType": "Block",
													"src": "4528:78:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1462,
																		"name": "treasuryWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "4557:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1463,
																			"name": "ngoWallets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 956,
																			"src": "4573:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 1465,
																		"indexExpression": {
																			"id": 1464,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1450,
																			"src": "4584:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4573:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1466,
																		"name": "share",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1437,
																		"src": "4588:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1459,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "4543:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_HumAidv2_$1589_$",
																			"typeString": "type(contract super HumAidv2)"
																		}
																	},
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4549:7:6",
																	"memberName": "_update",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 606,
																	"src": "4543:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4543:51:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1468,
															"nodeType": "ExpressionStatement",
															"src": "4543:51:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1453,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "4509:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1454,
														"name": "ngoCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "4513:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4509:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1470,
												"initializationExpression": {
													"assignments": [
														1450
													],
													"declarations": [
														{
															"constant": false,
															"id": 1450,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4502:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1470,
															"src": "4497:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1449,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4497:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1452,
													"initialValue": {
														"hexValue": "30",
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4506:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4497:10:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4523:3:6",
														"subExpression": {
															"id": 1456,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "4525:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1458,
													"nodeType": "ExpressionStatement",
													"src": "4523:3:6"
												},
												"nodeType": "ForStatement",
												"src": "4492:114:6"
											}
										]
									},
									"functionSelector": "f9479ffa",
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1399,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1398,
												"name": "onlyOwner",
												"nameLocations": [
													"4041:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4041:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4041:9:6"
										}
									],
									"name": "distributeTreasuryToNGOs",
									"nameLocation": "4005:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4029:2:6"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4051:0:6"
									},
									"scope": 1589,
									"src": "3996:617:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 1587,
										"nodeType": "Block",
										"src": "4794:735:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1483,
																"name": "_isExcludedFromFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "4809:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1485,
															"indexExpression": {
																"id": 1484,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "4828:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4809:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"baseExpression": {
																"id": 1486,
																"name": "_isExcludedFromFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "4837:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1488,
															"indexExpression": {
																"id": 1487,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "4856:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4837:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4809:50:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1490,
															"name": "feePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "4863:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4863:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4809:69:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1585,
													"nodeType": "Block",
													"src": "4943:579:6",
													"statements": [
														{
															"assignments": [
																1504
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1504,
																	"mutability": "mutable",
																	"name": "fee",
																	"nameLocation": "4966:3:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1585,
																	"src": "4958:11:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1503,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4958:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1511,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1505,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1479,
																				"src": "4973:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1506,
																				"name": "feePercent",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 949,
																				"src": "4981:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4973:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1508,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4972:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4995:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "4972:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4958:41:6"
														},
														{
															"assignments": [
																1513
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1513,
																	"mutability": "mutable",
																	"name": "amountAfterFee",
																	"nameLocation": "5022:14:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1585,
																	"src": "5014:22:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1512,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5014:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1517,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1514,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "5039:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1515,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1504,
																	"src": "5047:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5039:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5014:36:6"
														},
														{
															"assignments": [
																1519
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1519,
																	"mutability": "mutable",
																	"name": "share",
																	"nameLocation": "5073:5:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1585,
																	"src": "5065:13:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1518,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5065:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1530,
															"initialValue": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1520,
																			"name": "ngoWallets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 956,
																			"src": "5081:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 1521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5092:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5081:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5102:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5081:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "31",
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5132:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "5081:52:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1524,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1504,
																		"src": "5106:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"expression": {
																			"id": 1525,
																			"name": "ngoWallets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 956,
																			"src": "5112:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5123:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5112:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5106:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5065:68:6"
														},
														{
															"assignments": [
																1532
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1532,
																	"mutability": "mutable",
																	"name": "remainder",
																	"nameLocation": "5156:9:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1585,
																	"src": "5148:17:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1531,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5148:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1540,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1533,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1504,
																	"src": "5168:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1534,
																				"name": "share",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1519,
																				"src": "5175:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"expression": {
																					"id": 1535,
																					"name": "ngoWallets",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "5183:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5194:6:6",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "5183:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5175:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1538,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5174:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5168:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5148:53:6"
														},
														{
															"body": {
																"id": 1562,
																"nodeType": "Block",
																"src": "5263:76:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1555,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1475,
																					"src": "5296:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 1556,
																						"name": "ngoWallets",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 956,
																						"src": "5302:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 1558,
																					"indexExpression": {
																						"id": 1557,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1542,
																						"src": "5313:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5302:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1559,
																					"name": "share",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1519,
																					"src": "5317:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1552,
																					"name": "super",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967271,
																					"src": "5282:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_super$_HumAidv2_$1589_$",
																						"typeString": "type(contract super HumAidv2)"
																					}
																				},
																				"id": 1554,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5288:7:6",
																				"memberName": "_update",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 606,
																				"src": "5282:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5282:41:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1561,
																		"nodeType": "ExpressionStatement",
																		"src": "5282:41:6"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1545,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1542,
																	"src": "5235:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1546,
																		"name": "ngoWallets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 956,
																		"src": "5239:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5250:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5239:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5235:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1563,
															"initializationExpression": {
																"assignments": [
																	1542
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1542,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "5228:1:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1563,
																		"src": "5223:6:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1541,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "5223:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1544,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5232:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5223:10:6"
															},
															"loopExpression": {
																"expression": {
																	"id": 1550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "5258:3:6",
																	"subExpression": {
																		"id": 1549,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1542,
																		"src": "5260:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1551,
																"nodeType": "ExpressionStatement",
																"src": "5258:3:6"
															},
															"nodeType": "ForStatement",
															"src": "5218:121:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1564,
																	"name": "remainder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "5359:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5371:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5359:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1576,
															"nodeType": "IfStatement",
															"src": "5355:100:6",
															"trueBody": {
																"id": 1575,
																"nodeType": "Block",
																"src": "5374:81:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1570,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1475,
																					"src": "5407:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1571,
																					"name": "treasuryWallet",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 962,
																					"src": "5413:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1572,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1532,
																					"src": "5429:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1567,
																					"name": "super",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967271,
																					"src": "5393:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_super$_HumAidv2_$1589_$",
																						"typeString": "type(contract super HumAidv2)"
																					}
																				},
																				"id": 1569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5399:7:6",
																				"memberName": "_update",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 606,
																				"src": "5393:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5393:46:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1574,
																		"nodeType": "ExpressionStatement",
																		"src": "5393:46:6"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1580,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "5485:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1581,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "5491:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1582,
																		"name": "amountAfterFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "5495:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1577,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "5471:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_HumAidv2_$1589_$",
																			"typeString": "type(contract super HumAidv2)"
																		}
																	},
																	"id": 1579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5477:7:6",
																	"memberName": "_update",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 606,
																	"src": "5471:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5471:39:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1584,
															"nodeType": "ExpressionStatement",
															"src": "5471:39:6"
														}
													]
												},
												"id": 1586,
												"nodeType": "IfStatement",
												"src": "4805:717:6",
												"trueBody": {
													"id": 1502,
													"nodeType": "Block",
													"src": "4880:57:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1497,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "4909:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1498,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "4915:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1499,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1479,
																		"src": "4919:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1494,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "4895:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_HumAidv2_$1589_$",
																			"typeString": "type(contract super HumAidv2)"
																		}
																	},
																	"id": 1496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4901:7:6",
																	"memberName": "_update",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 606,
																	"src": "4895:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4895:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1501,
															"nodeType": "ExpressionStatement",
															"src": "4895:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "4623:89:6",
										"text": " Override OpenZeppelin v5 _update instead of _transfer for fee logic."
									},
									"id": 1588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "4727:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1481,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4785:8:6"
									},
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4743:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "4735:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4757:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "4749:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4749:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4769:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "4761:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4761:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:41:6"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4794:0:6"
									},
									"scope": 1589,
									"src": "4718:811:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1590,
							"src": "174:5358:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								1129,
								1265
							]
						}
					],
					"src": "33:5501:6"
				},
				"id": 6
			}
		}
	}
}